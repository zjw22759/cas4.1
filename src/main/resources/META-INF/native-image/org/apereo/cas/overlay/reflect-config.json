[
{
  "name":"[B"}
,
{
  "name":"[C"}
,
{
  "name":"[D"}
,
{
  "name":"[F"}
,
{
  "name":"[I"}
,
{
  "name":"[J"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.type.TypeModifier;"}
,
{
  "name":"[Ljava.io.Serializable;"}
,
{
  "name":"[Ljava.lang.CharSequence;"}
,
{
  "name":"[Ljava.lang.Class;",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"[Ljava.lang.Comparable;"}
,
{
  "name":"[Ljava.lang.Double;"}
,
{
  "name":"[Ljava.lang.Object;",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"[Ljava.lang.String;",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"[Ljava.lang.annotation.Annotation;"}
,
{
  "name":"[Ljava.lang.reflect.Constructor;"}
,
{
  "name":"[Ljava.lang.reflect.TypeVariable;"}
,
{
  "name":"[Ljavax.management.openmbean.CompositeData;"}
,
{
  "name":"[Lorg.codehaus.groovy.ast.Parameter;"}
,
{
  "name":"[Lorg.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure;"}
,
{
  "name":"[Lorg.springframework.boot.context.config.ConfigDataLocation;"}
,
{
  "name":"[Lorg.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer;"}
,
{
  "name":"[Lorg.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider;"}
,
{
  "name":"[Lorg.springframework.core.annotation.AnnotationAttributes;"}
,
{
  "name":"[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"}
,
{
  "name":"[Lorg.springframework.web.bind.annotation.RequestMethod;"}
,
{
  "name":"[Lsun.security.pkcs.SignerInfo;"}
,
{
  "name":"[S"}
,
{
  "name":"[Z"}
,
{
  "name":"boolean",
  "queryAllDeclaredMethods":true}
,
{
  "name":"ch.qos.logback.classic.Logger"}
,
{
  "name":"ch.qos.logback.classic.LoggerContext"}
,
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.annotation.JacksonAnnotation",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.fasterxml.jackson.annotation.JsonAutoDetect$Value"}
,
{
  "name":"com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility"}
,
{
  "name":"com.fasterxml.jackson.annotation.JsonFilter",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.annotation.JsonIgnore",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"content","parameterTypes":[] }, 
    {"name":"contentFilter","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }, 
    {"name":"valueFilter","parameterTypes":[] }
  ]}
,
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude$Include"}
,
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude$Value"}
,
{
  "name":"com.fasterxml.jackson.annotation.JsonProperty",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"access","parameterTypes":[] }],
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.annotation.JsonSetter$Value"}
,
{
  "name":"com.fasterxml.jackson.annotation.JsonTypeInfo",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"defaultImpl","parameterTypes":[] }, 
    {"name":"include","parameterTypes":[] }, 
    {"name":"use","parameterTypes":[] }
  ]}
,
{
  "name":"com.fasterxml.jackson.annotation.JsonTypeInfo$As"}
,
{
  "name":"com.fasterxml.jackson.annotation.PropertyAccessor"}
,
{
  "name":"com.fasterxml.jackson.core.Base64Variant"}
,
{
  "name":"com.fasterxml.jackson.core.FormatSchema"}
,
{
  "name":"com.fasterxml.jackson.core.JsonEncoding"}
,
{
  "name":"com.fasterxml.jackson.core.JsonFactory"}
,
{
  "name":"com.fasterxml.jackson.core.JsonFactory$Feature"}
,
{
  "name":"com.fasterxml.jackson.core.JsonGenerator"}
,
{
  "name":"com.fasterxml.jackson.core.JsonGenerator$Feature"}
,
{
  "name":"com.fasterxml.jackson.core.JsonParser"}
,
{
  "name":"com.fasterxml.jackson.core.JsonParser$Feature"}
,
{
  "name":"com.fasterxml.jackson.core.JsonProcessingException"}
,
{
  "name":"com.fasterxml.jackson.core.JsonToken"}
,
{
  "name":"com.fasterxml.jackson.core.ObjectCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getJsonFactory","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.core.PrettyPrinter"}
,
{
  "name":"com.fasterxml.jackson.core.StreamReadFeature"}
,
{
  "name":"com.fasterxml.jackson.core.StreamWriteFeature"}
,
{
  "name":"com.fasterxml.jackson.core.TreeCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"com.fasterxml.jackson.core.TreeNode"}
,
{
  "name":"com.fasterxml.jackson.core.Version"}
,
{
  "name":"com.fasterxml.jackson.core.Versioned",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"com.fasterxml.jackson.core.exc.StreamReadException"}
,
{
  "name":"com.fasterxml.jackson.core.exc.StreamWriteException"}
,
{
  "name":"com.fasterxml.jackson.core.io.CharacterEscapes"}
,
{
  "name":"com.fasterxml.jackson.core.type.ResolvedType"}
,
{
  "name":"com.fasterxml.jackson.core.type.TypeReference"}
,
{
  "name":"com.fasterxml.jackson.databind.AnnotationIntrospector"}
,
{
  "name":"com.fasterxml.jackson.databind.DatabindException"}
,
{
  "name":"com.fasterxml.jackson.databind.DeserializationConfig"}
,
{
  "name":"com.fasterxml.jackson.databind.DeserializationContext"}
,
{
  "name":"com.fasterxml.jackson.databind.DeserializationFeature"}
,
{
  "name":"com.fasterxml.jackson.databind.InjectableValues"}
,
{
  "name":"com.fasterxml.jackson.databind.JavaType"}
,
{
  "name":"com.fasterxml.jackson.databind.JsonDeserializer"}
,
{
  "name":"com.fasterxml.jackson.databind.JsonMappingException"}
,
{
  "name":"com.fasterxml.jackson.databind.JsonNode"}
,
{
  "name":"com.fasterxml.jackson.databind.JsonSerializer"}
,
{
  "name":"com.fasterxml.jackson.databind.KeyDeserializer"}
,
{
  "name":"com.fasterxml.jackson.databind.MapperFeature"}
,
{
  "name":"com.fasterxml.jackson.databind.MappingIterator"}
,
{
  "name":"com.fasterxml.jackson.databind.Module",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getDependencies","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.databind.Module$SetupContext"}
,
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"createArrayNode","parameterTypes":[] }, 
    {"name":"createObjectNode","parameterTypes":[] }, 
    {"name":"getFactory","parameterTypes":[] }, 
    {"name":"missingNode","parameterTypes":[] }, 
    {"name":"nullNode","parameterTypes":[] }, 
    {"name":"readTree","parameterTypes":["com.fasterxml.jackson.core.JsonParser"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, 
    {"name":"treeAsTokens","parameterTypes":["com.fasterxml.jackson.core.TreeNode"] }, 
    {"name":"treeToValue","parameterTypes":["com.fasterxml.jackson.core.TreeNode","java.lang.Class"] }, 
    {"name":"version","parameterTypes":[] }, 
    {"name":"writeTree","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","com.fasterxml.jackson.core.TreeNode"] }, 
    {"name":"writeValue","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","java.lang.Object"] }
  ]}
,
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping"}
,
{
  "name":"com.fasterxml.jackson.databind.ObjectReader"}
,
{
  "name":"com.fasterxml.jackson.databind.ObjectWriter"}
,
{
  "name":"com.fasterxml.jackson.databind.PropertyNamingStrategy"}
,
{
  "name":"com.fasterxml.jackson.databind.SerializationConfig"}
,
{
  "name":"com.fasterxml.jackson.databind.SerializationFeature"}
,
{
  "name":"com.fasterxml.jackson.databind.SerializerProvider"}
,
{
  "name":"com.fasterxml.jackson.databind.cfg.ConstructorDetector"}
,
{
  "name":"com.fasterxml.jackson.databind.cfg.ContextAttributes"}
,
{
  "name":"com.fasterxml.jackson.databind.cfg.HandlerInstantiator"}
,
{
  "name":"com.fasterxml.jackson.databind.cfg.MutableCoercionConfig"}
,
{
  "name":"com.fasterxml.jackson.databind.cfg.MutableConfigOverride"}
,
{
  "name":"com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"}
,
{
  "name":"com.fasterxml.jackson.databind.deser.DefaultDeserializationContext"}
,
{
  "name":"com.fasterxml.jackson.databind.deser.DeserializationProblemHandler"}
,
{
  "name":"com.fasterxml.jackson.databind.deser.ValueInstantiator"}
,
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider"}
,
{
  "name":"com.fasterxml.jackson.databind.introspect.ClassIntrospector"}
,
{
  "name":"com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver"}
,
{
  "name":"com.fasterxml.jackson.databind.introspect.VisibilityChecker"}
,
{
  "name":"com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper"}
,
{
  "name":"com.fasterxml.jackson.databind.jsonschema.JsonSchema"}
,
{
  "name":"com.fasterxml.jackson.databind.jsontype.NamedType"}
,
{
  "name":"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator"}
,
{
  "name":"com.fasterxml.jackson.databind.jsontype.SubtypeResolver"}
,
{
  "name":"com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder"}
,
{
  "name":"com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"}
,
{
  "name":"com.fasterxml.jackson.databind.module.SimpleDeserializers"}
,
{
  "name":"com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"}
,
{
  "name":"com.fasterxml.jackson.databind.module.SimpleModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addAbstractTypeMapping","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"addDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonDeserializer"] }, 
    {"name":"addKeyDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.KeyDeserializer"] }, 
    {"name":"addKeySerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addSerializer","parameterTypes":["com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addSerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addValueInstantiator","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.deser.ValueInstantiator"] }, 
    {"name":"getModuleName","parameterTypes":[] }, 
    {"name":"getTypeId","parameterTypes":[] }, 
    {"name":"registerSubtypes","parameterTypes":["java.util.Collection"] }, 
    {"name":"registerSubtypes","parameterTypes":["com.fasterxml.jackson.databind.jsontype.NamedType[]"] }, 
    {"name":"registerSubtypes","parameterTypes":["java.lang.Class[]"] }, 
    {"name":"setAbstractTypes","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"] }, 
    {"name":"setDeserializerModifier","parameterTypes":["com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"] }, 
    {"name":"setDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleDeserializers"] }, 
    {"name":"setKeyDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"] }, 
    {"name":"setKeySerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, 
    {"name":"setMixInAnnotation","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"setSerializerModifier","parameterTypes":["com.fasterxml.jackson.databind.ser.BeanSerializerModifier"] }, 
    {"name":"setSerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, 
    {"name":"setValueInstantiators","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleValueInstantiators"] }, 
    {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, 
    {"name":"version","parameterTypes":[] }
  ]}
,
{
  "name":"com.fasterxml.jackson.databind.module.SimpleSerializers"}
,
{
  "name":"com.fasterxml.jackson.databind.module.SimpleValueInstantiators"}
,
{
  "name":"com.fasterxml.jackson.databind.node.ArrayNode"}
,
{
  "name":"com.fasterxml.jackson.databind.node.JsonNodeFactory"}
,
{
  "name":"com.fasterxml.jackson.databind.node.ObjectNode"}
,
{
  "name":"com.fasterxml.jackson.databind.ser.BeanSerializerModifier"}
,
{
  "name":"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"}
,
{
  "name":"com.fasterxml.jackson.databind.ser.FilterProvider"}
,
{
  "name":"com.fasterxml.jackson.databind.ser.SerializerFactory"}
,
{
  "name":"com.fasterxml.jackson.databind.ser.std.StdSerializer"}
,
{
  "name":"com.fasterxml.jackson.databind.type.LogicalType"}
,
{
  "name":"com.fasterxml.jackson.databind.type.TypeFactory"}
,
{
  "name":"com.fasterxml.jackson.dataformat.xml.XmlMapper"}
,
{
  "name":"com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.datatype.joda.JodaModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.module.jaxb.deser.DataHandlerJsonDeserializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.module.jaxb.ser.DataHandlerJsonSerializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef",
  "fields":[{"name":"drainStatus"}]}
,
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]}
,
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]}
,
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]}
,
{
  "name":"com.github.benmanes.caffeine.cache.BoundedLocalCache"}
,
{
  "name":"com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalManualCache",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"cache","parameterTypes":[] }, 
    {"name":"policy","parameterTypes":[] }
  ]}
,
{
  "name":"com.github.benmanes.caffeine.cache.Cache",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"com.github.benmanes.caffeine.cache.Caffeine"}
,
{
  "name":"com.github.benmanes.caffeine.cache.Expiry"}
,
{
  "name":"com.github.benmanes.caffeine.cache.LocalManualCache",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"com.github.benmanes.caffeine.cache.PS",
  "fields":[
    {"name":"key"}, 
    {"name":"value"}
  ]}
,
{
  "name":"com.github.benmanes.caffeine.cache.PSA",
  "fields":[{"name":"accessTime"}]}
,
{
  "name":"com.github.benmanes.caffeine.cache.PSAMS",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.github.benmanes.caffeine.cache.PSW",
  "fields":[{"name":"writeTime"}]}
,
{
  "name":"com.github.benmanes.caffeine.cache.PSWMS",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.github.benmanes.caffeine.cache.Policy"}
,
{
  "name":"com.github.benmanes.caffeine.cache.RemovalCause"}
,
{
  "name":"com.github.benmanes.caffeine.cache.RemovalListener"}
,
{
  "name":"com.github.benmanes.caffeine.cache.SSLMSA",
  "methods":[{"name":"<init>","parameterTypes":["com.github.benmanes.caffeine.cache.Caffeine","com.github.benmanes.caffeine.cache.CacheLoader","boolean"] }]}
,
{
  "name":"com.github.benmanes.caffeine.cache.SSMSW",
  "methods":[{"name":"<init>","parameterTypes":["com.github.benmanes.caffeine.cache.Caffeine","com.github.benmanes.caffeine.cache.CacheLoader","boolean"] }]}
,
{
  "name":"com.github.benmanes.caffeine.cache.StripedBuffer",
  "fields":[{"name":"tableBusy"}]}
,
{
  "name":"com.github.benmanes.caffeine.cache.stats.CacheStats"}
,
{
  "name":"com.google.common.base.Optional"}
,
{
  "name":"com.google.gson.ExclusionStrategy"}
,
{
  "name":"com.google.gson.FieldNamingPolicy"}
,
{
  "name":"com.google.gson.FieldNamingStrategy"}
,
{
  "name":"com.google.gson.Gson",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"toString","parameterTypes":[] }]}
,
{
  "name":"com.google.gson.GsonBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"com.google.gson.JsonElement"}
,
{
  "name":"com.google.gson.JsonIOException"}
,
{
  "name":"com.google.gson.JsonSyntaxException"}
,
{
  "name":"com.google.gson.LongSerializationPolicy"}
,
{
  "name":"com.google.gson.ToNumberStrategy"}
,
{
  "name":"com.google.gson.TypeAdapter"}
,
{
  "name":"com.google.gson.TypeAdapterFactory"}
,
{
  "name":"com.google.gson.internal.Excluder"}
,
{
  "name":"com.google.gson.reflect.TypeToken"}
,
{
  "name":"com.google.gson.stream.JsonReader"}
,
{
  "name":"com.google.gson.stream.JsonWriter"}
,
{
  "name":"com.nimbusds.oauth2.sdk.Scope"}
,
{
  "name":"com.nimbusds.oauth2.sdk.Scope$Value"}
,
{
  "name":"com.nimbusds.oauth2.sdk.pkce.CodeVerifier"}
,
{
  "name":"com.nimbusds.oauth2.sdk.token.BearerAccessToken"}
,
{
  "name":"com.nimbusds.oauth2.sdk.token.Token"}
,
{
  "name":"com.sun.crypto.provider.HmacPKCS12PBECore$HmacPKCS12PBE_SHA1",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.PBEKeyFactory$PBEWithMD5AndDES",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.PBEParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndDESede",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndRC2_40",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.TlsMasterSecretGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.el.ExpressionFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.management.GarbageCollectionNotificationInfo"}
,
{
  "name":"com.sun.management.GarbageCollectorMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"com.sun.management.GcInfo",
  "queryAllPublicMethods":true,
  "fields":[
    {"name":"builder"}, 
    {"name":"extAttributes"}
  ]}
,
{
  "name":"com.sun.management.HotSpotDiagnosticMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"com.sun.management.OperatingSystemMXBean",
  "queriedMethods":[
    {"name":"getProcessCpuLoad","parameterTypes":[] }, 
    {"name":"getSystemCpuLoad","parameterTypes":[] }
  ]}
,
{
  "name":"com.sun.management.ThreadMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"com.sun.management.UnixOperatingSystemMXBean",
  "queryAllPublicMethods":true,
  "queriedMethods":[
    {"name":"getMaxFileDescriptorCount","parameterTypes":[] }, 
    {"name":"getOpenFileDescriptorCount","parameterTypes":[] }
  ]}
,
{
  "name":"com.sun.management.VMOption",
  "queryAllPublicMethods":true}
,
{
  "name":"com.sun.management.internal.GarbageCollectorExtImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"com.sun.management.internal.HotSpotDiagnostic",
  "queryAllPublicConstructors":true}
,
{
  "name":"com.sun.management.internal.HotSpotThreadImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"com.sun.management.internal.OperatingSystemImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"groovy.io.FileType"}
,
{
  "name":"groovy.lang.Buildable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"groovy.lang.Closure",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"groovy.lang.Closure$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"groovy.lang.EmptyRange"}
,
{
  "name":"groovy.lang.ExpandoMetaClass",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"groovy.lang.GString",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"build","parameterTypes":["groovy.lang.GroovyObject"] }, 
    {"name":"charAt","parameterTypes":["int"] }, 
    {"name":"compareTo","parameterTypes":["java.lang.Object"] }, 
    {"name":"length","parameterTypes":[] }, 
    {"name":"subSequence","parameterTypes":["int","int"] }, 
    {"name":"toString","parameterTypes":[] }, 
    {"name":"writeTo","parameterTypes":["java.io.Writer"] }
  ]}
,
{
  "name":"groovy.lang.GroovyCallable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"groovy.lang.GroovyObject",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"groovy.lang.GroovyObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"groovy.lang.GroovySystem"}
,
{
  "name":"groovy.lang.IntRange"}
,
{
  "name":"groovy.lang.ListWithDefault"}
,
{
  "name":"groovy.lang.MetaClass",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"groovy.lang.MetaClassImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"groovy.lang.MetaMethod",
  "queryAllDeclaredMethods":true}
,
{
  "name":"groovy.lang.MetaObjectProtocol",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"groovy.lang.MetaProperty",
  "queryAllDeclaredMethods":true}
,
{
  "name":"groovy.lang.MutableMetaClass",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"groovy.lang.ObjectRange"}
,
{
  "name":"groovy.lang.Range",
  "queryAllPublicMethods":true}
,
{
  "name":"groovy.lang.SpreadMap"}
,
{
  "name":"groovy.lang.Writable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"groovy.lang.groovydoc.Groovydoc"}
,
{
  "name":"groovy.lang.groovydoc.GroovydocHolder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"groovy.sql.GroovyResultSet",
  "queryAllPublicMethods":true}
,
{
  "name":"groovy.text.TemplateEngine"}
,
{
  "name":"groovy.text.markup.MarkupTemplateEngine"}
,
{
  "name":"groovy.text.markup.TemplateConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getAutoIndentString","parameterTypes":[] }, 
    {"name":"getBaseTemplateClass","parameterTypes":[] }, 
    {"name":"getDeclarationEncoding","parameterTypes":[] }, 
    {"name":"getLocale","parameterTypes":[] }, 
    {"name":"getNewLineString","parameterTypes":[] }, 
    {"name":"isAutoEscape","parameterTypes":[] }, 
    {"name":"isAutoIndent","parameterTypes":[] }, 
    {"name":"isAutoNewLine","parameterTypes":[] }, 
    {"name":"isCacheTemplates","parameterTypes":[] }, 
    {"name":"isExpandEmptyElements","parameterTypes":[] }, 
    {"name":"isUseDoubleQuotes","parameterTypes":[] }, 
    {"name":"setAutoEscape","parameterTypes":["boolean"] }, 
    {"name":"setAutoIndent","parameterTypes":["boolean"] }, 
    {"name":"setAutoIndentString","parameterTypes":["java.lang.String"] }, 
    {"name":"setAutoNewLine","parameterTypes":["boolean"] }, 
    {"name":"setBaseTemplateClass","parameterTypes":["java.lang.Class"] }, 
    {"name":"setCacheTemplates","parameterTypes":["boolean"] }, 
    {"name":"setDeclarationEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setExpandEmptyElements","parameterTypes":["boolean"] }, 
    {"name":"setNewLineString","parameterTypes":["java.lang.String"] }, 
    {"name":"setUseDoubleQuotes","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"groovy.transform.CompilationUnitAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"groovy.transform.CompileStatic",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"groovy.transform.Generated",
  "queryAllDeclaredMethods":true}
,
{
  "name":"groovy.transform.Internal",
  "queryAllDeclaredMethods":true}
,
{
  "name":"groovy.util.BufferedIterator"}
,
{
  "name":"groovyjarjarasm.asm.Opcodes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"io.micrometer.core.annotation.Timed"}
,
{
  "name":"io.micrometer.core.instrument.Clock",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"io.micrometer.core.instrument.Clock$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"monotonicTime","parameterTypes":[] }, 
    {"name":"wallTime","parameterTypes":[] }
  ]}
,
{
  "name":"io.micrometer.core.instrument.Counter"}
,
{
  "name":"io.micrometer.core.instrument.DistributionSummary"}
,
{
  "name":"io.micrometer.core.instrument.FunctionCounter"}
,
{
  "name":"io.micrometer.core.instrument.FunctionTimer"}
,
{
  "name":"io.micrometer.core.instrument.Gauge"}
,
{
  "name":"io.micrometer.core.instrument.LongTaskTimer"}
,
{
  "name":"io.micrometer.core.instrument.Meter"}
,
{
  "name":"io.micrometer.core.instrument.Meter$Id"}
,
{
  "name":"io.micrometer.core.instrument.Meter$Type"}
,
{
  "name":"io.micrometer.core.instrument.MeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }],
  "queriedMethods":[
    {"name":"clear","parameterTypes":[] }, 
    {"name":"config","parameterTypes":[] }, 
    {"name":"counter","parameterTypes":["java.lang.String","java.lang.Iterable"] }, 
    {"name":"counter","parameterTypes":["java.lang.String","java.lang.String[]"] }, 
    {"name":"find","parameterTypes":["java.lang.String"] }, 
    {"name":"forEachMeter","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Number"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Object","java.util.function.ToDoubleFunction"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Number"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Object","java.util.function.ToDoubleFunction"] }, 
    {"name":"gaugeCollectionSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Collection"] }, 
    {"name":"gaugeMapSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Map"] }, 
    {"name":"get","parameterTypes":["java.lang.String"] }, 
    {"name":"getMeters","parameterTypes":[] }, 
    {"name":"isClosed","parameterTypes":[] }, 
    {"name":"more","parameterTypes":[] }, 
    {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter"] }, 
    {"name":"removeByPreFilterId","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"summary","parameterTypes":["java.lang.String","java.lang.Iterable"] }, 
    {"name":"summary","parameterTypes":["java.lang.String","java.lang.String[]"] }, 
    {"name":"timer","parameterTypes":["java.lang.String","java.lang.Iterable"] }, 
    {"name":"timer","parameterTypes":["java.lang.String","java.lang.String[]"] }
  ]}
,
{
  "name":"io.micrometer.core.instrument.MeterRegistry$Config"}
,
{
  "name":"io.micrometer.core.instrument.MeterRegistry$More"}
,
{
  "name":"io.micrometer.core.instrument.Tag"}
,
{
  "name":"io.micrometer.core.instrument.Tags"}
,
{
  "name":"io.micrometer.core.instrument.TimeGauge"}
,
{
  "name":"io.micrometer.core.instrument.Timer"}
,
{
  "name":"io.micrometer.core.instrument.Timer$Builder"}
,
{
  "name":"io.micrometer.core.instrument.binder.MeterBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"}
,
{
  "name":"io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]}
,
{
  "name":"io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics"}
,
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, 
    {"name":"close","parameterTypes":[] }
  ]}
,
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, 
    {"name":"close","parameterTypes":[] }
  ]}
,
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]}
,
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]}
,
{
  "name":"io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"}
,
{
  "name":"io.micrometer.core.instrument.binder.logging.Log4j2Metrics"}
,
{
  "name":"io.micrometer.core.instrument.binder.logging.LogbackMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, 
    {"name":"close","parameterTypes":[] }
  ]}
,
{
  "name":"io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]}
,
{
  "name":"io.micrometer.core.instrument.binder.system.ProcessorMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]}
,
{
  "name":"io.micrometer.core.instrument.binder.system.UptimeMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]}
,
{
  "name":"io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"}
,
{
  "name":"io.micrometer.core.instrument.composite.CompositeMeterRegistry"}
,
{
  "name":"io.micrometer.core.instrument.config.MeterFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"io.micrometer.core.instrument.config.MeterFilter$9",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }
  ]}
,
{
  "name":"io.micrometer.core.instrument.config.MeterFilterReply"}
,
{
  "name":"io.micrometer.core.instrument.config.MeterRegistryConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"io.micrometer.core.instrument.config.NamingConvention"}
,
{
  "name":"io.micrometer.core.instrument.config.validate.Validated"}
,
{
  "name":"io.micrometer.core.instrument.config.validate.ValidationException"}
,
{
  "name":"io.micrometer.core.instrument.distribution.DistributionStatisticConfig"}
,
{
  "name":"io.micrometer.core.instrument.distribution.TimeWindowSum"}
,
{
  "name":"io.micrometer.core.instrument.distribution.pause.PauseDetector"}
,
{
  "name":"io.micrometer.core.instrument.search.RequiredSearch"}
,
{
  "name":"io.micrometer.core.instrument.search.Search"}
,
{
  "name":"io.micrometer.core.instrument.simple.CountingMode"}
,
{
  "name":"io.micrometer.core.instrument.simple.SimpleConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"io.micrometer.core.instrument.simple.SimpleMeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"io.micrometer.core.lang.NonNullApi",
  "queryAllDeclaredMethods":true}
,
{
  "name":"io.micrometer.core.lang.NonNullFields",
  "queryAllDeclaredMethods":true}
,
{
  "name":"io.micrometer.core.lang.Nullable",
  "queryAllDeclaredMethods":true}
,
{
  "name":"io.netty.buffer.PooledByteBufAllocator"}
,
{
  "name":"io.netty.util.NettyRuntime"}
,
{
  "name":"java.beans.PropertyVetoException"}
,
{
  "name":"java.beans.Transient",
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.io.BufferedInputStream"}
,
{
  "name":"java.io.BufferedOutputStream"}
,
{
  "name":"java.io.BufferedReader"}
,
{
  "name":"java.io.BufferedWriter"}
,
{
  "name":"java.io.ByteArrayOutputStream"}
,
{
  "name":"java.io.Closeable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.io.DataInput",
  "queryAllPublicMethods":true}
,
{
  "name":"java.io.DataInputStream"}
,
{
  "name":"java.io.DataOutput",
  "queryAllPublicMethods":true}
,
{
  "name":"java.io.DataOutputStream"}
,
{
  "name":"java.io.File"}
,
{
  "name":"java.io.FilePermission"}
,
{
  "name":"java.io.FilterInputStream"}
,
{
  "name":"java.io.Flushable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"java.io.IOException"}
,
{
  "name":"java.io.InputStream",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"close","parameterTypes":[] }]}
,
{
  "name":"java.io.InvalidObjectException"}
,
{
  "name":"java.io.ObjectInput",
  "queryAllPublicMethods":true}
,
{
  "name":"java.io.ObjectInputStream"}
,
{
  "name":"java.io.ObjectOutput",
  "queryAllPublicMethods":true}
,
{
  "name":"java.io.ObjectOutputStream"}
,
{
  "name":"java.io.ObjectStreamConstants",
  "queryAllPublicMethods":true}
,
{
  "name":"java.io.OutputStream",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"flush","parameterTypes":[] }
  ]}
,
{
  "name":"java.io.PrintStream"}
,
{
  "name":"java.io.PrintWriter"}
,
{
  "name":"java.io.Reader",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"read","parameterTypes":["java.nio.CharBuffer"] }
  ]}
,
{
  "name":"java.io.Serializable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.io.StreamCorruptedException"}
,
{
  "name":"java.io.Writer",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"append","parameterTypes":["char"] }, 
    {"name":"append","parameterTypes":["java.lang.CharSequence"] }, 
    {"name":"append","parameterTypes":["java.lang.CharSequence","int","int"] }, 
    {"name":"close","parameterTypes":[] }, 
    {"name":"flush","parameterTypes":[] }
  ]}
,
{
  "name":"java.lang.AbstractStringBuilder",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"append","parameterTypes":["char"] }, 
    {"name":"append","parameterTypes":["java.lang.CharSequence"] }, 
    {"name":"append","parameterTypes":["java.lang.CharSequence","int","int"] }, 
    {"name":"charAt","parameterTypes":["int"] }, 
    {"name":"length","parameterTypes":[] }, 
    {"name":"subSequence","parameterTypes":["int","int"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"java.lang.Appendable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.AutoCloseable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.lang.Boolean",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.Byte",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.CharSequence",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.Character",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.Class",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getClassLoader","parameterTypes":[] }, 
    {"name":"getModule","parameterTypes":[] }
  ]}
,
{
  "name":"java.lang.ClassLoader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.ClassNotFoundException"}
,
{
  "name":"java.lang.CloneNotSupportedException"}
,
{
  "name":"java.lang.Cloneable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.lang.Comparable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.lang.Deprecated"}
,
{
  "name":"java.lang.Double",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.Enum",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"compareTo","parameterTypes":["java.lang.Object"] }]}
,
{
  "name":"java.lang.Exception"}
,
{
  "name":"java.lang.Float",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.IllegalAccessException"}
,
{
  "name":"java.lang.IllegalArgumentException"}
,
{
  "name":"java.lang.IllegalStateException"}
,
{
  "name":"java.lang.Integer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.InterruptedException"}
,
{
  "name":"java.lang.Iterable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.lang.Long",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.Module",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"isNamed","parameterTypes":[] }],
  "queriedMethods":[
    {"name":"getName","parameterTypes":[] }, 
    {"name":"isExported","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"java.lang.ModuleLayer",
  "queriedMethods":[
    {"name":"boot","parameterTypes":[] }, 
    {"name":"configuration","parameterTypes":[] }
  ]}
,
{
  "name":"java.lang.Number",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getClass","parameterTypes":[] }]}
,
{
  "name":"java.lang.Process",
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.lang.Readable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.Runnable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.lang.Runtime",
  "methods":[{"name":"version","parameterTypes":[] }]}
,
{
  "name":"java.lang.Runtime$Version",
  "methods":[{"name":"major","parameterTypes":[] }]}
,
{
  "name":"java.lang.RuntimeException"}
,
{
  "name":"java.lang.RuntimePermission"}
,
{
  "name":"java.lang.SafeVarargs"}
,
{
  "name":"java.lang.Short",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.StackTraceElement",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.String",
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.lang.StringBuffer"}
,
{
  "name":"java.lang.StringBuilder"}
,
{
  "name":"java.lang.Thread",
  "fields":[{"name":"threadLocalRandomProbe"}]}
,
{
  "name":"java.lang.Thread$State"}
,
{
  "name":"java.lang.ThreadGroup"}
,
{
  "name":"java.lang.Throwable"}
,
{
  "name":"java.lang.Void",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.annotation.Annotation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.annotation.Documented",
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.lang.annotation.Inherited",
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.lang.annotation.Repeatable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"java.lang.annotation.Retention",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"java.lang.annotation.Target",
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.lang.invoke.CallSite"}
,
{
  "name":"java.lang.invoke.LambdaForm$Hidden"}
,
{
  "name":"java.lang.invoke.SerializedLambda"}
,
{
  "name":"java.lang.management.BufferPoolMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.ClassLoadingMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.CompilationMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.LockInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.ManagementPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]}
,
{
  "name":"java.lang.management.MemoryMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.MemoryManagerMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.MemoryPoolMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.MemoryUsage",
  "queryAllPublicMethods":true,
  "methods":[{"name":"from","parameterTypes":["javax.management.openmbean.CompositeData"] }]}
,
{
  "name":"java.lang.management.MonitorInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.OperatingSystemMXBean"}
,
{
  "name":"java.lang.management.PlatformLoggingMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.RuntimeMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.ThreadInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.ThreadMXBean"}
,
{
  "name":"java.lang.module.Configuration",
  "queriedMethods":[{"name":"modules","parameterTypes":[] }]}
,
{
  "name":"java.lang.module.ModuleReference",
  "queriedMethods":[{"name":"location","parameterTypes":[] }]}
,
{
  "name":"java.lang.module.ResolvedModule",
  "queriedMethods":[{"name":"reference","parameterTypes":[] }]}
,
{
  "name":"java.lang.reflect.AccessibleObject",
  "fields":[{"name":"override"}],
  "queriedMethods":[
    {"name":"canAccess","parameterTypes":["java.lang.Object"] }, 
    {"name":"getAnnotations","parameterTypes":[] }
  ]}
,
{
  "name":"java.lang.reflect.AnnotatedElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.reflect.Constructor"}
,
{
  "name":"java.lang.reflect.Executable",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"getAnnotation","parameterTypes":["java.lang.Class"] }, 
    {"name":"getDeclaredAnnotations","parameterTypes":[] }, 
    {"name":"getDeclaringClass","parameterTypes":[] }, 
    {"name":"getModifiers","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getTypeParameters","parameterTypes":[] }, 
    {"name":"isSynthetic","parameterTypes":[] }
  ]}
,
{
  "name":"java.lang.reflect.Field"}
,
{
  "name":"java.lang.reflect.GenericArrayType",
  "methods":[{"name":"getGenericComponentType","parameterTypes":[] }]}
,
{
  "name":"java.lang.reflect.GenericDeclaration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.reflect.InaccessibleObjectException"}
,
{
  "name":"java.lang.reflect.InvocationHandler",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.reflect.Member",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.reflect.Method"}
,
{
  "name":"java.lang.reflect.ParameterizedType",
  "methods":[
    {"name":"getActualTypeArguments","parameterTypes":[] }, 
    {"name":"getRawType","parameterTypes":[] }
  ]}
,
{
  "name":"java.lang.reflect.Proxy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.reflect.Type",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.reflect.TypeVariable",
  "methods":[
    {"name":"getBounds","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }
  ]}
,
{
  "name":"java.lang.reflect.WildcardType",
  "methods":[
    {"name":"getLowerBounds","parameterTypes":[] }, 
    {"name":"getUpperBounds","parameterTypes":[] }
  ]}
,
{
  "name":"java.math.BigDecimal"}
,
{
  "name":"java.math.BigInteger"}
,
{
  "name":"java.net.InetAddress"}
,
{
  "name":"java.net.InetSocketAddress"}
,
{
  "name":"java.net.NetPermission"}
,
{
  "name":"java.net.ServerSocket"}
,
{
  "name":"java.net.Socket"}
,
{
  "name":"java.net.SocketPermission"}
,
{
  "name":"java.net.URI"}
,
{
  "name":"java.net.URL"}
,
{
  "name":"java.net.URLClassLoader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"java.net.URLConnection",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"setDefaultUseCaches","parameterTypes":["java.lang.String","boolean"] }]}
,
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]}
,
{
  "name":"java.nio.Buffer",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"isReadOnly","parameterTypes":[] }]}
,
{
  "name":"java.nio.ByteBuffer",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"array","parameterTypes":[] }, 
    {"name":"arrayOffset","parameterTypes":[] }, 
    {"name":"compareTo","parameterTypes":["java.lang.Object"] }, 
    {"name":"duplicate","parameterTypes":[] }, 
    {"name":"hasArray","parameterTypes":[] }, 
    {"name":"isDirect","parameterTypes":[] }, 
    {"name":"slice","parameterTypes":[] }
  ]}
,
{
  "name":"java.nio.channels.ReadableByteChannel"}
,
{
  "name":"java.nio.charset.Charset",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"compareTo","parameterTypes":["java.lang.Object"] }]}
,
{
  "name":"java.security.AlgorithmParametersSpi"}
,
{
  "name":"java.security.AllPermission"}
,
{
  "name":"java.security.GeneralSecurityException"}
,
{
  "name":"java.security.Key"}
,
{
  "name":"java.security.KeyStoreSpi"}
,
{
  "name":"java.security.MessageDigest"}
,
{
  "name":"java.security.MessageDigestSpi"}
,
{
  "name":"java.security.Principal"}
,
{
  "name":"java.security.PrivateKey"}
,
{
  "name":"java.security.Provider"}
,
{
  "name":"java.security.PublicKey"}
,
{
  "name":"java.security.SecureClassLoader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"java.security.SecureRandomParameters"}
,
{
  "name":"java.security.SecurityPermission"}
,
{
  "name":"java.security.cert.PKIXRevocationChecker"}
,
{
  "name":"java.security.cert.X509Certificate"}
,
{
  "name":"java.security.spec.AlgorithmParameterSpec"}
,
{
  "name":"java.sql.Date"}
,
{
  "name":"java.sql.ResultSet",
  "queryAllPublicMethods":true}
,
{
  "name":"java.sql.ResultSetMetaData",
  "queryAllPublicMethods":true}
,
{
  "name":"java.sql.Timestamp"}
,
{
  "name":"java.sql.Wrapper",
  "queryAllPublicMethods":true}
,
{
  "name":"java.text.DateFormat"}
,
{
  "name":"java.text.MessageFormat"}
,
{
  "name":"java.time.Clock"}
,
{
  "name":"java.time.DayOfWeek"}
,
{
  "name":"java.time.Duration"}
,
{
  "name":"java.time.Instant"}
,
{
  "name":"java.time.LocalDate"}
,
{
  "name":"java.time.LocalDateTime"}
,
{
  "name":"java.time.ZoneId",
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.time.ZonedDateTime"}
,
{
  "name":"java.time.chrono.ChronoLocalDate",
  "queryAllPublicMethods":true}
,
{
  "name":"java.time.chrono.ChronoLocalDateTime",
  "queryAllPublicMethods":true}
,
{
  "name":"java.time.chrono.ChronoPeriod",
  "queryAllPublicMethods":true}
,
{
  "name":"java.time.chrono.ChronoZonedDateTime",
  "queryAllPublicMethods":true}
,
{
  "name":"java.time.format.TextStyle"}
,
{
  "name":"java.time.temporal.Temporal",
  "queryAllPublicMethods":true}
,
{
  "name":"java.time.temporal.TemporalAccessor",
  "queryAllPublicMethods":true}
,
{
  "name":"java.time.temporal.TemporalAdjuster",
  "queryAllPublicMethods":true}
,
{
  "name":"java.time.temporal.TemporalAmount",
  "queryAllPublicMethods":true}
,
{
  "name":"java.time.temporal.TemporalField",
  "queryAllPublicMethods":true}
,
{
  "name":"java.time.temporal.TemporalUnit",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.AbstractCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"add","parameterTypes":["java.lang.Object"] }, 
    {"name":"addAll","parameterTypes":["java.util.Collection"] }, 
    {"name":"clear","parameterTypes":[] }, 
    {"name":"contains","parameterTypes":["java.lang.Object"] }, 
    {"name":"containsAll","parameterTypes":["java.util.Collection"] }, 
    {"name":"isEmpty","parameterTypes":[] }, 
    {"name":"iterator","parameterTypes":[] }, 
    {"name":"remove","parameterTypes":["java.lang.Object"] }, 
    {"name":"removeAll","parameterTypes":["java.util.Collection"] }, 
    {"name":"retainAll","parameterTypes":["java.util.Collection"] }, 
    {"name":"size","parameterTypes":[] }, 
    {"name":"toArray","parameterTypes":[] }, 
    {"name":"toArray","parameterTypes":["java.lang.Object[]"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"java.util.AbstractList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"add","parameterTypes":["int","java.lang.Object"] }, 
    {"name":"add","parameterTypes":["java.lang.Object"] }, 
    {"name":"addAll","parameterTypes":["int","java.util.Collection"] }, 
    {"name":"clear","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"get","parameterTypes":["int"] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"indexOf","parameterTypes":["java.lang.Object"] }, 
    {"name":"iterator","parameterTypes":[] }, 
    {"name":"lastIndexOf","parameterTypes":["java.lang.Object"] }, 
    {"name":"listIterator","parameterTypes":[] }, 
    {"name":"listIterator","parameterTypes":["int"] }, 
    {"name":"remove","parameterTypes":["int"] }, 
    {"name":"set","parameterTypes":["int","java.lang.Object"] }, 
    {"name":"subList","parameterTypes":["int","int"] }
  ]}
,
{
  "name":"java.util.AbstractMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.util.ArrayList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }],
  "queriedMethods":[
    {"name":"add","parameterTypes":["int","java.lang.Object"] }, 
    {"name":"add","parameterTypes":["java.lang.Object"] }, 
    {"name":"addAll","parameterTypes":["int","java.util.Collection"] }, 
    {"name":"addAll","parameterTypes":["java.util.Collection"] }, 
    {"name":"clear","parameterTypes":[] }, 
    {"name":"contains","parameterTypes":["java.lang.Object"] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"forEach","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"get","parameterTypes":["int"] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"indexOf","parameterTypes":["java.lang.Object"] }, 
    {"name":"isEmpty","parameterTypes":[] }, 
    {"name":"iterator","parameterTypes":[] }, 
    {"name":"lastIndexOf","parameterTypes":["java.lang.Object"] }, 
    {"name":"listIterator","parameterTypes":[] }, 
    {"name":"listIterator","parameterTypes":["int"] }, 
    {"name":"remove","parameterTypes":["int"] }, 
    {"name":"remove","parameterTypes":["java.lang.Object"] }, 
    {"name":"removeAll","parameterTypes":["java.util.Collection"] }, 
    {"name":"removeIf","parameterTypes":["java.util.function.Predicate"] }, 
    {"name":"replaceAll","parameterTypes":["java.util.function.UnaryOperator"] }, 
    {"name":"retainAll","parameterTypes":["java.util.Collection"] }, 
    {"name":"set","parameterTypes":["int","java.lang.Object"] }, 
    {"name":"size","parameterTypes":[] }, 
    {"name":"sort","parameterTypes":["java.util.Comparator"] }, 
    {"name":"spliterator","parameterTypes":[] }, 
    {"name":"subList","parameterTypes":["int","int"] }, 
    {"name":"toArray","parameterTypes":[] }, 
    {"name":"toArray","parameterTypes":["java.lang.Object[]"] }
  ]}
,
{
  "name":"java.util.BitSet"}
,
{
  "name":"java.util.Calendar",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"compareTo","parameterTypes":["java.lang.Object"] }]}
,
{
  "name":"java.util.Collection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.util.Collections$SingletonMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.util.Comparator",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.Date"}
,
{
  "name":"java.util.Deque",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.Dictionary",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.util.EnumSet"}
,
{
  "name":"java.util.Enumeration",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.EventListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.util.HashMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }],
  "queriedMethods":[
    {"name":"clear","parameterTypes":[] }, 
    {"name":"compute","parameterTypes":["java.lang.Object","java.util.function.BiFunction"] }, 
    {"name":"computeIfAbsent","parameterTypes":["java.lang.Object","java.util.function.Function"] }, 
    {"name":"computeIfPresent","parameterTypes":["java.lang.Object","java.util.function.BiFunction"] }, 
    {"name":"containsKey","parameterTypes":["java.lang.Object"] }, 
    {"name":"containsValue","parameterTypes":["java.lang.Object"] }, 
    {"name":"entrySet","parameterTypes":[] }, 
    {"name":"forEach","parameterTypes":["java.util.function.BiConsumer"] }, 
    {"name":"get","parameterTypes":["java.lang.Object"] }, 
    {"name":"getOrDefault","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"isEmpty","parameterTypes":[] }, 
    {"name":"keySet","parameterTypes":[] }, 
    {"name":"merge","parameterTypes":["java.lang.Object","java.lang.Object","java.util.function.BiFunction"] }, 
    {"name":"put","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"putAll","parameterTypes":["java.util.Map"] }, 
    {"name":"putIfAbsent","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"remove","parameterTypes":["java.lang.Object"] }, 
    {"name":"remove","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"replace","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"replace","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.Object"] }, 
    {"name":"replaceAll","parameterTypes":["java.util.function.BiFunction"] }, 
    {"name":"size","parameterTypes":[] }, 
    {"name":"values","parameterTypes":[] }
  ]}
,
{
  "name":"java.util.HashMap$Node"}
,
{
  "name":"java.util.HashMap$TreeNode"}
,
{
  "name":"java.util.Hashtable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.util.Hashtable$Entry"}
,
{
  "name":"java.util.InvalidPropertiesFormatException"}
,
{
  "name":"java.util.Iterator",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.LinkedHashMap",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"java.util.LinkedHashSet",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"java.util.List",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.util.ListIterator"}
,
{
  "name":"java.util.Locale"}
,
{
  "name":"java.util.Map",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.util.Map$Entry",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.Optional",
  "queriedMethods":[
    {"name":"get","parameterTypes":[] }, 
    {"name":"isEmpty","parameterTypes":[] }, 
    {"name":"isPresent","parameterTypes":[] }
  ]}
,
{
  "name":"java.util.Properties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getProperty","parameterTypes":["java.lang.String"] }]}
,
{
  "name":"java.util.Properties$LineReader"}
,
{
  "name":"java.util.PropertyPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]}
,
{
  "name":"java.util.Queue",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.Random"}
,
{
  "name":"java.util.RandomAccess",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.util.ResourceBundle",
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.util.ServiceLoader"}
,
{
  "name":"java.util.Set",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.SortedMap",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.SortedSet",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.Spliterator",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.TimeZone",
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.util.Timer"}
,
{
  "name":"java.util.TimerTask"}
,
{
  "name":"java.util.TreeMap"}
,
{
  "name":"java.util.UUID"}
,
{
  "name":"java.util.concurrent.BlockingQueue",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.concurrent.Callable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.concurrent.ConcurrentHashMap"}
,
{
  "name":"java.util.concurrent.ConcurrentMap"}
,
{
  "name":"java.util.concurrent.CountDownLatch"}
,
{
  "name":"java.util.concurrent.Executor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.util.concurrent.ExecutorService",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.concurrent.Flow$Publisher"}
,
{
  "name":"java.util.concurrent.Future",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.concurrent.RejectedExecutionHandler"}
,
{
  "name":"java.util.concurrent.ScheduledExecutorService"}
,
{
  "name":"java.util.concurrent.ScheduledFuture"}
,
{
  "name":"java.util.concurrent.ScheduledThreadPoolExecutor"}
,
{
  "name":"java.util.concurrent.ThreadFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.util.concurrent.ThreadPoolExecutor"}
,
{
  "name":"java.util.concurrent.TimeUnit"}
,
{
  "name":"java.util.concurrent.atomic.AtomicInteger"}
,
{
  "name":"java.util.concurrent.atomic.AtomicLong"}
,
{
  "name":"java.util.concurrent.atomic.AtomicReference"}
,
{
  "name":"java.util.concurrent.locks.Lock"}
,
{
  "name":"java.util.function.BiConsumer",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.function.BiFunction",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.function.BiPredicate"}
,
{
  "name":"java.util.function.Consumer",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.function.DoubleFunction",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.function.DoublePredicate",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.function.Function",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.function.IntFunction",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.function.IntPredicate",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.function.LongFunction",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.function.LongPredicate",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.function.Predicate"}
,
{
  "name":"java.util.function.Supplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.util.function.ToDoubleFunction",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.function.ToIntFunction",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.function.ToLongFunction",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.function.UnaryOperator"}
,
{
  "name":"java.util.jar.JarFile",
  "methods":[
    {"name":"<init>","parameterTypes":["java.io.File","boolean","int","java.lang.Runtime$Version"] }, 
    {"name":"runtimeVersion","parameterTypes":[] }
  ],
  "queriedMethods":[{"name":"isMultiRelease","parameterTypes":[] }]}
,
{
  "name":"java.util.logging.LogManager",
  "methods":[{"name":"getLoggingMXBean","parameterTypes":[] }]}
,
{
  "name":"java.util.logging.LoggingMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.logging.SimpleFormatter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"java.util.regex.MatchResult",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.regex.Matcher"}
,
{
  "name":"java.util.regex.Pattern"}
,
{
  "name":"java.util.stream.BaseStream",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.stream.Stream",
  "queryAllPublicMethods":true}
,
{
  "name":"java.util.zip.DeflaterInputStream"}
,
{
  "name":"java_lang_Class$forName",
  "methods":[{"name":"<init>","parameterTypes":["org.codehaus.groovy.runtime.callsite.CallSite","groovy.lang.MetaClassImpl","groovy.lang.MetaMethod","java.lang.Class[]","java.lang.reflect.Constructor"] }]}
,
{
  "name":"java_lang_reflect_AnnotatedElement$getAnnotation",
  "methods":[{"name":"<init>","parameterTypes":["org.codehaus.groovy.runtime.callsite.CallSite","groovy.lang.MetaClassImpl","groovy.lang.MetaMethod","java.lang.Class[]","java.lang.reflect.Constructor"] }]}
,
{
  "name":"javax.activation.MimeType"}
,
{
  "name":"javax.annotation.ManagedBean"}
,
{
  "name":"javax.annotation.Nonnull",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"when","parameterTypes":[] }]}
,
{
  "name":"javax.annotation.Nullable",
  "queryAllDeclaredMethods":true}
,
{
  "name":"javax.annotation.PostConstruct",
  "queryAllDeclaredMethods":true}
,
{
  "name":"javax.annotation.Resource"}
,
{
  "name":"javax.annotation.meta.TypeQualifier",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"applicableTo","parameterTypes":[] }]}
,
{
  "name":"javax.annotation.meta.TypeQualifierDefault",
  "queryAllDeclaredMethods":true}
,
{
  "name":"javax.crypto.spec.SecretKeySpec"}
,
{
  "name":"javax.jms.ConnectionFactory"}
,
{
  "name":"javax.jms.Message"}
,
{
  "name":"javax.mail.internet.MimeMessage"}
,
{
  "name":"javax.management.MBeanOperationInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"javax.management.MBeanServerBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"javax.management.Notification"}
,
{
  "name":"javax.management.NotificationEmitter"}
,
{
  "name":"javax.management.NotificationListener"}
,
{
  "name":"javax.management.ObjectName"}
,
{
  "name":"javax.management.openmbean.CompositeData"}
,
{
  "name":"javax.management.openmbean.OpenMBeanOperationInfoSupport"}
,
{
  "name":"javax.management.openmbean.TabularData"}
,
{
  "name":"javax.naming.InitialContext"}
,
{
  "name":"javax.naming.ldap.LdapContext"}
,
{
  "name":"javax.net.ssl.HostnameVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"javax.net.ssl.KeyManager"}
,
{
  "name":"javax.net.ssl.KeyManagerFactory"}
,
{
  "name":"javax.net.ssl.SSLContext"}
,
{
  "name":"javax.net.ssl.SSLEngine",
  "queriedMethods":[{"name":"getApplicationProtocol","parameterTypes":[] }]}
,
{
  "name":"javax.net.ssl.SSLException"}
,
{
  "name":"javax.net.ssl.SSLParameters",
  "queriedMethods":[{"name":"setApplicationProtocols","parameterTypes":["java.lang.String[]"] }]}
,
{
  "name":"javax.net.ssl.SSLSession"}
,
{
  "name":"javax.net.ssl.SSLSocket"}
,
{
  "name":"javax.net.ssl.TrustManager"}
,
{
  "name":"javax.net.ssl.TrustManagerFactory"}
,
{
  "name":"javax.net.ssl.TrustManagerFactorySpi"}
,
{
  "name":"javax.net.ssl.X509KeyManager"}
,
{
  "name":"javax.net.ssl.X509TrustManager"}
,
{
  "name":"javax.persistence.EntityManager"}
,
{
  "name":"javax.persistence.EntityManagerFactory"}
,
{
  "name":"javax.persistence.Persistence",
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getPersistenceUtil","parameterTypes":[] }
  ]}
,
{
  "name":"javax.persistence.PersistenceContext"}
,
{
  "name":"javax.persistence.Transient",
  "queryAllDeclaredMethods":true}
,
{
  "name":"javax.script.ScriptEngine",
  "queryAllPublicMethods":true}
,
{
  "name":"javax.security.auth.callback.CallbackHandler"}
,
{
  "name":"javax.security.auth.login.AccountException"}
,
{
  "name":"javax.security.auth.login.AccountNotFoundException"}
,
{
  "name":"javax.security.auth.login.CredentialExpiredException"}
,
{
  "name":"javax.security.auth.login.FailedLoginException"}
,
{
  "name":"javax.security.auth.login.LoginException"}
,
{
  "name":"javax.security.auth.spi.LoginModule"}
,
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]}
,
{
  "name":"javax.servlet.DispatcherType"}
,
{
  "name":"javax.servlet.Filter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"javax.servlet.FilterChain"}
,
{
  "name":"javax.servlet.FilterConfig"}
,
{
  "name":"javax.servlet.FilterRegistration$Dynamic"}
,
{
  "name":"javax.servlet.GenericServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getInitParameter","parameterTypes":["java.lang.String"] }, 
    {"name":"getInitParameterNames","parameterTypes":[] }, 
    {"name":"getServletConfig","parameterTypes":[] }, 
    {"name":"getServletContext","parameterTypes":[] }, 
    {"name":"getServletInfo","parameterTypes":[] }, 
    {"name":"init","parameterTypes":["javax.servlet.ServletConfig"] }, 
    {"name":"log","parameterTypes":["java.lang.String"] }, 
    {"name":"log","parameterTypes":["java.lang.String","java.lang.Throwable"] }
  ]}
,
{
  "name":"javax.servlet.MultipartConfigElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"javax.servlet.Registration$Dynamic"}
,
{
  "name":"javax.servlet.Servlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"javax.servlet.ServletConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"javax.servlet.ServletContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"javax.servlet.ServletException"}
,
{
  "name":"javax.servlet.ServletRegistration"}
,
{
  "name":"javax.servlet.ServletRegistration$Dynamic"}
,
{
  "name":"javax.servlet.ServletRequest"}
,
{
  "name":"javax.servlet.ServletResponse"}
,
{
  "name":"javax.servlet.http.Cookie"}
,
{
  "name":"javax.servlet.http.HttpServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"service","parameterTypes":["javax.servlet.ServletRequest","javax.servlet.ServletResponse"] }]}
,
{
  "name":"javax.servlet.http.HttpServletRequest",
  "queriedMethods":[{"name":"getHttpServletMapping","parameterTypes":[] }]}
,
{
  "name":"javax.servlet.http.HttpServletResponse"}
,
{
  "name":"javax.servlet.http.HttpSession"}
,
{
  "name":"javax.servlet.http.PushBuilder"}
,
{
  "name":"javax.sql.DataSource"}
,
{
  "name":"javax.transaction.Transaction"}
,
{
  "name":"javax.transaction.TransactionManager"}
,
{
  "name":"javax.validation.ClockProvider"}
,
{
  "name":"javax.validation.Configuration"}
,
{
  "name":"javax.validation.ConstraintValidatorFactory"}
,
{
  "name":"javax.validation.ConstraintViolation"}
,
{
  "name":"javax.validation.MessageInterpolator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"javax.validation.MessageInterpolator$Context"}
,
{
  "name":"javax.validation.ParameterNameProvider"}
,
{
  "name":"javax.validation.TraversableResolver"}
,
{
  "name":"javax.validation.ValidationProviderResolver"}
,
{
  "name":"javax.validation.Validator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"javax.validation.ValidatorContext"}
,
{
  "name":"javax.validation.ValidatorFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"javax.validation.bootstrap.GenericBootstrap"}
,
{
  "name":"javax.validation.executable.ExecutableValidator"}
,
{
  "name":"javax.validation.metadata.BeanDescriptor"}
,
{
  "name":"javax.validation.metadata.ConstraintDescriptor"}
,
{
  "name":"javax.xml.bind.Binder"}
,
{
  "name":"javax.xml.ws.WebServiceRef"}
,
{
  "name":"jdk.internal.HotSpotIntrinsicCandidate"}
,
{
  "name":"jdk.management.jfr.ConfigurationInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"jdk.management.jfr.EventTypeInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"jdk.management.jfr.FlightRecorderMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"jdk.management.jfr.FlightRecorderMXBeanImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"jdk.management.jfr.RecordingInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"jdk.management.jfr.SettingDescriptorInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"nz.net.ultraq.extensions.groovy.ExecutorServiceExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"nz.net.ultraq.extensions.groovy.MapExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"nz.net.ultraq.extensions.groovy.MathStaticExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"nz.net.ultraq.extensions.groovy.ObjectExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"nz.net.ultraq.thymeleaf.layoutdialect.LayoutDialect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getDIALECT_NAME","parameterTypes":[] }, 
    {"name":"getDIALECT_PRECEDENCE","parameterTypes":[] }, 
    {"name":"getDIALECT_PREFIX","parameterTypes":[] }
  ]}
,
{
  "name":"nz.net.ultraq.thymeleaf.layoutdialect.context.extensions.IContextExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"nz.net.ultraq.thymeleaf.layoutdialect.decorators.SortingStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"nz.net.ultraq.thymeleaf.layoutdialect.decorators.strategies.AppendingStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"nz.net.ultraq.thymeleaf.layoutdialect.fragments.extensions.FragmentExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"nz.net.ultraq.thymeleaf.layoutdialect.models.extensions.IAttributeExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"nz.net.ultraq.thymeleaf.layoutdialect.models.extensions.ICloseElementTagExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"nz.net.ultraq.thymeleaf.layoutdialect.models.extensions.IModelExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"nz.net.ultraq.thymeleaf.layoutdialect.models.extensions.IProcessableElementTagExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"nz.net.ultraq.thymeleaf.layoutdialect.models.extensions.IStandaloneElementTagExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"nz.net.ultraq.thymeleaf.layoutdialect.models.extensions.ITemplateEventExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"nz.net.ultraq.thymeleaf.layoutdialect.models.extensions.ITextExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.aopalliance.aop.Advice",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.aopalliance.intercept.Interceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.aopalliance.intercept.MethodInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apache.catalina.Context"}
,
{
  "name":"org.apache.catalina.Engine"}
,
{
  "name":"org.apache.catalina.Host"}
,
{
  "name":"org.apache.catalina.LifecycleEvent"}
,
{
  "name":"org.apache.catalina.LifecycleListener"}
,
{
  "name":"org.apache.catalina.Manager"}
,
{
  "name":"org.apache.catalina.Valve"}
,
{
  "name":"org.apache.catalina.connector.Connector"}
,
{
  "name":"org.apache.catalina.core.ApplicationContextFacade",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"addFilter","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"addFilter","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"addFilter","parameterTypes":["java.lang.String","javax.servlet.Filter"] }, 
    {"name":"addJspFile","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"addListener","parameterTypes":["java.lang.Class"] }, 
    {"name":"addListener","parameterTypes":["java.lang.String"] }, 
    {"name":"addListener","parameterTypes":["java.util.EventListener"] }, 
    {"name":"addServlet","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"addServlet","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"addServlet","parameterTypes":["java.lang.String","javax.servlet.Servlet"] }, 
    {"name":"createFilter","parameterTypes":["java.lang.Class"] }, 
    {"name":"createListener","parameterTypes":["java.lang.Class"] }, 
    {"name":"createServlet","parameterTypes":["java.lang.Class"] }, 
    {"name":"declareRoles","parameterTypes":["java.lang.String[]"] }, 
    {"name":"getAttribute","parameterTypes":["java.lang.String"] }, 
    {"name":"getAttributeNames","parameterTypes":[] }, 
    {"name":"getClassLoader","parameterTypes":[] }, 
    {"name":"getContext","parameterTypes":["java.lang.String"] }, 
    {"name":"getContextPath","parameterTypes":[] }, 
    {"name":"getDefaultSessionTrackingModes","parameterTypes":[] }, 
    {"name":"getEffectiveMajorVersion","parameterTypes":[] }, 
    {"name":"getEffectiveMinorVersion","parameterTypes":[] }, 
    {"name":"getEffectiveSessionTrackingModes","parameterTypes":[] }, 
    {"name":"getFilterRegistration","parameterTypes":["java.lang.String"] }, 
    {"name":"getFilterRegistrations","parameterTypes":[] }, 
    {"name":"getInitParameter","parameterTypes":["java.lang.String"] }, 
    {"name":"getInitParameterNames","parameterTypes":[] }, 
    {"name":"getJspConfigDescriptor","parameterTypes":[] }, 
    {"name":"getMajorVersion","parameterTypes":[] }, 
    {"name":"getMimeType","parameterTypes":["java.lang.String"] }, 
    {"name":"getMinorVersion","parameterTypes":[] }, 
    {"name":"getNamedDispatcher","parameterTypes":["java.lang.String"] }, 
    {"name":"getRealPath","parameterTypes":["java.lang.String"] }, 
    {"name":"getRequestCharacterEncoding","parameterTypes":[] }, 
    {"name":"getRequestDispatcher","parameterTypes":["java.lang.String"] }, 
    {"name":"getResource","parameterTypes":["java.lang.String"] }, 
    {"name":"getResourceAsStream","parameterTypes":["java.lang.String"] }, 
    {"name":"getResourcePaths","parameterTypes":["java.lang.String"] }, 
    {"name":"getResponseCharacterEncoding","parameterTypes":[] }, 
    {"name":"getServerInfo","parameterTypes":[] }, 
    {"name":"getServlet","parameterTypes":["java.lang.String"] }, 
    {"name":"getServletContextName","parameterTypes":[] }, 
    {"name":"getServletNames","parameterTypes":[] }, 
    {"name":"getServletRegistration","parameterTypes":["java.lang.String"] }, 
    {"name":"getServletRegistrations","parameterTypes":[] }, 
    {"name":"getServlets","parameterTypes":[] }, 
    {"name":"getSessionCookieConfig","parameterTypes":[] }, 
    {"name":"getSessionTimeout","parameterTypes":[] }, 
    {"name":"getVirtualServerName","parameterTypes":[] }, 
    {"name":"log","parameterTypes":["java.lang.Exception","java.lang.String"] }, 
    {"name":"log","parameterTypes":["java.lang.String"] }, 
    {"name":"log","parameterTypes":["java.lang.String","java.lang.Throwable"] }, 
    {"name":"removeAttribute","parameterTypes":["java.lang.String"] }, 
    {"name":"setAttribute","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"setInitParameter","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"setRequestCharacterEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setResponseCharacterEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setSessionTimeout","parameterTypes":["int"] }, 
    {"name":"setSessionTrackingModes","parameterTypes":["java.util.Set"] }
  ]}
,
{
  "name":"org.apache.catalina.ha.session.ClusterManagerBase"}
,
{
  "name":"org.apache.catalina.startup.Tomcat"}
,
{
  "name":"org.apache.catalina.util.CharsetMapper",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apache.catalina.util.LifecycleBase",
  "methods":[{"name":"initInternal","parameterTypes":[] }]}
,
{
  "name":"org.apache.catalina.valves.rewrite.RewriteValve"}
,
{
  "name":"org.apache.commons.lang3.time.FastDateFormat"}
,
{
  "name":"org.apache.commons.lang3.tuple.Pair"}
,
{
  "name":"org.apache.commons.logging.Log"}
,
{
  "name":"org.apache.commons.validator.routines.DomainValidator"}
,
{
  "name":"org.apache.commons.validator.routines.UrlValidator"}
,
{
  "name":"org.apache.coyote.AbstractProtocol",
  "methods":[
    {"name":"getAddress","parameterTypes":[] }, 
    {"name":"getLocalPort","parameterTypes":[] }, 
    {"name":"setPort","parameterTypes":["int"] }, 
    {"name":"setProperty","parameterTypes":["java.lang.String","java.lang.String"] }
  ]}
,
{
  "name":"org.apache.coyote.ProtocolHandler"}
,
{
  "name":"org.apache.coyote.UpgradeProtocol"}
,
{
  "name":"org.apache.coyote.http11.AbstractHttp11Protocol",
  "methods":[
    {"name":"isSSLEnabled","parameterTypes":[] }, 
    {"name":"setSecure","parameterTypes":["boolean"] }, 
    {"name":"setServer","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.apache.coyote.http11.Http11AprProtocol"}
,
{
  "name":"org.apache.coyote.http11.Http11NioProtocol",
  "queryAllPublicMethods":true}
,
{
  "name":"org.apache.coyote.http2.Http2Protocol"}
,
{
  "name":"org.apache.groovy.datetime.extensions.DateTimeExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apache.groovy.datetime.extensions.DateTimeStaticExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apache.groovy.sql.extensions.SqlExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apache.groovy.xml.extensions.XmlExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apache.http.ConnectionReuseStrategy"}
,
{
  "name":"org.apache.http.HttpHost"}
,
{
  "name":"org.apache.http.HttpRequestInterceptor"}
,
{
  "name":"org.apache.http.HttpResponse"}
,
{
  "name":"org.apache.http.HttpResponseInterceptor"}
,
{
  "name":"org.apache.http.NameValuePair"}
,
{
  "name":"org.apache.http.client.AuthenticationStrategy"}
,
{
  "name":"org.apache.http.client.BackoffManager"}
,
{
  "name":"org.apache.http.client.ClientProtocolException"}
,
{
  "name":"org.apache.http.client.ConnectionBackoffStrategy"}
,
{
  "name":"org.apache.http.client.CookieStore"}
,
{
  "name":"org.apache.http.client.CredentialsProvider"}
,
{
  "name":"org.apache.http.client.HttpClient"}
,
{
  "name":"org.apache.http.client.HttpRequestRetryHandler"}
,
{
  "name":"org.apache.http.client.RedirectStrategy"}
,
{
  "name":"org.apache.http.client.ServiceUnavailableRetryStrategy"}
,
{
  "name":"org.apache.http.client.UserTokenHandler"}
,
{
  "name":"org.apache.http.client.config.RequestConfig"}
,
{
  "name":"org.apache.http.config.ConnectionConfig"}
,
{
  "name":"org.apache.http.config.Lookup"}
,
{
  "name":"org.apache.http.config.RegistryBuilder"}
,
{
  "name":"org.apache.http.config.SocketConfig"}
,
{
  "name":"org.apache.http.conn.ConnectionKeepAliveStrategy"}
,
{
  "name":"org.apache.http.conn.DnsResolver"}
,
{
  "name":"org.apache.http.conn.HttpClientConnectionManager"}
,
{
  "name":"org.apache.http.conn.SchemePortResolver"}
,
{
  "name":"org.apache.http.conn.routing.HttpRoutePlanner"}
,
{
  "name":"org.apache.http.conn.socket.ConnectionSocketFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apache.http.conn.socket.LayeredConnectionSocketFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apache.http.conn.ssl.DefaultHostnameVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"verify","parameterTypes":["java.lang.String","javax.net.ssl.SSLSession"] }]}
,
{
  "name":"org.apache.http.conn.ssl.DefaultHostnameVerifier$HostNameType"}
,
{
  "name":"org.apache.http.conn.ssl.SSLConnectionSocketFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"connectSocket","parameterTypes":["int","java.net.Socket","org.apache.http.HttpHost","java.net.InetSocketAddress","java.net.InetSocketAddress","org.apache.http.protocol.HttpContext"] }, 
    {"name":"createLayeredSocket","parameterTypes":["java.net.Socket","java.lang.String","int","org.apache.http.protocol.HttpContext"] }, 
    {"name":"createSocket","parameterTypes":["org.apache.http.protocol.HttpContext"] }
  ]}
,
{
  "name":"org.apache.http.conn.ssl.SSLInitializationException"}
,
{
  "name":"org.apache.http.conn.ssl.X509HostnameVerifier"}
,
{
  "name":"org.apache.http.conn.util.DomainType"}
,
{
  "name":"org.apache.http.conn.util.PublicSuffixMatcher"}
,
{
  "name":"org.apache.http.impl.client.CloseableHttpClient"}
,
{
  "name":"org.apache.http.impl.client.FutureRequestExecutionService"}
,
{
  "name":"org.apache.http.impl.client.HttpClientBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apache.http.impl.execchain.ClientExecChain"}
,
{
  "name":"org.apache.http.protocol.HttpContext"}
,
{
  "name":"org.apache.http.protocol.HttpProcessor"}
,
{
  "name":"org.apache.http.protocol.HttpRequestExecutor"}
,
{
  "name":"org.apache.tomcat.util.net.AbstractEndpoint",
  "methods":[{"name":"setBindOnInit","parameterTypes":["boolean"] }]}
,
{
  "name":"org.apache.tomcat.util.net.NioEndpoint",
  "queryAllPublicMethods":true}
,
{
  "name":"org.apache.tomcat.util.net.SSLHostConfig"}
,
{
  "name":"org.apereo.cas.AbstractCentralAuthenticationService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addTicket","parameterTypes":["org.apereo.cas.ticket.Ticket"] }, 
    {"name":"deleteTicket","parameterTypes":["java.lang.String"] }, 
    {"name":"getTicket","parameterTypes":["java.lang.String"] }, 
    {"name":"getTicket","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"getTickets","parameterTypes":["java.util.function.Predicate"] }, 
    {"name":"getTickets","parameterTypes":["java.util.function.Predicate","long","long"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, 
    {"name":"updateTicket","parameterTypes":["org.apereo.cas.ticket.Ticket"] }
  ]}
,
{
  "name":"org.apereo.cas.CasStarterBanner",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.CentralAuthenticationService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.CentralAuthenticationServiceContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.CentralAuthenticationServiceContext$CentralAuthenticationServiceContextBuilder"}
,
{
  "name":"org.apereo.cas.DefaultCentralAuthenticationService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"createProxyGrantingTicket","parameterTypes":["java.lang.String","org.apereo.cas.authentication.AuthenticationResult"] }, 
    {"name":"createTicketGrantingTicket","parameterTypes":["org.apereo.cas.authentication.AuthenticationResult"] }, 
    {"name":"grantProxyTicket","parameterTypes":["java.lang.String","org.apereo.cas.authentication.principal.Service"] }, 
    {"name":"grantServiceTicket","parameterTypes":["java.lang.String","org.apereo.cas.authentication.principal.Service","org.apereo.cas.authentication.AuthenticationResult"] }, 
    {"name":"validateServiceTicket","parameterTypes":["java.lang.String","org.apereo.cas.authentication.principal.Service"] }
  ]}
,
{
  "name":"org.apereo.cas.audit.AuditPrincipalIdProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.AuditTrailExecutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.AuditTrailExecutionPlanConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.AuditTrailRecordResolutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.AuditTrailRecordResolutionPlanConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.AuditableContext"}
,
{
  "name":"org.apereo.cas.audit.AuditableExecution",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.AuditableExecutionResult"}
,
{
  "name":"org.apereo.cas.audit.BaseAuditableExecution",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditActionsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationActionResolver","parameterTypes":[] }, 
    {"name":"booleanActionResolver","parameterTypes":[] }, 
    {"name":"defaultAuditActionResolver","parameterTypes":[] }, 
    {"name":"objectCreationAuditActionResolver","parameterTypes":[] }, 
    {"name":"ticketCreationActionResolver","parameterTypes":[] }, 
    {"name":"ticketValidationActionResolver","parameterTypes":[] }, 
    {"name":"triggeredAuditActionResolver","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditEventsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"inMemoryAuditEventRepository","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditExecutionPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"auditTrailExecutionPlan","parameterTypes":["java.util.List"] }, 
    {"name":"casAuditTrailExecutionPlanConfigurer","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditExecutionPlanConfiguration$$Lambda$1189/0x0000000840823440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuditTrailExecutionPlan","parameterTypes":["org.apereo.cas.audit.AuditTrailExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditExecutionPlanConfiguration$$Lambda$1221/0x000000084087cc40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuditTrailExecutionPlan","parameterTypes":["org.apereo.cas.audit.AuditTrailExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditExecutionPlanConfiguration$$Lambda$1245/0x00000008408ba040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditExecutionPlanConfiguration$$Lambda$1250/0x00000008408bac40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditExecutionPlanConfiguration$$Lambda$1252/0x00000008408b4440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditExecutionPlanConfiguration$$Lambda$1257/0x00000008408bf840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditExecutionPlanConfiguration$$Lambda$1287/0x00000008408bf840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditFiltersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casClientInfoLoggingFilter","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"auditTrailManagementAspect","parameterTypes":["org.apereo.cas.audit.AuditTrailRecordResolutionPlan","org.apereo.inspektr.common.spi.PrincipalResolver","org.apereo.inspektr.audit.AuditTrailManager","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"filterAndDelegateAuditTrailManager","parameterTypes":["org.apereo.cas.audit.AuditTrailExecutionPlan","org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditPrincipalConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"auditPrincipalIdProvider","parameterTypes":["java.util.List"] }, 
    {"name":"auditablePrincipalResolver","parameterTypes":["org.apereo.cas.audit.AuditPrincipalIdProvider"] }
  ]}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResolutionPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"auditTrailRecordResolutionPlan","parameterTypes":["java.util.List"] }, 
    {"name":"casAuditActionResolversResolutionPlanConfigurer","parameterTypes":["org.apereo.inspektr.audit.spi.AuditActionResolver","org.apereo.inspektr.audit.spi.AuditActionResolver","org.apereo.inspektr.audit.spi.AuditActionResolver","org.apereo.inspektr.audit.spi.AuditActionResolver","org.apereo.inspektr.audit.spi.AuditActionResolver","org.apereo.inspektr.audit.spi.AuditActionResolver","org.apereo.inspektr.audit.spi.AuditActionResolver"] }, 
    {"name":"casAuditResourceResolversResolutionPlanConfigurer","parameterTypes":["org.apereo.inspektr.audit.spi.AuditResourceResolver","org.apereo.inspektr.audit.spi.AuditResourceResolver","org.apereo.inspektr.audit.spi.AuditResourceResolver","org.apereo.inspektr.audit.spi.AuditResourceResolver","org.apereo.inspektr.audit.spi.AuditResourceResolver","org.apereo.inspektr.audit.spi.AuditResourceResolver","org.apereo.inspektr.audit.spi.AuditResourceResolver","org.apereo.inspektr.audit.spi.AuditResourceResolver","org.apereo.inspektr.audit.spi.AuditResourceResolver"] }
  ]}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResolutionPlanConfiguration$$Lambda$1182/0x0000000840821040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuditTrailRecordResolutionPlan","parameterTypes":["org.apereo.cas.audit.AuditTrailRecordResolutionPlan"] }]}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResolutionPlanConfiguration$$Lambda$1183/0x0000000840821c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuditTrailRecordResolutionPlan","parameterTypes":["org.apereo.cas.audit.AuditTrailRecordResolutionPlan"] }]}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResolutionPlanConfiguration$$Lambda$1214/0x000000084087a840",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuditTrailRecordResolutionPlan","parameterTypes":["org.apereo.cas.audit.AuditTrailRecordResolutionPlan"] }]}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResolutionPlanConfiguration$$Lambda$1215/0x000000084087b440",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuditTrailRecordResolutionPlan","parameterTypes":["org.apereo.cas.audit.AuditTrailRecordResolutionPlan"] }]}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResolutionPlanConfiguration$$Lambda$1251/0x00000008408bfc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResolutionPlanConfiguration$$Lambda$1252/0x00000008408be840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResolutionPlanConfiguration$$Lambda$1256/0x00000008408bc840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResolutionPlanConfiguration$$Lambda$1257/0x00000008408bd440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResolutionPlanConfiguration$$Lambda$1258/0x00000008408b6040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResolutionPlanConfiguration$$Lambda$1259/0x00000008408b5c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResolutionPlanConfiguration$$Lambda$1263/0x00000008408be440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResolutionPlanConfiguration$$Lambda$1264/0x00000008408bd040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResolutionPlanConfiguration$$Lambda$1293/0x00000008408be440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResolutionPlanConfiguration$$Lambda$1294/0x00000008408bd040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.config.CasCoreAuditConfiguration$CasCoreAuditResourcesConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"credentialsAsFirstParameterResourceResolver","parameterTypes":[] }, 
    {"name":"messageBundleAwareResourceResolver","parameterTypes":["org.springframework.context.ConfigurableApplicationContext"] }, 
    {"name":"nullableReturnValueResourceResolver","parameterTypes":[] }, 
    {"name":"protocolSpecificationValidationResourceResolver","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"returnValueResourceResolver","parameterTypes":[] }, 
    {"name":"serviceAccessEnforcementAuditResourceResolver","parameterTypes":[] }, 
    {"name":"serviceAuditResourceResolver","parameterTypes":[] }, 
    {"name":"ticketResourceResolver","parameterTypes":[] }, 
    {"name":"ticketValidationResourceResolver","parameterTypes":["org.apereo.inspektr.audit.spi.AuditResourceResolver","org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.audit.spi.plan.DefaultAuditTrailExecutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getAuditRecordsSince","parameterTypes":["java.time.LocalDate"] }, 
    {"name":"getAuditTrailManagers","parameterTypes":[] }, 
    {"name":"record","parameterTypes":["org.apereo.inspektr.audit.AuditActionContext"] }, 
    {"name":"registerAuditTrailManager","parameterTypes":["org.apereo.inspektr.audit.AuditTrailManager"] }
  ]}
,
{
  "name":"org.apereo.cas.audit.spi.plan.DefaultAuditTrailRecordResolutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getAuditActionResolvers","parameterTypes":[] }, 
    {"name":"getAuditPrincipalResolvers","parameterTypes":[] }, 
    {"name":"getAuditResourceResolvers","parameterTypes":[] }, 
    {"name":"registerAuditActionResolver","parameterTypes":["java.lang.String","org.apereo.inspektr.audit.spi.AuditActionResolver"] }, 
    {"name":"registerAuditActionResolvers","parameterTypes":["java.util.Map"] }, 
    {"name":"registerAuditPrincipalResolver","parameterTypes":["java.lang.String","org.apereo.inspektr.common.spi.PrincipalResolver"] }, 
    {"name":"registerAuditResourceResolver","parameterTypes":["java.lang.String","org.apereo.inspektr.audit.spi.AuditResourceResolver"] }, 
    {"name":"registerAuditResourceResolvers","parameterTypes":["java.util.Map"] }
  ]}
,
{
  "name":"org.apereo.cas.audit.spi.principal.ChainingAuditPrincipalIdProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getPrincipalIdFrom","parameterTypes":["org.aspectj.lang.JoinPoint","org.apereo.cas.authentication.Authentication","java.lang.Object","java.lang.Exception"] }, 
    {"name":"supports","parameterTypes":["org.aspectj.lang.JoinPoint","org.apereo.cas.authentication.Authentication","java.lang.Object","java.lang.Exception"] }
  ]}
,
{
  "name":"org.apereo.cas.audit.spi.principal.ThreadLocalAuditPrincipalResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"resolve","parameterTypes":[] }, 
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Exception"] }, 
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Object"] }
  ]}
,
{
  "name":"org.apereo.cas.audit.spi.resource.CredentialsAsFirstParameterResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Exception"] }, 
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Object"] }, 
    {"name":"setAuditFormat","parameterTypes":["org.apereo.inspektr.audit.AuditTrailManager$AuditFormats"] }
  ]}
,
{
  "name":"org.apereo.cas.audit.spi.resource.ProtocolSpecificationValidationAuditResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.audit.spi.resource.ServiceAccessEnforcementAuditResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Object"] }]}
,
{
  "name":"org.apereo.cas.audit.spi.resource.ServiceAuditResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Exception"] }, 
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Object"] }, 
    {"name":"setAuditFormat","parameterTypes":["org.apereo.inspektr.audit.AuditTrailManager$AuditFormats"] }
  ]}
,
{
  "name":"org.apereo.cas.audit.spi.resource.TicketAsFirstParameterResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Exception"] }, 
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Object"] }, 
    {"name":"setAuditFormat","parameterTypes":["org.apereo.inspektr.audit.AuditTrailManager$AuditFormats"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.AbstractAuthenticationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getCredentialSelectionPredicate","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getPrincipalFactory","parameterTypes":[] }, 
    {"name":"getServicesManager","parameterTypes":[] }, 
    {"name":"getState","parameterTypes":[] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"setCredentialSelectionPredicate","parameterTypes":["java.util.function.Predicate"] }, 
    {"name":"setState","parameterTypes":["org.apereo.cas.configuration.model.core.authentication.AuthenticationHandlerStates"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.AcceptUsersAuthenticationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.Authentication"}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationAccountStateHandler"}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationBuilder"}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationEventExecutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationEventExecutionPlanConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationException"}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationHandlerExecutionResult"}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationHandlerResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationMetaDataPopulator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationPasswordPolicyHandlingStrategy"}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationPolicy"}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationPolicyExecutionResult$AuthenticationPolicyExecutionResultBuilder"}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationPolicyResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationPostProcessor"}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationPreProcessor"}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationResult"}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationResultBuilder"}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationResultBuilderFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationServiceSelectionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationServiceSelectionStrategy"}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationServiceSelectionStrategyConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationSystemSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationTransaction"}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationTransactionFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.AuthenticationTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.CasSSLContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.CasSSLContext$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getHostnameVerifier","parameterTypes":[] }, 
    {"name":"getKeyManagerFactory","parameterTypes":[] }, 
    {"name":"getKeyManagers","parameterTypes":[] }, 
    {"name":"getSslContext","parameterTypes":[] }, 
    {"name":"getTrustManagerFactory","parameterTypes":[] }, 
    {"name":"getTrustManagers","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.ContextualAuthenticationPolicy"}
,
{
  "name":"org.apereo.cas.authentication.ContextualAuthenticationPolicyFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.Credential"}
,
{
  "name":"org.apereo.cas.authentication.DefaultAuthenticationAttributeReleasePolicy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getAuthenticationAttributesForRelease","parameterTypes":["org.apereo.cas.authentication.Authentication","org.apereo.cas.validation.Assertion","java.util.Map","org.apereo.cas.services.RegisteredService"] }]}
,
{
  "name":"org.apereo.cas.authentication.DefaultAuthenticationBuilder"}
,
{
  "name":"org.apereo.cas.authentication.DefaultAuthenticationEventExecutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getAuthenticationHandlerResolvers","parameterTypes":["org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"getAuthenticationHandlers","parameterTypes":[] }, 
    {"name":"getAuthenticationHandlers","parameterTypes":["org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"getAuthenticationMetadataPopulators","parameterTypes":["org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"getAuthenticationPolicies","parameterTypes":[] }, 
    {"name":"getAuthenticationPolicies","parameterTypes":["org.apereo.cas.authentication.Authentication"] }, 
    {"name":"getAuthenticationPolicies","parameterTypes":["org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"getAuthenticationPolicyResolvers","parameterTypes":["org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"getAuthenticationPostProcessors","parameterTypes":["org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"getAuthenticationPreProcessors","parameterTypes":["org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"getPrincipalResolver","parameterTypes":["org.apereo.cas.authentication.AuthenticationHandler","org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"registerAuthenticationHandler","parameterTypes":["org.apereo.cas.authentication.AuthenticationHandler"] }, 
    {"name":"registerAuthenticationHandlerResolver","parameterTypes":["org.apereo.cas.authentication.AuthenticationHandlerResolver"] }, 
    {"name":"registerAuthenticationHandlerWithPrincipalResolver","parameterTypes":["java.util.Map"] }, 
    {"name":"registerAuthenticationHandlerWithPrincipalResolver","parameterTypes":["org.apereo.cas.authentication.AuthenticationHandler","org.apereo.cas.authentication.principal.PrincipalResolver"] }, 
    {"name":"registerAuthenticationHandlerWithPrincipalResolvers","parameterTypes":["java.util.Collection","org.apereo.cas.authentication.principal.PrincipalResolver"] }, 
    {"name":"registerAuthenticationHandlerWithPrincipalResolvers","parameterTypes":["java.util.List","java.util.List"] }, 
    {"name":"registerAuthenticationMetadataPopulator","parameterTypes":["org.apereo.cas.authentication.AuthenticationMetaDataPopulator"] }, 
    {"name":"registerAuthenticationMetadataPopulators","parameterTypes":["java.util.Collection"] }, 
    {"name":"registerAuthenticationPolicies","parameterTypes":["java.util.Collection"] }, 
    {"name":"registerAuthenticationPolicy","parameterTypes":["org.apereo.cas.authentication.AuthenticationPolicy"] }, 
    {"name":"registerAuthenticationPolicyResolver","parameterTypes":["org.apereo.cas.authentication.AuthenticationPolicyResolver"] }, 
    {"name":"registerAuthenticationPostProcessor","parameterTypes":["org.apereo.cas.authentication.AuthenticationPostProcessor"] }, 
    {"name":"registerAuthenticationPreProcessor","parameterTypes":["org.apereo.cas.authentication.AuthenticationPreProcessor"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.DefaultAuthenticationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"authenticate","parameterTypes":["org.apereo.cas.authentication.AuthenticationTransaction"] }]}
,
{
  "name":"org.apereo.cas.authentication.DefaultAuthenticationManager$ChainingAuthenticationPolicyExecutionResult"}
,
{
  "name":"org.apereo.cas.authentication.DefaultAuthenticationResultBuilderFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"newBuilder","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.authentication.DefaultAuthenticationServiceSelectionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"registerStrategy","parameterTypes":["org.apereo.cas.authentication.AuthenticationServiceSelectionStrategy"] }, 
    {"name":"resolveService","parameterTypes":["org.apereo.cas.authentication.principal.Service"] }, 
    {"name":"resolveService","parameterTypes":["org.apereo.cas.authentication.principal.Service","java.lang.Class"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.DefaultAuthenticationSystemSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"establishAuthenticationContextFromInitial","parameterTypes":["org.apereo.cas.authentication.Authentication"] }, 
    {"name":"establishAuthenticationContextFromInitial","parameterTypes":["org.apereo.cas.authentication.Authentication","org.apereo.cas.authentication.Credential"] }, 
    {"name":"finalizeAllAuthenticationTransactions","parameterTypes":["org.apereo.cas.authentication.AuthenticationResultBuilder","org.apereo.cas.authentication.principal.Service"] }, 
    {"name":"finalizeAuthenticationTransaction","parameterTypes":["org.apereo.cas.authentication.principal.Service","org.apereo.cas.authentication.Credential[]"] }, 
    {"name":"getAuthenticationResultBuilderFactory","parameterTypes":[] }, 
    {"name":"getAuthenticationTransactionFactory","parameterTypes":[] }, 
    {"name":"getAuthenticationTransactionManager","parameterTypes":[] }, 
    {"name":"getPrincipalElectionStrategy","parameterTypes":[] }, 
    {"name":"handleAuthenticationTransaction","parameterTypes":["org.apereo.cas.authentication.principal.Service","org.apereo.cas.authentication.AuthenticationResultBuilder","org.apereo.cas.authentication.Credential[]"] }, 
    {"name":"handleInitialAuthenticationTransaction","parameterTypes":["org.apereo.cas.authentication.principal.Service","org.apereo.cas.authentication.Credential[]"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.DefaultAuthenticationTransactionFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"newTransaction","parameterTypes":["org.apereo.cas.authentication.principal.Service","org.apereo.cas.authentication.Credential[]"] }]}
,
{
  "name":"org.apereo.cas.authentication.DefaultAuthenticationTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getAuthenticationManager","parameterTypes":[] }, 
    {"name":"handle","parameterTypes":["org.apereo.cas.authentication.AuthenticationTransaction","org.apereo.cas.authentication.AuthenticationResultBuilder"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.DefaultMultifactorAuthenticationContextValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"validate","parameterTypes":["org.apereo.cas.authentication.Authentication","java.lang.String","java.util.Optional"] }]}
,
{
  "name":"org.apereo.cas.authentication.DefaultMultifactorAuthenticationFailureModeEvaluator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"evaluate","parameterTypes":["org.apereo.cas.services.RegisteredService","org.apereo.cas.authentication.MultifactorAuthenticationProvider"] }]}
,
{
  "name":"org.apereo.cas.authentication.DefaultMultifactorAuthenticationProviderResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"resolveEventViaAttribute","parameterTypes":["org.apereo.cas.authentication.principal.Principal","java.util.Map","java.util.Collection","org.apereo.cas.services.RegisteredService","java.util.Optional","java.util.Collection","java.util.function.BiPredicate"] }, 
    {"name":"resolvePrincipal","parameterTypes":["org.apereo.cas.authentication.principal.Principal"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.DefaultMultifactorAuthenticationTriggerSelectionStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getMultifactorAuthenticationTriggers","parameterTypes":[] }, 
    {"name":"resolve","parameterTypes":["javax.servlet.http.HttpServletRequest","org.apereo.cas.services.RegisteredService","org.apereo.cas.authentication.Authentication","org.apereo.cas.authentication.principal.Service"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.DefaultRequestedAuthenticationContextValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"validateAuthenticationContext","parameterTypes":["javax.servlet.http.HttpServletRequest","org.apereo.cas.services.RegisteredService","org.apereo.cas.authentication.Authentication","org.apereo.cas.authentication.principal.Service"] }, 
    {"name":"validateAuthenticationContext","parameterTypes":["org.apereo.cas.validation.Assertion","javax.servlet.http.HttpServletRequest"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.MessageDescriptor"}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationContextValidationResult"}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationContextValidationResult$MultifactorAuthenticationContextValidationResultBuilder"}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationContextValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationFailureModeEvaluator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationPrincipalResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationPrincipalResolver$$Lambda$1067/0x000000084077bc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationPrincipalResolver$$Lambda$1071/0x0000000840772440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationPrincipalResolver$$Lambda$1074/0x00000008407a0040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationPrincipalResolver$$Lambda$1079/0x00000008407a0c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationPrincipalResolver$$Lambda$1108/0x0000000840770840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationPrincipalResolver$$Lambda$1425/0x0000000840966440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"resolve","parameterTypes":["org.apereo.cas.authentication.principal.Principal"] }]}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationPrincipalResolver$$Lambda$1495/0x00000008409b1040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"resolve","parameterTypes":["org.apereo.cas.authentication.principal.Principal"] }]}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationProvider"}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationProviderResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationProviderSelector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationTrigger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.MultifactorAuthenticationTriggerSelectionStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.OneTimeTokenAccount$OneTimeTokenAccountBuilder"}
,
{
  "name":"org.apereo.cas.authentication.PrePostAuthenticationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.PreventedException"}
,
{
  "name":"org.apereo.cas.authentication.PrincipalElectionStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.ProtocolAttributeEncoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.PseudoPlatformTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"commit","parameterTypes":["org.springframework.transaction.TransactionStatus"] }, 
    {"name":"getTransaction","parameterTypes":["org.springframework.transaction.TransactionDefinition"] }, 
    {"name":"rollback","parameterTypes":["org.springframework.transaction.TransactionStatus"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.adaptive.AdaptiveAuthenticationPolicy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.adaptive.DefaultAdaptiveAuthenticationPolicy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"apply","parameterTypes":["org.springframework.webflow.execution.RequestContext","java.lang.String","org.apereo.cas.authentication.adaptive.geo.GeoLocationRequest"] }]}
,
{
  "name":"org.apereo.cas.authentication.adaptive.geo.GeoLocationRequest"}
,
{
  "name":"org.apereo.cas.authentication.adaptive.geo.GeoLocationResponse"}
,
{
  "name":"org.apereo.cas.authentication.adaptive.geo.GeoLocationService"}
,
{
  "name":"org.apereo.cas.authentication.adaptive.intel.BaseIPAddressIntelligenceService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"examine","parameterTypes":["org.springframework.webflow.execution.RequestContext","java.lang.String"] }]}
,
{
  "name":"org.apereo.cas.authentication.adaptive.intel.DefaultIPAddressIntelligenceService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"examineInternal","parameterTypes":["org.springframework.webflow.execution.RequestContext","java.lang.String"] }]}
,
{
  "name":"org.apereo.cas.authentication.adaptive.intel.IPAddressIntelligenceResponse"}
,
{
  "name":"org.apereo.cas.authentication.adaptive.intel.IPAddressIntelligenceService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.attribute.AttributeDefinition"}
,
{
  "name":"org.apereo.cas.authentication.attribute.AttributeDefinitionStore",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.attribute.DefaultAttributeDefinition$DefaultAttributeDefinitionBuilder"}
,
{
  "name":"org.apereo.cas.authentication.attribute.DefaultAttributeDefinitionStore",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getAttributeDefinitions","parameterTypes":[] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"isEmpty","parameterTypes":[] }, 
    {"name":"locateAttributeDefinition","parameterTypes":["java.lang.String"] }, 
    {"name":"locateAttributeDefinition","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"locateAttributeDefinition","parameterTypes":["java.util.function.Predicate"] }, 
    {"name":"registerAttributeDefinition","parameterTypes":["java.lang.String","org.apereo.cas.authentication.attribute.AttributeDefinition"] }, 
    {"name":"registerAttributeDefinition","parameterTypes":["org.apereo.cas.authentication.attribute.AttributeDefinition"] }, 
    {"name":"removeAttributeDefinition","parameterTypes":["java.lang.String"] }, 
    {"name":"resolveAttributeValues","parameterTypes":["java.lang.String","java.util.List","org.apereo.cas.services.RegisteredService","java.util.Map"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.attribute.PrincipalAttributeRepositoryFetcher$PrincipalAttributeRepositoryFetcherBuilder"}
,
{
  "name":"org.apereo.cas.authentication.credential.UsernamePasswordCredential"}
,
{
  "name":"org.apereo.cas.authentication.handler.PrincipalNameTransformer"}
,
{
  "name":"org.apereo.cas.authentication.handler.RegisteredServiceAuthenticationHandlerResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"resolve","parameterTypes":["java.util.Set","org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"supports","parameterTypes":["java.util.Set","org.apereo.cas.authentication.AuthenticationTransaction"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.handler.support.AbstractPreAndPostProcessingAuthenticationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"authenticate","parameterTypes":["org.apereo.cas.authentication.Credential"] }]}
,
{
  "name":"org.apereo.cas.authentication.handler.support.AbstractUsernamePasswordAuthenticationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getPasswordEncoder","parameterTypes":[] }, 
    {"name":"getPasswordPolicyConfiguration","parameterTypes":[] }, 
    {"name":"getPasswordPolicyHandlingStrategy","parameterTypes":[] }, 
    {"name":"getPrincipalNameTransformer","parameterTypes":[] }, 
    {"name":"setPasswordEncoder","parameterTypes":["org.springframework.security.crypto.password.PasswordEncoder"] }, 
    {"name":"setPasswordPolicyConfiguration","parameterTypes":["org.apereo.cas.authentication.support.password.PasswordPolicyContext"] }, 
    {"name":"setPasswordPolicyHandlingStrategy","parameterTypes":["org.apereo.cas.authentication.AuthenticationPasswordPolicyHandlingStrategy"] }, 
    {"name":"setPrincipalNameTransformer","parameterTypes":["org.apereo.cas.authentication.handler.PrincipalNameTransformer"] }, 
    {"name":"supports","parameterTypes":["java.lang.Class"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.authentication.Credential"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.handler.support.HttpBasedServiceCredentialsAuthenticationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"authenticate","parameterTypes":["org.apereo.cas.authentication.Credential"] }, 
    {"name":"supports","parameterTypes":["java.lang.Class"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.authentication.Credential"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.handler.support.jaas.JaasAuthenticationHandler"}
,
{
  "name":"org.apereo.cas.authentication.metadata.AuthenticationCredentialTypeMetaDataPopulator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"populateAttributes","parameterTypes":["org.apereo.cas.authentication.AuthenticationBuilder","org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.authentication.Credential"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.metadata.AuthenticationDateAttributeMetaDataPopulator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"populateAttributes","parameterTypes":["org.apereo.cas.authentication.AuthenticationBuilder","org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.authentication.Credential"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.metadata.BaseAuthenticationMetaDataPopulator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.metadata.ClientInfoAuthenticationMetaDataPopulator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"populateAttributes","parameterTypes":["org.apereo.cas.authentication.AuthenticationBuilder","org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.authentication.Credential"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.metadata.CredentialCustomFieldsAttributeMetaDataPopulator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"populateAttributes","parameterTypes":["org.apereo.cas.authentication.AuthenticationBuilder","org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.authentication.Credential"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.metadata.RememberMeAuthenticationMetaDataPopulator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"populateAttributes","parameterTypes":["org.apereo.cas.authentication.AuthenticationBuilder","org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.authentication.Credential"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.metadata.SuccessfulHandlerMetaDataPopulator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"populateAttributes","parameterTypes":["org.apereo.cas.authentication.AuthenticationBuilder","org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.authentication.Credential"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.mfa.trigger.AdaptiveMultifactorAuthenticationTrigger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isActivated","parameterTypes":["org.apereo.cas.authentication.Authentication","org.apereo.cas.services.RegisteredService","javax.servlet.http.HttpServletRequest","org.apereo.cas.authentication.principal.Service"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.mfa.trigger.AuthenticationAttributeMultifactorAuthenticationTrigger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isActivated","parameterTypes":["org.apereo.cas.authentication.Authentication","org.apereo.cas.services.RegisteredService","javax.servlet.http.HttpServletRequest","org.apereo.cas.authentication.principal.Service"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.mfa.trigger.GlobalMultifactorAuthenticationTrigger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isActivated","parameterTypes":["org.apereo.cas.authentication.Authentication","org.apereo.cas.services.RegisteredService","javax.servlet.http.HttpServletRequest","org.apereo.cas.authentication.principal.Service"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.mfa.trigger.GroovyScriptMultifactorAuthenticationTrigger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isActivated","parameterTypes":["org.apereo.cas.authentication.Authentication","org.apereo.cas.services.RegisteredService","javax.servlet.http.HttpServletRequest","org.apereo.cas.authentication.principal.Service"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.mfa.trigger.HttpRequestMultifactorAuthenticationTrigger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isActivated","parameterTypes":["org.apereo.cas.authentication.Authentication","org.apereo.cas.services.RegisteredService","javax.servlet.http.HttpServletRequest","org.apereo.cas.authentication.principal.Service"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.mfa.trigger.PredicatedPrincipalAttributeMultifactorAuthenticationTrigger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isActivated","parameterTypes":["org.apereo.cas.authentication.Authentication","org.apereo.cas.services.RegisteredService","javax.servlet.http.HttpServletRequest","org.apereo.cas.authentication.principal.Service"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.mfa.trigger.PrincipalAttributeMultifactorAuthenticationTrigger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isActivated","parameterTypes":["org.apereo.cas.authentication.Authentication","org.apereo.cas.services.RegisteredService","javax.servlet.http.HttpServletRequest","org.apereo.cas.authentication.principal.Service"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.mfa.trigger.RegisteredServiceMultifactorAuthenticationTrigger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isActivated","parameterTypes":["org.apereo.cas.authentication.Authentication","org.apereo.cas.services.RegisteredService","javax.servlet.http.HttpServletRequest","org.apereo.cas.authentication.principal.Service"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.mfa.trigger.RegisteredServicePrincipalAttributeMultifactorAuthenticationTrigger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isActivated","parameterTypes":["org.apereo.cas.authentication.Authentication","org.apereo.cas.services.RegisteredService","javax.servlet.http.HttpServletRequest","org.apereo.cas.authentication.principal.Service"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.mfa.trigger.RestEndpointMultifactorAuthenticationTrigger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isActivated","parameterTypes":["org.apereo.cas.authentication.Authentication","org.apereo.cas.services.RegisteredService","javax.servlet.http.HttpServletRequest","org.apereo.cas.authentication.principal.Service"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.mfa.trigger.ScriptedRegisteredServiceMultifactorAuthenticationTrigger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isActivated","parameterTypes":["org.apereo.cas.authentication.Authentication","org.apereo.cas.services.RegisteredService","javax.servlet.http.HttpServletRequest","org.apereo.cas.authentication.principal.Service"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.mfa.trigger.TimedMultifactorAuthenticationTrigger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isActivated","parameterTypes":["org.apereo.cas.authentication.Authentication","org.apereo.cas.services.RegisteredService","javax.servlet.http.HttpServletRequest","org.apereo.cas.authentication.principal.Service"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.policy.AcceptAnyAuthenticationPolicyFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"createPolicy","parameterTypes":["java.lang.Object"] }]}
,
{
  "name":"org.apereo.cas.authentication.policy.RegisteredServiceAuthenticationPolicyResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"resolve","parameterTypes":["org.apereo.cas.authentication.AuthenticationTransaction"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.authentication.AuthenticationTransaction"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.principal.AbstractServiceFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"createService","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"createService","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.Class"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.principal.AbstractWebApplicationService"}
,
{
  "name":"org.apereo.cas.authentication.principal.AbstractWebApplicationServiceResponseBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getServicesManager","parameterTypes":[] }, 
    {"name":"getUrlValidator","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.principal.ChainingPrincipalElectionStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getAttributeMerger","parameterTypes":[] }, 
    {"name":"nominate","parameterTypes":["java.util.Collection","java.util.Map"] }, 
    {"name":"nominate","parameterTypes":["java.util.List","java.util.Map"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.principal.DefaultPrincipalFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"createPrincipal","parameterTypes":["java.lang.String","java.util.Map"] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.principal.DefaultPrincipalResolutionExecutionPlan"}
,
{
  "name":"org.apereo.cas.authentication.principal.DefaultServiceMatchingStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"matches","parameterTypes":["org.apereo.cas.authentication.principal.Service","org.apereo.cas.authentication.principal.Service"] }]}
,
{
  "name":"org.apereo.cas.authentication.principal.DefaultWebApplicationResponseBuilderLocator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"locate","parameterTypes":["org.apereo.cas.authentication.principal.WebApplicationService"] }]}
,
{
  "name":"org.apereo.cas.authentication.principal.PersistentIdGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.principal.Principal"}
,
{
  "name":"org.apereo.cas.authentication.principal.PrincipalAttributesRepositoryCache",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.principal.PrincipalElectionStrategyConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.principal.PrincipalFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.principal.PrincipalResolutionExecutionPlan"}
,
{
  "name":"org.apereo.cas.authentication.principal.PrincipalResolutionExecutionPlanConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.principal.PrincipalResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.principal.RegisteredServicePrincipalAttributesRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.principal.Response"}
,
{
  "name":"org.apereo.cas.authentication.principal.Response$ResponseType"}
,
{
  "name":"org.apereo.cas.authentication.principal.ResponseBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.principal.ResponseBuilderLocator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.principal.Service"}
,
{
  "name":"org.apereo.cas.authentication.principal.ServiceFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.principal.ServiceFactoryConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.principal.ServiceMatchingStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.principal.ShibbolethCompatiblePersistentIdGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"generate","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"generate","parameterTypes":["org.apereo.cas.authentication.principal.Principal","java.lang.String"] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.principal.WebApplicationService"}
,
{
  "name":"org.apereo.cas.authentication.principal.WebApplicationServiceFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"createService","parameterTypes":["java.lang.String"] }, 
    {"name":"createService","parameterTypes":["javax.servlet.http.HttpServletRequest"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.principal.WebApplicationServiceResponseBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"build","parameterTypes":["org.apereo.cas.authentication.principal.WebApplicationService","java.lang.String","org.apereo.cas.authentication.Authentication"] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"setOrder","parameterTypes":["int"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.principal.cache.AbstractPrincipalAttributesRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"getAttributeRepositoryIds","parameterTypes":[] }, 
    {"name":"getMergingStrategy","parameterTypes":[] }, 
    {"name":"isIgnoreResolvedAttributes","parameterTypes":[] }, 
    {"name":"setAttributeRepositoryIds","parameterTypes":["java.util.Set"] }, 
    {"name":"setIgnoreResolvedAttributes","parameterTypes":["boolean"] }, 
    {"name":"setMergingStrategy","parameterTypes":["org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesCoreProperties$MergingStrategyTypes"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.principal.cache.CachingPrincipalAttributesRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getAttributes","parameterTypes":["org.apereo.cas.authentication.principal.Principal","org.apereo.cas.services.RegisteredService"] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }, 
    {"name":"update","parameterTypes":["java.lang.String","java.util.Map","org.apereo.cas.services.RegisteredService"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.principal.cache.DefaultPrincipalAttributesRepositoryCache",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"fetchAttributes","parameterTypes":["org.apereo.cas.services.RegisteredService","org.apereo.cas.authentication.principal.RegisteredServicePrincipalAttributesRepository","org.apereo.cas.authentication.principal.Principal"] }, 
    {"name":"invalidate","parameterTypes":[] }, 
    {"name":"putAttributes","parameterTypes":["org.apereo.cas.services.RegisteredService","org.apereo.cas.authentication.principal.RegisteredServicePrincipalAttributesRepository","java.lang.String","java.util.Map"] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.principal.provision.DelegatedClientUserProfileProvisioner"}
,
{
  "name":"org.apereo.cas.authentication.principal.resolvers.ChainingPrincipalResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getAttributeRepository","parameterTypes":[] }, 
    {"name":"resolve","parameterTypes":["org.apereo.cas.authentication.Credential","java.util.Optional","java.util.Optional"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.authentication.Credential"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.principal.resolvers.PersonDirectoryPrincipalResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apereo.cas.authentication.principal.resolvers.PrincipalResolutionContext"] }],
  "queriedMethods":[
    {"name":"getAttributeRepository","parameterTypes":[] }, 
    {"name":"resolve","parameterTypes":["org.apereo.cas.authentication.Credential","java.util.Optional","java.util.Optional"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.authentication.Credential"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.principal.resolvers.PersonDirectoryPrincipalResolver$PrincipalResolutionResult"}
,
{
  "name":"org.apereo.cas.authentication.principal.resolvers.PersonDirectoryPrincipalResolver$PrincipalResolutionResult$PrincipalResolutionResultBuilder"}
,
{
  "name":"org.apereo.cas.authentication.principal.resolvers.PrincipalResolutionContext"}
,
{
  "name":"org.apereo.cas.authentication.principal.resolvers.PrincipalResolutionContext$PrincipalResolutionContextBuilder"}
,
{
  "name":"org.apereo.cas.authentication.principal.resolvers.ProxyingPrincipalResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getAttributeRepository","parameterTypes":[] }, 
    {"name":"resolve","parameterTypes":["org.apereo.cas.authentication.Credential","java.util.Optional","java.util.Optional"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.authentication.Credential"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.authentication.support.AbstractProtocolAttributeEncoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"encodeAttributes","parameterTypes":["java.util.Map","org.apereo.cas.services.RegisteredService","org.apereo.cas.authentication.principal.WebApplicationService"] }]}
,
{
  "name":"org.apereo.cas.authentication.support.DefaultCasProtocolAttributeEncoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.authentication.support.NoOpProtocolAttributeEncoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"encodeAttributes","parameterTypes":["java.util.Map","org.apereo.cas.services.RegisteredService","org.apereo.cas.authentication.principal.WebApplicationService"] }]}
,
{
  "name":"org.apereo.cas.authentication.support.password.PasswordPolicyContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationComponentSerializationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casCoreAuthenticationComponentSerializationPlanConfigurer","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationComponentSerializationConfiguration$$Lambda$1265/0x00000008408bbc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationComponentSerializationConfiguration$$Lambda$1270/0x00000008408c8c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationComponentSerializationConfiguration$$Lambda$1272/0x00000008408c6c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationComponentSerializationConfiguration$$Lambda$1277/0x00000008408ce040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationComponentSerializationConfiguration$$Lambda$1307/0x00000008408ce040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationComponentSerializationConfiguration$$Lambda$1511/0x00000008409bd040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureComponentSerializationPlan","parameterTypes":["org.apereo.cas.util.serialization.ComponentSerializationPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationComponentSerializationConfiguration$$Lambda$1581/0x0000000840a4f840",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureComponentSerializationPlan","parameterTypes":["org.apereo.cas.util.serialization.ComponentSerializationPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationConfiguration$CasCoreAuthenticationBaseConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationAttributeReleasePolicy","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"authenticationResultBuilderFactory","parameterTypes":[] }, 
    {"name":"authenticationTransactionFactory","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationConfiguration$CasCoreAuthenticationManagerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationTransactionManager","parameterTypes":["org.apereo.cas.authentication.AuthenticationManager","org.springframework.context.ConfigurableApplicationContext"] }, 
    {"name":"casAuthenticationManager","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationConfiguration$CasCoreAuthenticationPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationEventExecutionPlan","parameterTypes":["java.util.List"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersAcceptConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"acceptPasswordPolicyConfiguration","parameterTypes":[] }, 
    {"name":"acceptUsersAuthenticationHandler","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.services.ServicesManager","org.apereo.cas.authentication.principal.PrincipalFactory","org.apereo.cas.authentication.support.password.PasswordPolicyContext"] }, 
    {"name":"acceptUsersPrincipalFactory","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersJaasConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jaasAuthenticationEventExecutionPlanConfigurer","parameterTypes":["java.util.List","java.util.List"] }, 
    {"name":"jaasAuthenticationHandlers","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.services.ServicesManager","org.apereo.cas.authentication.principal.PrincipalFactory"] }, 
    {"name":"jaasPasswordPolicyConfiguration","parameterTypes":[] }, 
    {"name":"jaasPersonDirectoryPrincipalResolvers","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.services.persondir.IPersonAttributeDao","org.apereo.cas.authentication.principal.PrincipalFactory"] }, 
    {"name":"jaasPrincipalFactory","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersJaasConfiguration$$Lambda$1085/0x00000008407a5040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersJaasConfiguration$$Lambda$1090/0x00000008407a5440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersJaasConfiguration$$Lambda$1095/0x00000008407c7040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersJaasConfiguration$$Lambda$1100/0x00000008407c4c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersJaasConfiguration$$Lambda$1119/0x00000008407be840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersJaasConfiguration$$Lambda$1450/0x0000000840982840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersJaasConfiguration$$Lambda$1520/0x00000008409f5040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersProxyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"proxyAuthenticationEventExecutionPlanConfigurer","parameterTypes":["org.apereo.cas.authentication.AuthenticationHandler","org.apereo.cas.authentication.principal.PrincipalResolver"] }, 
    {"name":"proxyAuthenticationHandler","parameterTypes":["org.apereo.cas.services.ServicesManager","org.apereo.cas.authentication.principal.PrincipalFactory","org.apereo.cas.util.http.HttpClient"] }, 
    {"name":"proxyPrincipalFactory","parameterTypes":[] }, 
    {"name":"proxyPrincipalResolver","parameterTypes":["org.apereo.cas.authentication.principal.PrincipalFactory"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersProxyConfiguration$$Lambda$1106/0x0000000840818040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersProxyConfiguration$$Lambda$1111/0x0000000840810c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersProxyConfiguration$$Lambda$1113/0x000000084080f440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersProxyConfiguration$$Lambda$1118/0x000000084080f040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersProxyConfiguration$$Lambda$1148/0x0000000840807040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersProxyConfiguration$$Lambda$1458/0x0000000840986440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationHandlersConfiguration$CasCoreAuthenticationHandlersProxyConfiguration$$Lambda$1528/0x0000000840a0f040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationMetadataConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationMetadataConfiguration$CasCoreAuthenticationMetadataCipherConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"cacheCredentialsCipherExecutor","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationMetadataConfiguration$CasCoreAuthenticationMetadataClearPassConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationMetadataConfiguration$CasCoreAuthenticationMetadataExecutionPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casCoreAuthenticationMetadataAuthenticationEventExecutionPlanConfigurer","parameterTypes":["org.apereo.cas.authentication.AuthenticationMetaDataPopulator","org.apereo.cas.authentication.AuthenticationMetaDataPopulator","org.apereo.cas.authentication.AuthenticationMetaDataPopulator","org.apereo.cas.authentication.AuthenticationMetaDataPopulator","org.apereo.cas.authentication.AuthenticationMetaDataPopulator","org.apereo.cas.authentication.AuthenticationMetaDataPopulator","org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationMetadataConfiguration$CasCoreAuthenticationMetadataExecutionPlanConfiguration$$Lambda$1107/0x0000000840818840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationMetadataConfiguration$CasCoreAuthenticationMetadataExecutionPlanConfiguration$$Lambda$1112/0x0000000840811440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationMetadataConfiguration$CasCoreAuthenticationMetadataExecutionPlanConfiguration$$Lambda$1114/0x000000084080ec40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationMetadataConfiguration$CasCoreAuthenticationMetadataExecutionPlanConfiguration$$Lambda$1119/0x000000084080e840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationMetadataConfiguration$CasCoreAuthenticationMetadataExecutionPlanConfiguration$$Lambda$1149/0x0000000840806840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationMetadataConfiguration$CasCoreAuthenticationMetadataExecutionPlanConfiguration$$Lambda$1459/0x0000000840985840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationMetadataConfiguration$CasCoreAuthenticationMetadataExecutionPlanConfiguration$$Lambda$1529/0x0000000840a0f440",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationMetadataConfiguration$CasCoreAuthenticationMetadataPopulatorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationCredentialTypeMetaDataPopulator","parameterTypes":[] }, 
    {"name":"authenticationDateMetaDataPopulator","parameterTypes":[] }, 
    {"name":"clientInfoAuthenticationMetaDataPopulator","parameterTypes":[] }, 
    {"name":"credentialCustomFieldsAttributeMetaDataPopulator","parameterTypes":[] }, 
    {"name":"rememberMeAuthenticationMetaDataPopulator","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"successfulHandlerMetaDataPopulator","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPolicyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"ipAddressIntelligenceService","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPolicyConfiguration$CasCoreAuthenticationPolicyPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"adaptiveAuthenticationPolicy","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.authentication.adaptive.intel.IPAddressIntelligenceService","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"authenticationPolicyExecutionPlanConfigurer","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPolicyConfiguration$CasCoreAuthenticationPolicyPlanConfiguration$$Lambda$1108/0x0000000840818c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPolicyConfiguration$CasCoreAuthenticationPolicyPlanConfiguration$$Lambda$1113/0x0000000840811840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPolicyConfiguration$CasCoreAuthenticationPolicyPlanConfiguration$$Lambda$1115/0x000000084080e040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPolicyConfiguration$CasCoreAuthenticationPolicyPlanConfiguration$$Lambda$1120/0x000000084080ec40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPolicyConfiguration$CasCoreAuthenticationPolicyPlanConfiguration$$Lambda$1150/0x0000000840806c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPolicyConfiguration$CasCoreAuthenticationPolicyPlanConfiguration$$Lambda$1460/0x0000000840985c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPolicyConfiguration$CasCoreAuthenticationPolicyPlanConfiguration$$Lambda$1530/0x0000000840a0e840",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPrincipalConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPrincipalConfiguration$CasCoreAuthenticationPrincipalElectionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultPrincipalElectionStrategyConfigurer","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.authentication.principal.PrincipalFactory"] }, 
    {"name":"principalElectionStrategy","parameterTypes":["java.util.List","org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPrincipalConfiguration$CasCoreAuthenticationPrincipalElectionConfiguration$$Lambda$1119/0x000000084081b840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPrincipalConfiguration$CasCoreAuthenticationPrincipalElectionConfiguration$$Lambda$1124/0x0000000840815c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPrincipalConfiguration$CasCoreAuthenticationPrincipalElectionConfiguration$$Lambda$1126/0x000000084080bc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPrincipalConfiguration$CasCoreAuthenticationPrincipalElectionConfiguration$$Lambda$1131/0x000000084080b840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPrincipalConfiguration$CasCoreAuthenticationPrincipalElectionConfiguration$$Lambda$1161/0x0000000840803840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPrincipalConfiguration$CasCoreAuthenticationPrincipalElectionConfiguration$$Lambda$1471/0x00000008409a8040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configurePrincipalElectionStrategy","parameterTypes":["org.apereo.cas.authentication.principal.ChainingPrincipalElectionStrategy"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPrincipalConfiguration$CasCoreAuthenticationPrincipalElectionConfiguration$$Lambda$1541/0x0000000840a0c440",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configurePrincipalElectionStrategy","parameterTypes":["org.apereo.cas.authentication.principal.ChainingPrincipalElectionStrategy"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPrincipalConfiguration$CasCoreAuthenticationPrincipalFactoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"globalPrincipalAttributeRepository","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"principalFactory","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationPrincipalConfiguration$CasCoreAuthenticationPrincipalResolutionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultPrincipalResolver","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.authentication.PrincipalElectionStrategy"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationServiceSelectionStrategyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casCoreAuthenticationServiceSelectionStrategyConfigurer","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationServiceSelectionStrategyConfiguration$$Lambda$911/0x000000084070f840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationServiceSelectionStrategyConfiguration$$Lambda$915/0x0000000840706c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationServiceSelectionStrategyConfiguration$$Lambda$918/0x00000008406f5040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationServiceSelectionStrategyConfiguration$$Lambda$923/0x00000008406f5440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationServiceSelectionStrategyConfiguration$$Lambda$933/0x00000008406db840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationServiceSelectionStrategy","parameterTypes":["org.apereo.cas.authentication.AuthenticationServiceSelectionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationServiceSelectionStrategyConfiguration$$Lambda$952/0x00000008406fd440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationServiceSelectionStrategyConfiguration$$Lambda$965/0x0000000840733840",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationServiceSelectionStrategy","parameterTypes":["org.apereo.cas.authentication.AuthenticationServiceSelectionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationExecutionPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationHandlerResolversExecutionPlanConfigurer","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.apereo.cas.authentication.AuthenticationHandlerResolver","org.apereo.cas.authentication.AuthenticationPolicyResolver","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"groovyAuthenticationProcessorExecutionPlanConfigurer","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationExecutionPlanConfiguration$$Lambda$1109/0x0000000840819040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationExecutionPlanConfiguration$$Lambda$1110/0x0000000840819440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationExecutionPlanConfiguration$$Lambda$1114/0x0000000840811c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationExecutionPlanConfiguration$$Lambda$1115/0x0000000840817840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationExecutionPlanConfiguration$$Lambda$1116/0x000000084080e440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationExecutionPlanConfiguration$$Lambda$1117/0x000000084080d840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationExecutionPlanConfiguration$$Lambda$1121/0x000000084080e040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationExecutionPlanConfiguration$$Lambda$1122/0x000000084080e440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationExecutionPlanConfiguration$$Lambda$1151/0x0000000840806040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationExecutionPlanConfiguration$$Lambda$1152/0x0000000840806440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationExecutionPlanConfiguration$$Lambda$1461/0x0000000840985040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationExecutionPlanConfiguration$$Lambda$1462/0x0000000840985440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationExecutionPlanConfiguration$$Lambda$1531/0x0000000840a0ec40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationExecutionPlanConfiguration$$Lambda$1532/0x0000000840a0e040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationHandlerResolverConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"registeredServiceAuthenticationHandlerResolver","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.services.ServicesManager","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationPolicyResolverConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"registeredServiceAuthenticationPolicyResolver","parameterTypes":["org.apereo.cas.services.ServicesManager","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationPrincipalCacheConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"principalAttributesRepositoryCache","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreAuthenticationSupportConfiguration$CasCoreAuthenticationSupportBaseConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultAuthenticationSystemSupport","parameterTypes":["org.apereo.cas.authentication.AuthenticationTransactionManager","org.apereo.cas.authentication.PrincipalElectionStrategy","org.apereo.cas.authentication.AuthenticationResultBuilderFactory","org.apereo.cas.authentication.AuthenticationTransactionFactory"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreConfiguration$CasCoreAuthenticationServiceSelectionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationServiceSelectionPlan","parameterTypes":["java.util.List"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreConfiguration$CasCoreContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"centralAuthenticationService","parameterTypes":["org.apereo.cas.CentralAuthenticationServiceContext"] }, 
    {"name":"centralAuthenticationService","parameterTypes":["org.apereo.cas.authentication.AuthenticationServiceSelectionPlan","org.apereo.cas.util.crypto.CipherExecutor","org.apereo.cas.authentication.principal.PrincipalFactory","org.apereo.cas.ticket.registry.TicketRegistry","org.apereo.cas.services.ServicesManager","org.apereo.cas.ticket.TicketFactory","org.apereo.cas.audit.AuditableExecution","org.apereo.cas.authentication.ContextualAuthenticationPolicyFactory","org.apereo.cas.authentication.principal.ServiceMatchingStrategy","org.springframework.context.ConfigurableApplicationContext"] }, 
    {"name":"centralAuthenticationServiceContext","parameterTypes":["org.apereo.cas.authentication.AuthenticationServiceSelectionPlan","org.apereo.cas.util.crypto.CipherExecutor","org.apereo.cas.authentication.principal.PrincipalFactory","org.apereo.cas.ticket.registry.TicketRegistry","org.apereo.cas.services.ServicesManager","org.apereo.cas.ticket.TicketFactory","org.apereo.cas.audit.AuditableExecution","org.apereo.cas.authentication.ContextualAuthenticationPolicyFactory","org.apereo.cas.authentication.principal.ServiceMatchingStrategy","org.apereo.cas.util.lock.LockRepository","org.springframework.context.ConfigurableApplicationContext"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreConfiguration$CasCorePolicyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationPolicyFactory","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"serviceMatchingStrategy","parameterTypes":["org.apereo.cas.services.ServicesManager"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreHttpConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreHttpConfiguration$CasCoreHttpClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"httpClient","parameterTypes":["org.apereo.cas.authentication.CasSSLContext","javax.net.ssl.HostnameVerifier","org.apache.http.conn.ssl.SSLConnectionSocketFactory","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"noRedirectHttpClient","parameterTypes":["org.apereo.cas.authentication.CasSSLContext","javax.net.ssl.HostnameVerifier","org.apache.http.conn.ssl.SSLConnectionSocketFactory","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"supportsTrustStoreSslSocketFactoryHttpClient","parameterTypes":["org.apereo.cas.authentication.CasSSLContext","javax.net.ssl.HostnameVerifier","org.apache.http.conn.ssl.SSLConnectionSocketFactory","org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreHttpConfiguration$CasCoreHttpHostnameConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"hostnameVerifier","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreHttpConfiguration$CasCoreHttpSslFactoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"trustStoreSslSocketFactory","parameterTypes":["org.apereo.cas.authentication.CasSSLContext","javax.net.ssl.HostnameVerifier"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreHttpConfiguration$CasCoreHttpTlsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casSslContext","parameterTypes":["javax.net.ssl.HostnameVerifier","org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreMultifactorAuthenticationAuditConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casCoreMfaAuditTrailRecordResolutionPlanConfigurer","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreMultifactorAuthenticationAuditConfiguration$$Lambda$1184/0x0000000840822040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuditTrailRecordResolutionPlan","parameterTypes":["org.apereo.cas.audit.AuditTrailRecordResolutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreMultifactorAuthenticationAuditConfiguration$$Lambda$1216/0x000000084087b840",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuditTrailRecordResolutionPlan","parameterTypes":["org.apereo.cas.audit.AuditTrailRecordResolutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreMultifactorAuthenticationAuditConfiguration$$Lambda$1253/0x00000008408bec40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreMultifactorAuthenticationAuditConfiguration$$Lambda$1258/0x00000008408bd840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreMultifactorAuthenticationAuditConfiguration$$Lambda$1260/0x00000008408b5040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreMultifactorAuthenticationAuditConfiguration$$Lambda$1265/0x00000008408bd440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreMultifactorAuthenticationAuditConfiguration$$Lambda$1295/0x00000008408bd440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreMultifactorAuthenticationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreMultifactorAuthenticationConfiguration$CasCoreMultifactorAuthenticationContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"requestedContextValidator","parameterTypes":["org.apereo.cas.services.ServicesManager","org.apereo.cas.authentication.MultifactorAuthenticationTriggerSelectionStrategy","org.apereo.cas.authentication.MultifactorAuthenticationContextValidator"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreMultifactorAuthenticationConfiguration$CasCoreMultifactorAuthenticationFailureConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationContextValidator","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.context.ConfigurableApplicationContext"] }, 
    {"name":"failureModeEvaluator","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreNotificationsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"communicationsManager","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.apereo.cas.notifications.sms.SmsSender","org.apereo.cas.notifications.push.NotificationSender"] }, 
    {"name":"notificationSender","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"smsSender","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesAuthenticationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casAttributeEncoder","parameterTypes":["org.apereo.cas.services.ServicesManager","org.apereo.cas.util.crypto.CipherExecutor","org.apereo.cas.services.RegisteredServiceCipherExecutor"] }, 
    {"name":"noOpCasAttributeEncoder","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesComponentSerializationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casCoreServicesComponentSerializationPlanConfigurer","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesComponentSerializationConfiguration$$Lambda$1266/0x00000008408d0040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesComponentSerializationConfiguration$$Lambda$1271/0x00000008408c9040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesComponentSerializationConfiguration$$Lambda$1273/0x00000008408c6040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesComponentSerializationConfiguration$$Lambda$1278/0x00000008408ce440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesComponentSerializationConfiguration$$Lambda$1308/0x00000008408ce440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesComponentSerializationConfiguration$$Lambda$1512/0x00000008409bc840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureComponentSerializationPlan","parameterTypes":["org.apereo.cas.util.serialization.ComponentSerializationPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesComponentSerializationConfiguration$$Lambda$1582/0x0000000840a4f040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureComponentSerializationPlan","parameterTypes":["org.apereo.cas.util.serialization.ComponentSerializationPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServiceRegistryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"serviceRegistry","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.springframework.beans.factory.ObjectProvider","org.apereo.cas.services.ServiceRegistryExecutionPlan"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServiceRegistryPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"serviceRegistryExecutionPlan","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesBaseConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"registeredServiceAccessStrategyEnforcer","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"registeredServiceCipherExecutor","parameterTypes":[] }, 
    {"name":"shibbolethCompatiblePersistentIdGenerator","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesEventsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"registeredServicesEventListener","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.services.ServicesManager","org.apereo.cas.notifications.CommunicationsManager"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesListenerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultServiceRegistryListener","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesManagerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"refreshServicesManagerWhenReady","parameterTypes":["org.springframework.boot.context.event.ApplicationReadyEvent"] }, 
    {"name":"servicesManager","parameterTypes":["java.util.List"] }, 
    {"name":"servicesManagerCache","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesManagerExecutionPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultServicesManagerExecutionPlanConfigurer","parameterTypes":["org.apereo.cas.services.ServicesManagerConfigurationContext"] }, 
    {"name":"defaultServicesManagerRegisteredServiceLocator","parameterTypes":[] }, 
    {"name":"servicesManagerConfigurationContext","parameterTypes":["org.apereo.cas.services.ChainingServiceRegistry","com.github.benmanes.caffeine.cache.Cache","java.util.List","org.springframework.core.env.Environment","org.springframework.context.ConfigurableApplicationContext"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesManagerExecutionPlanConfiguration$$Lambda$909/0x0000000840708440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesManagerExecutionPlanConfiguration$$Lambda$913/0x0000000840707040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesManagerExecutionPlanConfiguration$$Lambda$916/0x00000008406f6440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesManagerExecutionPlanConfiguration$$Lambda$921/0x00000008406f5840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesManagerExecutionPlanConfiguration$$Lambda$931/0x00000008406dcc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureServicesManager","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesManagerExecutionPlanConfiguration$$Lambda$950/0x00000008406fd840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesManagerExecutionPlanConfiguration$$Lambda$963/0x0000000840734c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureServicesManager","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesResponseBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"webApplicationServiceResponseBuilder","parameterTypes":["org.apereo.cas.services.ServicesManager","org.apereo.cas.web.UrlValidator"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesResponseLocatorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"webApplicationResponseBuilderLocator","parameterTypes":["java.util.List"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesSchedulingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"servicesManagerScheduledLoader","parameterTypes":["org.apereo.cas.services.ServiceRegistryExecutionPlan","org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.services.ServicesManager"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreServicesConfiguration$CasCoreServicesStrategyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"registeredServiceReplicationStrategy","parameterTypes":[] }, 
    {"name":"registeredServiceResourceNamingStrategy","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketCatalogConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }],
  "queriedMethods":[{"name":"configureTicketCatalog","parameterTypes":["org.apereo.cas.ticket.TicketCatalog","org.apereo.cas.configuration.CasConfigurationProperties"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketComponentSerializationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"coreTicketsComponentSerializationPlanConfigurer","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketComponentSerializationConfiguration$$Lambda$1260/0x00000008408bc840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketComponentSerializationConfiguration$$Lambda$1265/0x00000008408bfc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketComponentSerializationConfiguration$$Lambda$1267/0x00000008408c0c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketComponentSerializationConfiguration$$Lambda$1272/0x00000008408cf840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketComponentSerializationConfiguration$$Lambda$1302/0x00000008408cf840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketComponentSerializationConfiguration$$Lambda$1513/0x00000008409bcc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureComponentSerializationPlan","parameterTypes":["org.apereo.cas.util.serialization.ComponentSerializationPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketComponentSerializationConfiguration$$Lambda$1583/0x0000000840a4f440",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureComponentSerializationPlan","parameterTypes":["org.apereo.cas.util.serialization.ComponentSerializationPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketIdGeneratorsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"uniqueIdGeneratorsMap","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyGrantingTicketExecutionPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultProxyGrantingTicketFactoryConfigurer","parameterTypes":["org.apereo.cas.ticket.proxy.ProxyGrantingTicketFactory"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyGrantingTicketExecutionPlanConfiguration$$Lambda$1042/0x000000084075b040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyGrantingTicketExecutionPlanConfiguration$$Lambda$1046/0x0000000840753440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyGrantingTicketExecutionPlanConfiguration$$Lambda$1049/0x0000000840768840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyGrantingTicketExecutionPlanConfiguration$$Lambda$1054/0x0000000840769440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyGrantingTicketExecutionPlanConfiguration$$Lambda$1083/0x0000000840770440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyGrantingTicketExecutionPlanConfiguration$$Lambda$1437/0x0000000840962840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureTicketFactory","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyGrantingTicketExecutionPlanConfiguration$$Lambda$1507/0x00000008409f2440",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureTicketFactory","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyGrantingTicketFactoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultProxyGrantingTicketFactory","parameterTypes":["org.apereo.cas.ticket.ExpirationPolicyBuilder","org.apereo.cas.ticket.UniqueTicketIdGenerator","org.apereo.cas.util.crypto.CipherExecutor","org.apereo.cas.services.ServicesManager"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyTicketExecutionPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultProxyTicketFactoryConfigurer","parameterTypes":["org.apereo.cas.ticket.proxy.ProxyTicketFactory"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyTicketExecutionPlanConfiguration$$Lambda$1041/0x000000084075bc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyTicketExecutionPlanConfiguration$$Lambda$1045/0x0000000840753040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyTicketExecutionPlanConfiguration$$Lambda$1048/0x0000000840768440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyTicketExecutionPlanConfiguration$$Lambda$1053/0x0000000840769040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyTicketExecutionPlanConfiguration$$Lambda$1082/0x0000000840770040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyTicketExecutionPlanConfiguration$$Lambda$1436/0x0000000840963440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureTicketFactory","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyTicketExecutionPlanConfiguration$$Lambda$1506/0x00000008409f2040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureTicketFactory","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreProxyTicketFactoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultProxyTicketFactory","parameterTypes":["org.apereo.cas.util.crypto.CipherExecutor","org.apereo.cas.ticket.ExpirationPolicyBuilder","org.apereo.cas.configuration.CasConfigurationProperties","java.util.Map","org.apereo.cas.services.ServicesManager"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreServiceTicketExecutionPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultServiceTicketFactoryConfigurer","parameterTypes":["org.apereo.cas.ticket.ServiceTicketFactory"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreServiceTicketExecutionPlanConfiguration$$Lambda$1040/0x000000084075b840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreServiceTicketExecutionPlanConfiguration$$Lambda$1044/0x0000000840753c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreServiceTicketExecutionPlanConfiguration$$Lambda$1047/0x0000000840768040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreServiceTicketExecutionPlanConfiguration$$Lambda$1052/0x0000000840768c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreServiceTicketExecutionPlanConfiguration$$Lambda$1081/0x0000000840752440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreServiceTicketExecutionPlanConfiguration$$Lambda$1435/0x0000000840963040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureTicketFactory","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreServiceTicketExecutionPlanConfiguration$$Lambda$1505/0x00000008409f1c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureTicketFactory","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreServiceTicketFactoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultServiceTicketFactory","parameterTypes":["org.apereo.cas.util.crypto.CipherExecutor","org.apereo.cas.ticket.ExpirationPolicyBuilder","org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.services.ServicesManager","java.util.Map"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketExpirationPolicyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"grantingTicketExpirationPolicy","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"proxyGrantingTicketExpirationPolicy","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"proxyTicketExpirationPolicy","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"serviceTicketExpirationPolicy","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"transientSessionTicketExpirationPolicy","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketGrantingTicketExecutionPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultTicketGrantingTicketFactoryConfigurer","parameterTypes":["org.apereo.cas.ticket.TicketGrantingTicketFactory"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketGrantingTicketExecutionPlanConfiguration$$Lambda$1034/0x000000084075dc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketGrantingTicketExecutionPlanConfiguration$$Lambda$1038/0x0000000840755040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketGrantingTicketExecutionPlanConfiguration$$Lambda$1041/0x000000084074bc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketGrantingTicketExecutionPlanConfiguration$$Lambda$1046/0x000000084074b840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketGrantingTicketExecutionPlanConfiguration$$Lambda$1075/0x0000000840753840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketGrantingTicketExecutionPlanConfiguration$$Lambda$1429/0x0000000840965440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureTicketFactory","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketGrantingTicketExecutionPlanConfiguration$$Lambda$1499/0x00000008409f0040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureTicketFactory","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketGrantingTicketFactoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultTicketGrantingTicketFactory","parameterTypes":["org.apereo.cas.ticket.ExpirationPolicyBuilder","org.apereo.cas.util.crypto.CipherExecutor","org.apereo.cas.ticket.UniqueTicketIdGenerator","org.apereo.cas.services.ServicesManager"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketIdGeneratorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"proxy20TicketUniqueIdGenerator","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"proxyGrantingTicketUniqueIdGenerator","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"ticketGrantingTicketUniqueIdGenerator","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketLockingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casTicketRegistryLockRepositoryDefault","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultTicketFactory","parameterTypes":["java.util.List"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketRegistryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"lockingStrategy","parameterTypes":[] }, 
    {"name":"protocolTicketCipherExecutor","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"ticketCatalog","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","java.util.List"] }, 
    {"name":"ticketRegistry","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketTransactionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"ticketTransactionManager","parameterTypes":[] }, 
    {"name":"transactionManagementConfigurer","parameterTypes":["org.springframework.transaction.PlatformTransactionManager"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketTransactionConfiguration$$Lambda$704/0x000000084062d840",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketTransactionConfiguration$$Lambda$708/0x0000000840605c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketTransactionConfiguration$$Lambda$711/0x0000000840605040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketTransactionConfiguration$$Lambda$716/0x0000000840605c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketTransactionConfiguration$$Lambda$726/0x00000008405ec840",
  "allDeclaredFields":true,
  "queriedMethods":[{"name":"annotationDrivenTransactionManager","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketTransactionConfiguration$$Lambda$736/0x0000000840639c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"annotationDrivenTransactionManager","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketTransactionConfiguration$$Lambda$745/0x000000084060dc40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketsAuthenticationPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"ticketAuthenticationPolicyExecutionPlanConfigurer","parameterTypes":["org.apereo.cas.ticket.registry.TicketRegistry","org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketsAuthenticationPlanConfiguration$$Lambda$1111/0x0000000840819840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketsAuthenticationPlanConfiguration$$Lambda$1116/0x0000000840817c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketsAuthenticationPlanConfiguration$$Lambda$1118/0x000000084080dc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketsAuthenticationPlanConfiguration$$Lambda$1123/0x000000084080d840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketsAuthenticationPlanConfiguration$$Lambda$1153/0x0000000840805840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketsAuthenticationPlanConfiguration$$Lambda$1463/0x0000000840984840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketsAuthenticationPlanConfiguration$$Lambda$1533/0x0000000840a0e440",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTicketsBaseConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultTicketRegistrySupport","parameterTypes":["org.apereo.cas.ticket.registry.TicketRegistry"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTransientSessionTicketExecutionPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultTransientSessionTicketFactoryConfigurer","parameterTypes":["org.apereo.cas.ticket.TransientSessionTicketFactory"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTransientSessionTicketExecutionPlanConfiguration$$Lambda$1035/0x000000084075d040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTransientSessionTicketExecutionPlanConfiguration$$Lambda$1039/0x0000000840755440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTransientSessionTicketExecutionPlanConfiguration$$Lambda$1042/0x000000084074b040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTransientSessionTicketExecutionPlanConfiguration$$Lambda$1047/0x000000084074bc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTransientSessionTicketExecutionPlanConfiguration$$Lambda$1076/0x0000000840753c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTransientSessionTicketExecutionPlanConfiguration$$Lambda$1430/0x0000000840964840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureTicketFactory","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTransientSessionTicketExecutionPlanConfiguration$$Lambda$1500/0x00000008409f0440",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureTicketFactory","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsConfiguration$CasCoreTransientSessionTicketFactoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultTransientSessionTicketFactory","parameterTypes":["org.apereo.cas.ticket.ExpirationPolicyBuilder"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsSchedulingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"ticketRegistryCleaner","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.ticket.registry.support.LockingStrategy","org.apereo.cas.logout.LogoutManager","org.apereo.cas.ticket.registry.TicketRegistry"] }, 
    {"name":"ticketRegistryCleaner","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.util.lock.LockRepository","org.apereo.cas.logout.LogoutManager","org.apereo.cas.ticket.registry.TicketRegistry"] }, 
    {"name":"ticketRegistryCleanerScheduler","parameterTypes":["org.apereo.cas.ticket.registry.TicketRegistryCleaner"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsSchedulingConfiguration$TicketRegistryCleanerScheduler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"run","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsSerializationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsSerializationConfiguration$CasCoreTicketsSerializationManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"ticketSerializationManager","parameterTypes":["org.apereo.cas.ticket.serialization.TicketSerializationExecutionPlan"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreTicketsSerializationConfiguration$CasCoreTicketsSerializationPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"ticketSerializationExecutionPlan","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreUtilConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casApplicationContextProvider","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreUtilConfiguration$CasCoreUtilContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casCoreUtilInitialization","parameterTypes":["org.apereo.cas.util.spring.ApplicationContextProvider","org.springframework.core.convert.converter.Converter"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreUtilConfiguration$CasCoreUtilContextConfiguration$$Lambda$1090/0x00000008407aac40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreUtilConfiguration$CasCoreUtilContextConfiguration$$Lambda$1122/0x00000008407fcc40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreUtilConfiguration$CasCoreUtilContextConfiguration$$Lambda$1176/0x0000000840865440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreUtilConfiguration$CasCoreUtilContextConfiguration$$Lambda$1181/0x0000000840852040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreUtilConfiguration$CasCoreUtilContextConfiguration$$Lambda$1183/0x0000000840831040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreUtilConfiguration$CasCoreUtilContextConfiguration$$Lambda$1188/0x0000000840870440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreUtilConfiguration$CasCoreUtilContextConfiguration$$Lambda$1218/0x0000000840839c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasCoreUtilConfiguration$CasCoreUtilConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"messageInterpolator","parameterTypes":[] }, 
    {"name":"objectMapper","parameterTypes":[] }, 
    {"name":"zonedDateTimeToStringConverter","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreUtilConfiguration$CasCoreUtilEssentialConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casBeanValidationPostProcessor","parameterTypes":[] }, 
    {"name":"casRuntimeModuleLoader","parameterTypes":[] }, 
    {"name":"scriptResourceCacheManager","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreUtilSerializationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"componentSerializationPlan","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreWebConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreWebConfiguration$CasCoreWebEndpointsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casProtocolEndpointConfigurer","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreWebConfiguration$CasCoreWebEndpointsConfiguration$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getIgnoredEndpoints","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasCoreWebConfiguration$CasCoreWebMessageSourceConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casCommonMessages","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"messageSource","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","java.util.Properties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasCoreWebConfiguration$CasCoreWebRequestsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"argumentExtractor","parameterTypes":["java.util.List"] }, 
    {"name":"urlValidator","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"yamlHttpMessageConverter","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasDefaultServiceTicketIdGeneratorsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casDefaultServiceTicketUniqueTicketIdGeneratorConfigurer","parameterTypes":["org.apereo.cas.ticket.UniqueTicketIdGenerator"] }, 
    {"name":"serviceTicketUniqueIdGenerator","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasDefaultServiceTicketIdGeneratorsConfiguration$$Lambda$1037/0x000000084075cc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasDefaultServiceTicketIdGeneratorsConfiguration$$Lambda$1041/0x0000000840754040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasDefaultServiceTicketIdGeneratorsConfiguration$$Lambda$1044/0x000000084074ac40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasDefaultServiceTicketIdGeneratorsConfiguration$$Lambda$1049/0x0000000840768040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasDefaultServiceTicketIdGeneratorsConfiguration$$Lambda$1078/0x0000000840752840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasDefaultServiceTicketIdGeneratorsConfiguration$$Lambda$1432/0x0000000840964440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"buildUniqueTicketIdGenerators","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasDefaultServiceTicketIdGeneratorsConfiguration$$Lambda$1502/0x00000008409f1040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"buildUniqueTicketIdGenerators","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasEmbeddedContainerTomcatConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casServletWebServerFactory","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"casTomcatEmbeddedServletContainerCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties","org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasEmbeddedContainerTomcatFiltersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasFiltersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasFiltersConfiguration$CasFiltersBaseConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"currentCredentialsAndAuthenticationClearingFilter","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasFiltersConfiguration$CasFiltersResponseHeadersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"requestParameterSecurityFilter","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"responseHeadersFilter","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"responseHeadersSecurityFilter","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.web.support.ArgumentExtractor","org.apereo.cas.services.ServicesManager","org.apereo.cas.audit.AuditableExecution","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryAttributeDefinitionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"attributeDefinitionStore","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryAttributeRepositoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"aggregatingAttributeRepository","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.persondir.PersonDirectoryAttributeRepositoryPlan"] }, 
    {"name":"cachingAttributeRepository","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.services.persondir.IPersonAttributeDao"] }, 
    {"name":"casPersonDirectoryInitializer","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryAttributeRepositoryConfiguration$$Lambda$1195/0x0000000840824c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryAttributeRepositoryConfiguration$$Lambda$1227/0x000000084087f440",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryAttributeRepositoryConfiguration$$Lambda$1268/0x00000008408d7840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryAttributeRepositoryConfiguration$$Lambda$1273/0x00000008408cf840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryAttributeRepositoryConfiguration$$Lambda$1275/0x00000008408c5840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryAttributeRepositoryConfiguration$$Lambda$1280/0x00000008408cdc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryAttributeRepositoryConfiguration$$Lambda$1310/0x00000008408cdc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryAttributeRepositoryPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"personDirectoryAttributeRepositoryPlan","parameterTypes":["java.util.List","org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryPrincipalResolutionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"personDirectoryAttributeRepositoryPrincipalResolver","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.authentication.principal.PrincipalFactory","org.apereo.services.persondir.IPersonAttributeDao"] }, 
    {"name":"personDirectoryPrincipalFactory","parameterTypes":[] }, 
    {"name":"principalResolutionExecutionPlanConfigurer","parameterTypes":["org.apereo.cas.persondir.PersonDirectoryAttributeRepositoryPlan","org.apereo.cas.authentication.principal.PrincipalResolver"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryPrincipalResolutionConfiguration$$Lambda$1134/0x000000084081f440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryPrincipalResolutionConfiguration$$Lambda$1139/0x0000000840820040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryPrincipalResolutionConfiguration$$Lambda$1141/0x0000000840821840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryPrincipalResolutionConfiguration$$Lambda$1146/0x0000000840822440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryPrincipalResolutionConfiguration$$Lambda$1176/0x0000000840829440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryPrincipalResolutionConfiguration$$Lambda$1486/0x00000008409abc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configurePrincipalResolutionExecutionPlan","parameterTypes":["org.apereo.cas.authentication.principal.PrincipalResolutionExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryPrincipalResolutionConfiguration$$Lambda$1556/0x0000000840a28040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configurePrincipalResolutionExecutionPlan","parameterTypes":["org.apereo.cas.authentication.principal.PrincipalResolutionExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryStaticSubAttributeRepositoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryStaticSubAttributeRepositoryConfiguration$StubAttributeRepositoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"stubAttributeRepositories","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryStaticSubAttributeRepositoryConfiguration$StubAttributeRepositoryPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"stubPersonDirectoryAttributeRepositoryPlanConfigurer","parameterTypes":["org.apereo.cas.util.spring.BeanContainer"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryStaticSubAttributeRepositoryConfiguration$StubAttributeRepositoryPlanConfiguration$$Lambda$1077/0x00000008407a7c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryStaticSubAttributeRepositoryConfiguration$StubAttributeRepositoryPlanConfiguration$$Lambda$1082/0x00000008407a7040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryStaticSubAttributeRepositoryConfiguration$StubAttributeRepositoryPlanConfiguration$$Lambda$1087/0x00000008407c1c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryStaticSubAttributeRepositoryConfiguration$StubAttributeRepositoryPlanConfiguration$$Lambda$1092/0x00000008407c2840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryStaticSubAttributeRepositoryConfiguration$StubAttributeRepositoryPlanConfiguration$$Lambda$1111/0x00000008407b8440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryStaticSubAttributeRepositoryConfiguration$StubAttributeRepositoryPlanConfiguration$$Lambda$1442/0x0000000840980440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAttributeRepositoryPlan","parameterTypes":["org.apereo.cas.persondir.PersonDirectoryAttributeRepositoryPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasPersonDirectoryConfiguration$CasPersonDirectoryStaticSubAttributeRepositoryConfiguration$StubAttributeRepositoryPlanConfiguration$$Lambda$1512/0x00000008409f7c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAttributeRepositoryPlan","parameterTypes":["org.apereo.cas.persondir.PersonDirectoryAttributeRepositoryPlan"] }]}
,
{
  "name":"org.apereo.cas.config.CasPropertiesConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casPropertiesInitializingBean","parameterTypes":["org.springframework.core.env.ConfigurableEnvironment"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasPropertiesConfiguration$$Lambda$1199/0x0000000840826440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasPropertiesConfiguration$$Lambda$1231/0x0000000840888440",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasPropertiesConfiguration$$Lambda$1272/0x00000008408d6c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPropertiesConfiguration$$Lambda$1277/0x00000008408cec40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPropertiesConfiguration$$Lambda$1279/0x00000008408c4c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPropertiesConfiguration$$Lambda$1284/0x00000008408cc040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasPropertiesConfiguration$$Lambda$1314/0x00000008408cc040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasThymeleafConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casPropertiesThymeleafViewResolverConfigurer","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"chainingTemplateViewResolver","parameterTypes":["org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties","org.springframework.web.servlet.ThemeResolver","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"layoutDialect","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasThymeleafConfiguration$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"configureThymeleafView","parameterTypes":["org.thymeleaf.spring5.view.AbstractThymeleafView"] }, 
    {"name":"configureThymeleafViewResolver","parameterTypes":["org.thymeleaf.spring5.view.ThymeleafViewResolver"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasThymeleafConfiguration$ThymeleafViewResolverConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casProtocolViewFactory","parameterTypes":["org.thymeleaf.spring5.SpringTemplateEngine","org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"] }, 
    {"name":"registeredServiceViewResolver","parameterTypes":["org.springframework.web.servlet.ThemeResolver","org.apereo.cas.services.web.ThemeViewResolverFactory"] }, 
    {"name":"templateEngine","parameterTypes":["org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"themeViewResolverFactory","parameterTypes":["org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties","org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.context.ConfigurableApplicationContext","org.thymeleaf.spring5.view.ThymeleafViewResolver","java.util.List"] }, 
    {"name":"thymeleafViewResolver","parameterTypes":["org.thymeleaf.spring5.SpringTemplateEngine","org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties","org.springframework.context.ConfigurableApplicationContext","java.util.List"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasThymeleafConfiguration$ThymeleafWebflowConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casThymeleafLoginFormDirector","parameterTypes":["org.apereo.cas.web.flow.CasWebflowExecutionPlan"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasWebAppConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casWebAppWebMvcConfigurer","parameterTypes":["org.springframework.web.servlet.i18n.LocaleChangeInterceptor"] }, 
    {"name":"handlerMapping","parameterTypes":["org.springframework.web.servlet.mvc.Controller"] }, 
    {"name":"localeResolver","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"passThroughController","parameterTypes":[] }, 
    {"name":"rootController","parameterTypes":[] }, 
    {"name":"themeChangeInterceptor","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasWebAppConfiguration$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasWebAppConfiguration$2",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"addInterceptors","parameterTypes":["org.springframework.web.servlet.config.annotation.InterceptorRegistry"] }]}
,
{
  "name":"org.apereo.cas.config.CasWebAppConfiguration$3",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasWebAppSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casWebSecurityExpressionHandler","parameterTypes":[] }, 
    {"name":"populateSpringSecurityContextAction","parameterTypes":[] }, 
    {"name":"securityContextHolderInitialization","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasWebAppSecurityConfiguration$$Lambda$1205/0x0000000840839440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasWebAppSecurityConfiguration$$Lambda$1237/0x000000084088ec40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.CasWebAppSecurityConfiguration$$Lambda$1278/0x00000008408d4440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasWebAppSecurityConfiguration$$Lambda$1283/0x00000008408cc440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasWebAppSecurityConfiguration$$Lambda$1285/0x00000008408c2440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasWebAppSecurityConfiguration$$Lambda$1290/0x00000008408c9840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasWebAppSecurityConfiguration$$Lambda$1320/0x00000008408c9840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.CasWebAppSecurityConfiguration$CasWebappCoreSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casWebAppSecurityWebMvcConfigurer","parameterTypes":[] }, 
    {"name":"casWebSecurityConfigurerAdapter","parameterTypes":["org.springframework.beans.factory.ObjectProvider","java.util.List","org.springframework.boot.autoconfigure.security.SecurityProperties","org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.security.access.expression.SecurityExpressionHandler"] }
  ]}
,
{
  "name":"org.apereo.cas.config.CasWebAppSecurityConfiguration$CasWebappCoreSecurityConfiguration$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"addViewControllers","parameterTypes":["org.springframework.web.servlet.config.annotation.ViewControllerRegistry"] }]}
,
{
  "name":"org.apereo.cas.config.support.CasWebApplicationServiceFactoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.support.CasWebApplicationServiceFactoryConfiguration$CasWebApplicationServiceFactoryBaseConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"webApplicationServiceFactory","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.config.support.CasWebApplicationServiceFactoryConfiguration$CasWebApplicationServiceFactoryPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casWebApplicationServiceFactoryConfigurer","parameterTypes":["org.apereo.cas.authentication.principal.ServiceFactory"] }
  ]}
,
{
  "name":"org.apereo.cas.config.support.CasWebApplicationServiceFactoryConfiguration$CasWebApplicationServiceFactoryPlanConfiguration$$Lambda$899/0x00000008406e3c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.support.CasWebApplicationServiceFactoryConfiguration$CasWebApplicationServiceFactoryPlanConfiguration$$Lambda$903/0x00000008406d2840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.support.CasWebApplicationServiceFactoryConfiguration$CasWebApplicationServiceFactoryPlanConfiguration$$Lambda$906/0x00000008406b1440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.support.CasWebApplicationServiceFactoryConfiguration$CasWebApplicationServiceFactoryPlanConfiguration$$Lambda$911/0x00000008406f0040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.support.CasWebApplicationServiceFactoryConfiguration$CasWebApplicationServiceFactoryPlanConfiguration$$Lambda$921/0x00000008406d8440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"buildServiceFactories","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.support.CasWebApplicationServiceFactoryConfiguration$CasWebApplicationServiceFactoryPlanConfiguration$$Lambda$940/0x00000008406b9040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.support.CasWebApplicationServiceFactoryConfiguration$CasWebApplicationServiceFactoryPlanConfiguration$$Lambda$953/0x0000000840731c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"buildServiceFactories","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.support.authentication.AcceptUsersAuthenticationEventExecutionPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"acceptUsersAuthenticationEventExecutionPlanConfigurer","parameterTypes":["org.apereo.cas.authentication.AuthenticationHandler","org.apereo.cas.authentication.principal.PrincipalResolver","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"acceptUsersAuthenticationInitializingBean","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.config.support.authentication.AcceptUsersAuthenticationEventExecutionPlanConfiguration$$Lambda$1138/0x0000000840820440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.support.authentication.AcceptUsersAuthenticationEventExecutionPlanConfiguration$$Lambda$1143/0x0000000840821040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.support.authentication.AcceptUsersAuthenticationEventExecutionPlanConfiguration$$Lambda$1145/0x0000000840822840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.support.authentication.AcceptUsersAuthenticationEventExecutionPlanConfiguration$$Lambda$1150/0x0000000840823440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.support.authentication.AcceptUsersAuthenticationEventExecutionPlanConfiguration$$Lambda$1180/0x000000084082a440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.support.authentication.AcceptUsersAuthenticationEventExecutionPlanConfiguration$$Lambda$1206/0x0000000840839840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.support.authentication.AcceptUsersAuthenticationEventExecutionPlanConfiguration$$Lambda$1238/0x000000084088e040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.config.support.authentication.AcceptUsersAuthenticationEventExecutionPlanConfiguration$$Lambda$1279/0x00000008408d3840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.support.authentication.AcceptUsersAuthenticationEventExecutionPlanConfiguration$$Lambda$1284/0x00000008408cb840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.support.authentication.AcceptUsersAuthenticationEventExecutionPlanConfiguration$$Lambda$1286/0x00000008408c1840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.support.authentication.AcceptUsersAuthenticationEventExecutionPlanConfiguration$$Lambda$1291/0x00000008408c9c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.support.authentication.AcceptUsersAuthenticationEventExecutionPlanConfiguration$$Lambda$1321/0x00000008408c9c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.config.support.authentication.AcceptUsersAuthenticationEventExecutionPlanConfiguration$$Lambda$1489/0x00000008409ac840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.config.support.authentication.AcceptUsersAuthenticationEventExecutionPlanConfiguration$$Lambda$1559/0x0000000840a28c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthenticationExecutionPlan","parameterTypes":["org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.configuration.CasConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getAuthn","parameterTypes":[] }, 
    {"name":"setAuthn","parameterTypes":["org.apereo.cas.configuration.model.core.authentication.AuthenticationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.configuration.CasConfigurationPropertiesEnvironmentManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.configuration.CommaSeparatedStringToThrowablesConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"convert","parameterTypes":["java.lang.Object"] }]}
,
{
  "name":"org.apereo.cas.configuration.DefaultCasConfigurationPropertiesSourceLocator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"locate","parameterTypes":["org.springframework.core.env.Environment","org.springframework.core.io.ResourceLoader"] }]}
,
{
  "name":"org.apereo.cas.configuration.StandaloneConfigurationFilePropertiesSourceLocator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"locate","parameterTypes":["org.springframework.core.env.Environment","org.springframework.core.io.ResourceLoader"] }]}
,
{
  "name":"org.apereo.cas.configuration.api.CasConfigurationPropertiesSourceLocator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.apereo.cas.configuration.config.CasCoreEnvironmentConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.configuration.config.CasCoreEnvironmentConfiguration$CasCoreEnvironmentFactoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casConfigurationCipherExecutor","parameterTypes":["org.springframework.core.env.Environment"] }, 
    {"name":"commaSeparatedStringToThrowablesCollection","parameterTypes":[] }, 
    {"name":"configurationPropertiesLoaderFactory","parameterTypes":["org.apereo.cas.util.crypto.CipherExecutor","org.springframework.core.env.Environment"] }
  ]}
,
{
  "name":"org.apereo.cas.configuration.config.CasCoreEnvironmentConfiguration$CasCoreEnvironmentLocatorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"standaloneConfigurationFilePropertiesSourceLocator","parameterTypes":["org.apereo.cas.configuration.CasConfigurationPropertiesEnvironmentManager","org.apereo.cas.configuration.loader.ConfigurationPropertiesLoaderFactory"] }
  ]}
,
{
  "name":"org.apereo.cas.configuration.config.CasCoreEnvironmentConfiguration$CasCoreEnvironmentManagerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"configurationPropertiesEnvironmentManager","parameterTypes":["org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"] }, 
    {"name":"configurationPropertiesEnvironmentManager","parameterTypes":["org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor","org.springframework.core.env.Environment"] }
  ]}
,
{
  "name":"org.apereo.cas.configuration.config.standalone.CasCoreBootstrapStandaloneConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.configuration.config.standalone.CasCoreBootstrapStandaloneConfiguration$CasCoreBootstrapStandaloneLocatorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casConfigurationPropertiesSourceLocator","parameterTypes":["org.apereo.cas.configuration.loader.ConfigurationPropertiesLoaderFactory","org.apereo.cas.configuration.CasConfigurationPropertiesEnvironmentManager"] }
  ]}
,
{
  "name":"org.apereo.cas.configuration.config.standalone.CasCoreBootstrapStandaloneConfiguration$CasCoreBootstrapStandaloneSourcesConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casCoreBootstrapPropertySourceLocator","parameterTypes":["java.util.List","org.springframework.core.io.ResourceLoader"] }
  ],
  "queriedMethods":[{"name":"getOrder","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.configuration.config.standalone.CasCoreBootstrapStandaloneConfiguration$CasCoreBootstrapStandaloneSourcesConfiguration$$Lambda$597/0x000000084043b040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.configuration.config.standalone.CasCoreBootstrapStandaloneConfiguration$CasCoreBootstrapStandaloneSourcesConfiguration$$Lambda$598/0x000000084041b040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"locate","parameterTypes":["org.springframework.core.env.Environment"] }]}
,
{
  "name":"org.apereo.cas.configuration.config.standalone.CasCoreBootstrapStandaloneConfiguration$CasCoreBootstrapStandaloneSourcesConfiguration$$Lambda$601/0x0000000840433c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.configuration.config.standalone.CasCoreBootstrapStandaloneConfiguration$CasCoreBootstrapStandaloneSourcesConfiguration$$Lambda$604/0x00000008404c9040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.configuration.config.standalone.CasCoreBootstrapStandaloneConfiguration$CasCoreBootstrapStandaloneSourcesConfiguration$$Lambda$609/0x00000008404c9c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.configuration.config.standalone.CasCoreBootstrapStandaloneConfiguration$CasCoreBootstrapStandaloneSourcesConfiguration$$Lambda$619/0x0000000840443c40",
  "allDeclaredFields":true,
  "queriedMethods":[{"name":"locate","parameterTypes":["org.springframework.core.env.Environment"] }]}
,
{
  "name":"org.apereo.cas.configuration.config.standalone.CasCoreBootstrapStandaloneConfiguration$CasCoreBootstrapStandaloneSourcesConfiguration$$Lambda$638/0x00000008404d0c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.configuration.loader.BaseConfigurationPropertiesLoader"}
,
{
  "name":"org.apereo.cas.configuration.loader.ConfigurationPropertiesLoaderFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.configuration.model.core.CasServerHostProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.CasServerProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.audit.AuditProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.authentication.AuthenticationHandlerStates"}
,
{
  "name":"org.apereo.cas.configuration.model.core.authentication.AuthenticationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getAccept","parameterTypes":[] }, 
    {"name":"setAccept","parameterTypes":["org.apereo.cas.configuration.model.support.generic.AcceptAuthenticationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.configuration.model.core.authentication.HttpClientProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesCoreProperties$MergingStrategyTypes"}
,
{
  "name":"org.apereo.cas.configuration.model.core.authentication.TimeBasedAuthenticationProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.authz.AccessStrategyProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.config.standalone.StandaloneConfigurationProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.events.EventsProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.logging.LoggingProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.logout.LogoutProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.monitor.ActuatorEndpointProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.monitor.ActuatorEndpointProperties$EndpointAccessLevel"}
,
{
  "name":"org.apereo.cas.configuration.model.core.monitor.JaasSecurityActuatorEndpointsMonitorProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.monitor.MonitorProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.rest.RestProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.services.ServiceRegistryProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.slo.SingleLogOutProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.sso.SingleSignOnProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.util.TicketProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.web.LocaleProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.web.MessageBundleProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.web.flow.WebflowProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.web.security.HttpRequestProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheSslHostConfigCertificateProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheSslHostConfigProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatApachePortableRuntimeProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatBasicAuthenticationProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProxyProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.web.view.CustomLoginFieldViewProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.core.web.view.ViewProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.account.AccountManagementRegistrationProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.acme.AcmeProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.analytics.GoogleAnalyticsProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.aup.AcceptableUsagePolicyProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.clearpass.ClearpassProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.consent.ConsentProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.cookie.TicketGrantingCookieProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.cookie.WarningCookieProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.custom.CasCustomProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.email.EmailProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.firebase.GoogleFirebaseCloudMessagingProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.generic.AcceptAuthenticationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"setEnabled","parameterTypes":["boolean"] }, 
    {"name":"setName","parameterTypes":["java.lang.String"] }, 
    {"name":"setUsers","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.apereo.cas.configuration.model.support.geo.googlemaps.GoogleMapsProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.geo.maxmind.MaxmindProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.interrupt.InterruptProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.jaas.JaasAuthenticationProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.jpa.DatabaseProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.jpa.JpaConfigurationContext$JpaConfigurationContextBuilder"}
,
{
  "name":"org.apereo.cas.configuration.model.support.mfa.BaseMultifactorAuthenticationProviderProperties$MultifactorAuthenticationProviderFailureModes"}
,
{
  "name":"org.apereo.cas.configuration.model.support.pm.PasswordManagementProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.replication.SessionReplicationProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.saml.SamlCoreProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.saml.googleapps.GoogleAppsProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.saml.mdui.SamlMetadataUIProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.scim.ScimProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.sms.SmsProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.sms.SmsProvidersProperties"}
,
{
  "name":"org.apereo.cas.configuration.model.support.themes.ThemeProperties"}
,
{
  "name":"org.apereo.cas.configuration.support.CasConfigurationJasyptCipherExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"decode","parameterTypes":["java.lang.Object","java.lang.Object[]"] }, 
    {"name":"encode","parameterTypes":["java.lang.Object","java.lang.Object[]"] }, 
    {"name":"getName","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.configuration.support.CasFeatureModule"}
,
{
  "name":"org.apereo.cas.configuration.support.RequiresModule",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.logout.DefaultLogoutExecutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getLogoutPostProcessors","parameterTypes":[] }, 
    {"name":"getLogoutRedirectionStrategies","parameterTypes":[] }, 
    {"name":"getSingleLogoutServiceMessageHandlers","parameterTypes":[] }, 
    {"name":"registerLogoutPostProcessor","parameterTypes":["org.apereo.cas.logout.LogoutPostProcessor"] }, 
    {"name":"registerLogoutRedirectionStrategy","parameterTypes":["org.apereo.cas.logout.LogoutRedirectionStrategy"] }, 
    {"name":"registerSingleLogoutServiceMessageHandler","parameterTypes":["org.apereo.cas.logout.slo.SingleLogoutServiceMessageHandler"] }
  ]}
,
{
  "name":"org.apereo.cas.logout.DefaultLogoutManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"performLogout","parameterTypes":["org.apereo.cas.logout.SingleLogoutExecutionRequest"] }]}
,
{
  "name":"org.apereo.cas.logout.DefaultLogoutRedirectionStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"handle","parameterTypes":["org.springframework.webflow.execution.RequestContext"] }, 
    {"name":"supports","parameterTypes":["org.springframework.webflow.execution.RequestContext"] }
  ]}
,
{
  "name":"org.apereo.cas.logout.DefaultSingleLogoutMessageCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"create","parameterTypes":["org.apereo.cas.logout.slo.SingleLogoutRequestContext"] }]}
,
{
  "name":"org.apereo.cas.logout.LogoutExecutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.LogoutExecutionPlanConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.LogoutHttpMessage"}
,
{
  "name":"org.apereo.cas.logout.LogoutManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.LogoutPostProcessor"}
,
{
  "name":"org.apereo.cas.logout.LogoutRedirectionStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.LogoutWebApplicationServiceFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.SingleLogoutExecutionRequest"}
,
{
  "name":"org.apereo.cas.logout.SingleLogoutExecutionRequest$SingleLogoutExecutionRequestBuilder"}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutExecutionPlanBaseConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casCoreLogoutExecutionPlanConfigurer","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.logout.slo.SingleLogoutServiceMessageHandler","org.apereo.cas.logout.LogoutRedirectionStrategy","org.apereo.cas.ticket.registry.TicketRegistry"] }
  ]}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutExecutionPlanBaseConfiguration$$Lambda$1169/0x0000000840867840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutExecutionPlanBaseConfiguration$$Lambda$1174/0x0000000840855440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutExecutionPlanBaseConfiguration$$Lambda$1176/0x0000000840834440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutExecutionPlanBaseConfiguration$$Lambda$1181/0x0000000840834040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutExecutionPlanBaseConfiguration$$Lambda$1211/0x000000084083c040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutExecutionPlanBaseConfiguration$$Lambda$1508/0x00000008409be440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureLogoutExecutionPlan","parameterTypes":["org.apereo.cas.logout.LogoutExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutExecutionPlanBaseConfiguration$$Lambda$1578/0x0000000840a48440",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureLogoutExecutionPlan","parameterTypes":["org.apereo.cas.logout.LogoutExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutExecutionPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"logoutExecutionPlan","parameterTypes":["java.util.List"] }
  ]}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutExecutorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultSingleLogoutRequestExecutor","parameterTypes":["org.apereo.cas.CentralAuthenticationService","org.apereo.cas.logout.LogoutManager","org.springframework.context.ConfigurableApplicationContext"] }
  ]}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"logoutManager","parameterTypes":["org.apereo.cas.logout.LogoutExecutionPlan","org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutMessagesConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultSingleLogoutMessageCreator","parameterTypes":[] }, 
    {"name":"defaultSingleLogoutServiceMessageHandler","parameterTypes":["org.apereo.cas.authentication.AuthenticationServiceSelectionPlan","org.apereo.cas.services.ServicesManager","org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.logout.slo.SingleLogoutMessageCreator","org.apereo.cas.util.http.HttpClient","org.apereo.cas.logout.slo.SingleLogoutServiceLogoutUrlBuilder"] }
  ]}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutRedirectConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultLogoutRedirectionStrategy","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.web.support.ArgumentExtractor","org.apereo.cas.authentication.principal.ServiceFactory","org.apereo.cas.logout.slo.SingleLogoutServiceLogoutUrlBuilder"] }
  ]}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutServiceConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"logoutWebApplicationServiceFactory","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"logoutWebApplicationServiceFactoryConfigurer","parameterTypes":["org.apereo.cas.authentication.principal.ServiceFactory"] }
  ]}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutServiceConfiguration$$Lambda$900/0x00000008406e3440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutServiceConfiguration$$Lambda$904/0x00000008406d2040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutServiceConfiguration$$Lambda$907/0x00000008406b0c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutServiceConfiguration$$Lambda$912/0x00000008406f0840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutServiceConfiguration$$Lambda$922/0x00000008406dfc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"buildServiceFactories","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutServiceConfiguration$$Lambda$941/0x00000008406b8840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutServiceConfiguration$$Lambda$954/0x0000000840737c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"buildServiceFactories","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutUrlBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultSingleLogoutServiceLogoutUrlBuilderConfigurer","parameterTypes":["org.apereo.cas.web.UrlValidator","org.apereo.cas.services.ServicesManager"] }, 
    {"name":"singleLogoutServiceLogoutUrlBuilder","parameterTypes":["java.util.List"] }
  ]}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutUrlBuilderConfiguration$$Lambda$1164/0x0000000840861440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutUrlBuilderConfiguration$$Lambda$1169/0x0000000840856040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutUrlBuilderConfiguration$$Lambda$1171/0x0000000840835040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutUrlBuilderConfiguration$$Lambda$1176/0x0000000840835c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutUrlBuilderConfiguration$$Lambda$1206/0x000000084083dc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutUrlBuilderConfiguration$$Lambda$1503/0x00000008409bf040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureBuilder","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.logout.config.CasCoreLogoutConfiguration$CasCoreLogoutUrlBuilderConfiguration$$Lambda$1573/0x0000000840a2b040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureBuilder","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.logout.slo.BaseSingleLogoutServiceMessageHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"createSingleLogoutMessage","parameterTypes":["org.apereo.cas.logout.slo.SingleLogoutRequestContext"] }, 
    {"name":"getAuthenticationRequestServiceSelectionStrategies","parameterTypes":[] }, 
    {"name":"getHttpClient","parameterTypes":[] }, 
    {"name":"getLogoutMessageBuilder","parameterTypes":[] }, 
    {"name":"getServicesManager","parameterTypes":[] }, 
    {"name":"getSingleLogoutServiceLogoutUrlBuilder","parameterTypes":[] }, 
    {"name":"handle","parameterTypes":["org.apereo.cas.authentication.principal.WebApplicationService","java.lang.String","org.apereo.cas.logout.SingleLogoutExecutionRequest"] }, 
    {"name":"isAsynchronous","parameterTypes":[] }, 
    {"name":"performBackChannelLogout","parameterTypes":["org.apereo.cas.logout.slo.SingleLogoutRequestContext"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.logout.SingleLogoutExecutionRequest","org.apereo.cas.authentication.principal.WebApplicationService"] }
  ]}
,
{
  "name":"org.apereo.cas.logout.slo.ChainingSingleLogoutServiceLogoutUrlBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"determineLogoutUrl","parameterTypes":["org.apereo.cas.services.RegisteredService","org.apereo.cas.authentication.principal.WebApplicationService","java.util.Optional"] }, 
    {"name":"isServiceAuthorized","parameterTypes":["org.apereo.cas.authentication.principal.WebApplicationService","java.util.Optional"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.services.RegisteredService","org.apereo.cas.authentication.principal.WebApplicationService","java.util.Optional"] }
  ]}
,
{
  "name":"org.apereo.cas.logout.slo.DefaultSingleLogoutRequestExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"execute","parameterTypes":["java.lang.String","javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse"] }]}
,
{
  "name":"org.apereo.cas.logout.slo.DefaultSingleLogoutServiceMessageHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.slo.SingleLogoutMessage"}
,
{
  "name":"org.apereo.cas.logout.slo.SingleLogoutMessageCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.slo.SingleLogoutRequestContext"}
,
{
  "name":"org.apereo.cas.logout.slo.SingleLogoutRequestExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.slo.SingleLogoutServiceLogoutUrlBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.slo.SingleLogoutServiceLogoutUrlBuilderConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.slo.SingleLogoutServiceMessageHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.logout.slo.SingleLogoutUrl"}
,
{
  "name":"org.apereo.cas.notifications.CommunicationsManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.notifications.mail.EmailMessageBodyBuilder$EmailMessageBodyBuilderBuilder"}
,
{
  "name":"org.apereo.cas.notifications.push.DefaultNotificationSender",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"canSend","parameterTypes":[] }, 
    {"name":"notify","parameterTypes":["org.apereo.cas.authentication.principal.Principal","java.util.Map"] }
  ]}
,
{
  "name":"org.apereo.cas.notifications.push.NotificationSender",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.notifications.push.NotificationSenderExecutionPlanConfigurer"}
,
{
  "name":"org.apereo.cas.notifications.sms.SmsSender",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.notifications.sms.SmsSender$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"canSend","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.pac4j.discovery.DelegatedAuthenticationDynamicDiscoveryProviderLocator"}
,
{
  "name":"org.apereo.cas.pac4j.discovery.DelegatedAuthenticationDynamicDiscoveryProviderLocator$DynamicDiscoveryProviderRequest$DynamicDiscoveryProviderRequestBuilder"}
,
{
  "name":"org.apereo.cas.persondir.DefaultPersonDirectoryAttributeRepositoryPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getAttributeRepositories","parameterTypes":[] }, 
    {"name":"registerAttributeRepository","parameterTypes":["org.apereo.services.persondir.IPersonAttributeDao"] }
  ]}
,
{
  "name":"org.apereo.cas.persondir.PersonDirectoryAttributeRepositoryCustomizer"}
,
{
  "name":"org.apereo.cas.persondir.PersonDirectoryAttributeRepositoryPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.persondir.PersonDirectoryAttributeRepositoryPlanConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.BasePasswordManagementService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"change","parameterTypes":["org.apereo.cas.authentication.Credential","org.apereo.cas.pm.PasswordChangeRequest"] }, 
    {"name":"createToken","parameterTypes":["org.apereo.cas.pm.PasswordManagementQuery"] }, 
    {"name":"getCipherExecutor","parameterTypes":[] }, 
    {"name":"getIssuer","parameterTypes":[] }, 
    {"name":"getPasswordHistoryService","parameterTypes":[] }, 
    {"name":"getProperties","parameterTypes":[] }, 
    {"name":"parseToken","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.apereo.cas.pm.DefaultPasswordValidationService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"isValid","parameterTypes":["org.apereo.cas.authentication.credential.UsernamePasswordCredential","org.apereo.cas.pm.PasswordChangeRequest"] }]}
,
{
  "name":"org.apereo.cas.pm.InvalidPasswordException"}
,
{
  "name":"org.apereo.cas.pm.PasswordChangeRequest"}
,
{
  "name":"org.apereo.cas.pm.PasswordHistoryService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.PasswordManagementQuery"}
,
{
  "name":"org.apereo.cas.pm.PasswordManagementQuery$PasswordManagementQueryBuilder"}
,
{
  "name":"org.apereo.cas.pm.PasswordManagementService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.PasswordValidationService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementAuditConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"passwordManagementAuditTrailRecordResolutionPlanConfigurer","parameterTypes":["org.apereo.inspektr.audit.spi.AuditResourceResolver"] }, 
    {"name":"passwordManagementReturnValueResourceResolver","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementAuditConfiguration$$Lambda$1185/0x0000000840822440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuditTrailRecordResolutionPlan","parameterTypes":["org.apereo.cas.audit.AuditTrailRecordResolutionPlan"] }]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementAuditConfiguration$$Lambda$1217/0x000000084087bc40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuditTrailRecordResolutionPlan","parameterTypes":["org.apereo.cas.audit.AuditTrailRecordResolutionPlan"] }]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementAuditConfiguration$$Lambda$1254/0x00000008408be040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementAuditConfiguration$$Lambda$1259/0x00000008408bdc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementAuditConfiguration$$Lambda$1261/0x00000008408b5440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementAuditConfiguration$$Lambda$1266/0x00000008408c8040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementAuditConfiguration$$Lambda$1296/0x00000008408bc840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementCipherConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"passwordManagementCipherExecutor","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementCoreConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"afterPropertiesSet","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.notifications.CommunicationsManager"] }, 
    {"name":"passwordChangeService","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.util.crypto.CipherExecutor","org.apereo.cas.pm.PasswordHistoryService"] }
  ]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementCoreConfiguration$$Lambda$1207/0x0000000840839c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementCoreConfiguration$$Lambda$1239/0x000000084088e440",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementCoreConfiguration$$Lambda$1280/0x00000008408d3c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementCoreConfiguration$$Lambda$1285/0x00000008408cbc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementCoreConfiguration$$Lambda$1287/0x00000008408c1c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementCoreConfiguration$$Lambda$1292/0x00000008408f8040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementCoreConfiguration$$Lambda$1322/0x00000008408c9040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementHistoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"passwordHistoryService","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementConfiguration$PasswordManagementValidationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"passwordValidationService","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.pm.PasswordHistoryService"] }
  ]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameAuditConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"forgotUsernameAuditTrailRecordResolutionPlanConfigurer","parameterTypes":["org.apereo.inspektr.audit.spi.AuditResourceResolver"] }
  ]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameAuditConfiguration$$Lambda$1186/0x0000000840822840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuditTrailRecordResolutionPlan","parameterTypes":["org.apereo.cas.audit.AuditTrailRecordResolutionPlan"] }]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameAuditConfiguration$$Lambda$1218/0x000000084087c040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuditTrailRecordResolutionPlan","parameterTypes":["org.apereo.cas.audit.AuditTrailRecordResolutionPlan"] }]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameAuditConfiguration$$Lambda$1255/0x00000008408be440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameAuditConfiguration$$Lambda$1260/0x00000008408be040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameAuditConfiguration$$Lambda$1262/0x00000008408b4840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameAuditConfiguration$$Lambda$1267/0x00000008408c8440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameAuditConfiguration$$Lambda$1297/0x00000008408bcc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameWebflowConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"forgotUsernameCasWebflowExecutionPlanConfigurer","parameterTypes":["org.apereo.cas.web.flow.CasWebflowConfigurer"] }, 
    {"name":"forgotUsernameWebflowConfigurer","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.webflow.definition.registry.FlowDefinitionRegistry","org.springframework.webflow.engine.builder.support.FlowBuilderServices"] }, 
    {"name":"sendForgotUsernameInstructionsAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.notifications.CommunicationsManager","org.apereo.cas.pm.PasswordManagementService","org.apereo.cas.authentication.principal.PrincipalResolver"] }
  ]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameWebflowConfiguration$$Lambda$1081/0x000000084076a040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureWebflowExecutionPlan","parameterTypes":["org.apereo.cas.web.flow.CasWebflowExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameWebflowConfiguration$$Lambda$1113/0x00000008407ff840",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureWebflowExecutionPlan","parameterTypes":["org.apereo.cas.web.flow.CasWebflowExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameWebflowConfiguration$$Lambda$1158/0x0000000840823440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameWebflowConfiguration$$Lambda$1163/0x0000000840857840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameWebflowConfiguration$$Lambda$1165/0x0000000840836840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameWebflowConfiguration$$Lambda$1170/0x0000000840837440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementForgotUsernameConfiguration$PasswordManagementForgotUsernameWebflowConfiguration$$Lambda$1200/0x000000084083f440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowActionsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"handlePasswordExpirationWarningMessagesAction","parameterTypes":[] }, 
    {"name":"initPasswordChangeAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"initPasswordResetAction","parameterTypes":["org.apereo.cas.pm.PasswordManagementService"] }, 
    {"name":"passwordChangeAction","parameterTypes":["org.apereo.cas.pm.PasswordManagementService","org.apereo.cas.pm.PasswordValidationService"] }, 
    {"name":"sendPasswordResetInstructionsAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.pm.PasswordManagementService","org.apereo.cas.ticket.registry.TicketRegistry","org.apereo.cas.authentication.principal.PrincipalResolver","org.apereo.cas.notifications.CommunicationsManager","org.apereo.cas.ticket.TicketFactory"] }, 
    {"name":"validatePasswordResetTokenAction","parameterTypes":["org.apereo.cas.pm.PasswordManagementService","org.apereo.cas.CentralAuthenticationService"] }, 
    {"name":"verifyPasswordResetRequestAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.pm.PasswordManagementService","org.apereo.cas.CentralAuthenticationService"] }, 
    {"name":"verifySecurityQuestionsAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.pm.PasswordManagementService"] }
  ]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowAdapterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"passwordResetHandlerAdapter","parameterTypes":["org.springframework.webflow.executor.FlowExecutor"] }
  ]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowAdapterConfiguration$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"supports","parameterTypes":["java.lang.Object"] }]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowBaseConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"passwordManagementCasWebflowExecutionPlanConfigurer","parameterTypes":["org.apereo.cas.web.flow.CasWebflowConfigurer"] }, 
    {"name":"passwordManagementWebflowConfigurer","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.context.ConfigurableApplicationContext","org.springframework.webflow.definition.registry.FlowDefinitionRegistry","org.springframework.webflow.engine.builder.support.FlowBuilderServices"] }
  ]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowBaseConfiguration$$Lambda$1082/0x000000084076a440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureWebflowExecutionPlan","parameterTypes":["org.apereo.cas.web.flow.CasWebflowExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowBaseConfiguration$$Lambda$1114/0x00000008407ffc40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureWebflowExecutionPlan","parameterTypes":["org.apereo.cas.web.flow.CasWebflowExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowBaseConfiguration$$Lambda$1159/0x0000000840860040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowBaseConfiguration$$Lambda$1164/0x0000000840857c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowBaseConfiguration$$Lambda$1166/0x0000000840836c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowBaseConfiguration$$Lambda$1171/0x0000000840836840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowBaseConfiguration$$Lambda$1201/0x000000084083e840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowSingleSignOnConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"passwordManagementSingleSignOnParticipationStrategy","parameterTypes":["org.apereo.cas.authentication.AuthenticationServiceSelectionPlan","org.apereo.cas.ticket.registry.TicketRegistrySupport","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.services.ServicesManager"] }, 
    {"name":"passwordManagementSingleSignOnParticipationStrategyConfigurer","parameterTypes":["org.apereo.cas.web.flow.SingleSignOnParticipationStrategy"] }
  ]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowSingleSignOnConfiguration$$Lambda$1495/0x00000008409ec040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowSingleSignOnConfiguration$$Lambda$1500/0x00000008409e4040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowSingleSignOnConfiguration$$Lambda$1501/0x00000008409ba040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureStrategy","parameterTypes":["org.apereo.cas.web.flow.ChainingSingleSignOnParticipationStrategy"] }]}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowSingleSignOnConfiguration$$Lambda$1502/0x00000008409c1840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowSingleSignOnConfiguration$$Lambda$1507/0x00000008409c2440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowSingleSignOnConfiguration$$Lambda$1537/0x00000008409ca440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.config.PasswordManagementWebflowConfiguration$PasswordManagementWebflowSingleSignOnConfiguration$$Lambda$1571/0x0000000840a2c040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureStrategy","parameterTypes":["org.apereo.cas.web.flow.ChainingSingleSignOnParticipationStrategy"] }]}
,
{
  "name":"org.apereo.cas.pm.impl.NoOpPasswordManagementService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"changeInternal","parameterTypes":["org.apereo.cas.authentication.Credential","org.apereo.cas.pm.PasswordChangeRequest"] }]}
,
{
  "name":"org.apereo.cas.pm.impl.history.AmnesiacPasswordHistoryService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"exists","parameterTypes":["org.apereo.cas.pm.PasswordChangeRequest"] }, 
    {"name":"fetch","parameterTypes":["java.lang.String"] }, 
    {"name":"fetchAll","parameterTypes":[] }, 
    {"name":"remove","parameterTypes":["java.lang.String"] }, 
    {"name":"removeAll","parameterTypes":[] }, 
    {"name":"store","parameterTypes":["org.apereo.cas.pm.PasswordChangeRequest"] }
  ]}
,
{
  "name":"org.apereo.cas.pm.impl.history.BasePasswordHistoryService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.web.flow.ForgotUsernameWebflowConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.web.flow.PasswordManagementSingleSignOnParticipationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"isParticipating","parameterTypes":["org.apereo.cas.web.flow.SingleSignOnParticipationRequest"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.web.flow.SingleSignOnParticipationRequest"] }
  ]}
,
{
  "name":"org.apereo.cas.pm.web.flow.PasswordManagementWebflowConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.web.flow.actions.BasePasswordManagementAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.web.flow.actions.HandlePasswordExpirationWarningMessagesAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.web.flow.actions.InitPasswordChangeAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.web.flow.actions.InitPasswordResetAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.web.flow.actions.PasswordChangeAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.web.flow.actions.SendForgotUsernameInstructionsAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.web.flow.actions.SendPasswordResetInstructionsAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.web.flow.actions.ValidatePasswordResetTokenAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.web.flow.actions.VerifyPasswordResetRequestAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.pm.web.flow.actions.VerifySecurityQuestionsAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.AbstractServiceRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getApplicationContext","parameterTypes":[] }, 
    {"name":"getServiceRegistryListeners","parameterTypes":[] }, 
    {"name":"publishEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }
  ]}
,
{
  "name":"org.apereo.cas.services.ChainingServiceRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.ChainingServicesManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.DefaultChainingServiceRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addServiceRegistries","parameterTypes":["java.util.Collection"] }, 
    {"name":"countServiceRegistries","parameterTypes":[] }, 
    {"name":"delete","parameterTypes":["org.apereo.cas.services.RegisteredService"] }, 
    {"name":"deleteAll","parameterTypes":[] }, 
    {"name":"findServiceBy","parameterTypes":["java.lang.String"] }, 
    {"name":"findServiceByExactServiceId","parameterTypes":["java.lang.String"] }, 
    {"name":"findServiceByExactServiceName","parameterTypes":["java.lang.String"] }, 
    {"name":"findServiceById","parameterTypes":["long"] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getServiceRegistries","parameterTypes":[] }, 
    {"name":"load","parameterTypes":[] }, 
    {"name":"save","parameterTypes":["org.apereo.cas.services.RegisteredService"] }, 
    {"name":"size","parameterTypes":[] }, 
    {"name":"synchronize","parameterTypes":["org.apereo.cas.services.RegisteredService"] }
  ]}
,
{
  "name":"org.apereo.cas.services.DefaultChainingServicesManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"count","parameterTypes":[] }, 
    {"name":"delete","parameterTypes":["long"] }, 
    {"name":"delete","parameterTypes":["org.apereo.cas.services.RegisteredService"] }, 
    {"name":"deleteAll","parameterTypes":[] }, 
    {"name":"findServiceBy","parameterTypes":["long"] }, 
    {"name":"findServiceBy","parameterTypes":["long","java.lang.Class"] }, 
    {"name":"findServiceBy","parameterTypes":["java.util.function.Predicate"] }, 
    {"name":"findServiceBy","parameterTypes":["org.apereo.cas.authentication.principal.Service"] }, 
    {"name":"findServiceBy","parameterTypes":["org.apereo.cas.authentication.principal.Service","java.lang.Class"] }, 
    {"name":"findServiceByName","parameterTypes":["java.lang.String"] }, 
    {"name":"findServiceByName","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"getAllServices","parameterTypes":[] }, 
    {"name":"getAllServicesOfType","parameterTypes":["java.lang.Class"] }, 
    {"name":"getDomains","parameterTypes":[] }, 
    {"name":"getServicesForDomain","parameterTypes":["java.lang.String"] }, 
    {"name":"load","parameterTypes":[] }, 
    {"name":"registerServiceManager","parameterTypes":["org.apereo.cas.services.ServicesManager"] }, 
    {"name":"save","parameterTypes":["java.util.function.Supplier","java.util.function.Consumer","long"] }, 
    {"name":"save","parameterTypes":["java.util.stream.Stream"] }, 
    {"name":"save","parameterTypes":["org.apereo.cas.services.RegisteredService"] }, 
    {"name":"save","parameterTypes":["org.apereo.cas.services.RegisteredService","boolean"] }, 
    {"name":"supports","parameterTypes":["java.lang.Class"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.authentication.principal.Service"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.services.RegisteredService"] }
  ]}
,
{
  "name":"org.apereo.cas.services.DefaultRegisteredServicesEventListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"handleEnvironmentChangeEvent","parameterTypes":["org.springframework.cloud.context.environment.EnvironmentChangeEvent"] }, 
    {"name":"handleRefreshEvent","parameterTypes":["org.apereo.cas.support.events.service.CasRegisteredServicesRefreshEvent"] }, 
    {"name":"handleRegisteredServiceExpiredEvent","parameterTypes":["org.apereo.cas.support.events.service.CasRegisteredServiceExpiredEvent"] }
  ]}
,
{
  "name":"org.apereo.cas.services.DefaultServiceRegistryExecutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"find","parameterTypes":["java.util.function.Predicate"] }, 
    {"name":"getServiceRegistries","parameterTypes":[] }, 
    {"name":"registerServiceRegistry","parameterTypes":["org.apereo.cas.services.ServiceRegistry"] }
  ]}
,
{
  "name":"org.apereo.cas.services.DefaultServicesManagerRegisteredServiceLocator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"locate","parameterTypes":["java.util.Collection","org.apereo.cas.authentication.principal.Service"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.services.RegisteredService","org.apereo.cas.authentication.principal.Service"] }
  ]}
,
{
  "name":"org.apereo.cas.services.RegisteredService"}
,
{
  "name":"org.apereo.cas.services.RegisteredServiceAccessStrategyAuditableEnforcer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"execute","parameterTypes":["org.apereo.cas.audit.AuditableContext"] }]}
,
{
  "name":"org.apereo.cas.services.RegisteredServiceAttributeReleasePolicyContext$RegisteredServiceAttributeReleasePolicyContextBuilder"}
,
{
  "name":"org.apereo.cas.services.RegisteredServiceCipherExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.RegisteredServiceContact"}
,
{
  "name":"org.apereo.cas.services.RegisteredServiceMultifactorPolicy"}
,
{
  "name":"org.apereo.cas.services.RegisteredServiceProxyGrantingTicketExpirationPolicy"}
,
{
  "name":"org.apereo.cas.services.RegisteredServicePublicKeyCipherExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"decode","parameterTypes":["java.lang.String","java.util.Optional"] }, 
    {"name":"encode","parameterTypes":["java.lang.String","java.util.Optional"] }
  ]}
,
{
  "name":"org.apereo.cas.services.RegisteredServicesEventListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.ServiceContext"}
,
{
  "name":"org.apereo.cas.services.ServiceRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.ServiceRegistryExecutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.ServiceRegistryExecutionPlanConfigurer"}
,
{
  "name":"org.apereo.cas.services.ServiceRegistryListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.ServiceRegistryListener$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.ServicesManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"load","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.services.ServicesManagerConfigurationContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.ServicesManagerConfigurationContext$ServicesManagerConfigurationContextBuilder"}
,
{
  "name":"org.apereo.cas.services.ServicesManagerExecutionPlanConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.ServicesManagerRegisteredServiceLocator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.ServicesManagerScheduledLoader$$Lambda$1086/0x00000008407a9440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"run","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.services.ServicesManagerScheduledLoader$$Lambda$1118/0x00000008407fe440",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"run","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.services.ServicesManagerScheduledLoader$$Lambda$1171/0x0000000840866840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.ServicesManagerScheduledLoader$$Lambda$1176/0x0000000840854440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.ServicesManagerScheduledLoader$$Lambda$1178/0x0000000840833440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.ServicesManagerScheduledLoader$$Lambda$1183/0x0000000840833040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.ServicesManagerScheduledLoader$$Lambda$1213/0x000000084083b040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.domain.RegisteredServiceDomainExtractor"}
,
{
  "name":"org.apereo.cas.services.replication.NoOpRegisteredServiceReplicationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.replication.RegisteredServiceReplicationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.resource.DefaultRegisteredServiceResourceNamingStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"build","parameterTypes":["org.apereo.cas.services.RegisteredService","java.lang.String"] }]}
,
{
  "name":"org.apereo.cas.services.resource.RegisteredServiceResourceNamingStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.web.CasThymeleafLoginFormDirector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.web.CasThymeleafViewResolverConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.web.ChainingThemeResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"resolveThemeName","parameterTypes":["javax.servlet.http.HttpServletRequest"] }, 
    {"name":"setThemeName","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.String"] }
  ]}
,
{
  "name":"org.apereo.cas.services.web.ThemeBasedViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }
  ]}
,
{
  "name":"org.apereo.cas.services.web.ThemeViewResolver"}
,
{
  "name":"org.apereo.cas.services.web.ThemeViewResolver$Factory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"create","parameterTypes":["java.lang.String"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]}
,
{
  "name":"org.apereo.cas.services.web.ThemeViewResolverFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.web.config.CasThemesConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"serviceThemeResolverSupportedBrowsers","parameterTypes":[] }, 
    {"name":"themeResolver","parameterTypes":["java.util.function.Supplier","org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan","org.apereo.cas.services.ServicesManager"] }, 
    {"name":"themesStaticResourcesWebMvcConfigurer","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.services.web.config.CasThemesConfiguration$$Lambda$1045/0x0000000840759c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.web.config.CasThemesConfiguration$$Lambda$1049/0x0000000840770440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.web.config.CasThemesConfiguration$$Lambda$1052/0x0000000840734c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"get","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.services.web.config.CasThemesConfiguration$$Lambda$1052/0x000000084076e840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.web.config.CasThemesConfiguration$$Lambda$1057/0x000000084076ec40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.web.config.CasThemesConfiguration$$Lambda$1084/0x0000000840794c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"get","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.services.web.config.CasThemesConfiguration$$Lambda$1086/0x0000000840776840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.services.web.config.CasThemesConfiguration$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"addResourceHandlers","parameterTypes":["org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"] }]}
,
{
  "name":"org.apereo.cas.services.web.support.RegisteredServiceResponseHeadersEnforcementFilter",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.services.web.view.AbstractCasView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getAttributesRenderer","parameterTypes":[] }, 
    {"name":"getAuthenticationAttributeReleasePolicy","parameterTypes":[] }, 
    {"name":"getAuthenticationRequestServiceSelectionStrategies","parameterTypes":[] }, 
    {"name":"getProtocolAttributeEncoder","parameterTypes":[] }, 
    {"name":"getServicesManager","parameterTypes":[] }, 
    {"name":"isSuccessResponse","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.services.web.view.AbstractDelegatingCasView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getView","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.support.events.CasEventRepository"}
,
{
  "name":"org.apereo.cas.support.events.CasEventRepositoryFilter"}
,
{
  "name":"org.apereo.cas.support.events.service.CasRegisteredServiceExpiredEvent"}
,
{
  "name":"org.apereo.cas.support.events.service.CasRegisteredServicesRefreshEvent"}
,
{
  "name":"org.apereo.cas.throttle.AuthenticationThrottlingExecutionPlan"}
,
{
  "name":"org.apereo.cas.throttle.ThrottledRequestExecutor"}
,
{
  "name":"org.apereo.cas.throttle.ThrottledRequestResponseHandler"}
,
{
  "name":"org.apereo.cas.ticket.AbstractTicketException"}
,
{
  "name":"org.apereo.cas.ticket.BaseTicketCatalogConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.DefaultTicketCatalog",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"contains","parameterTypes":["java.lang.String"] }, 
    {"name":"find","parameterTypes":["java.lang.Class"] }, 
    {"name":"find","parameterTypes":["java.lang.String"] }, 
    {"name":"find","parameterTypes":["org.apereo.cas.ticket.Ticket"] }, 
    {"name":"findAll","parameterTypes":[] }, 
    {"name":"register","parameterTypes":["org.apereo.cas.ticket.TicketDefinition"] }, 
    {"name":"update","parameterTypes":["org.apereo.cas.ticket.TicketDefinition"] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.ExpirationPolicy"}
,
{
  "name":"org.apereo.cas.ticket.ExpirationPolicyBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.InvalidTicketException"}
,
{
  "name":"org.apereo.cas.ticket.ServiceTicket"}
,
{
  "name":"org.apereo.cas.ticket.ServiceTicketFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.Ticket"}
,
{
  "name":"org.apereo.cas.ticket.TicketCatalog",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.TicketCatalogConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.TicketDefinition"}
,
{
  "name":"org.apereo.cas.ticket.TicketDefinitionProperties"}
,
{
  "name":"org.apereo.cas.ticket.TicketFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.TicketFactoryExecutionPlanConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.TicketGrantingTicket"}
,
{
  "name":"org.apereo.cas.ticket.TicketGrantingTicketFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.TicketState"}
,
{
  "name":"org.apereo.cas.ticket.TransientSessionTicket"}
,
{
  "name":"org.apereo.cas.ticket.TransientSessionTicketFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.UniqueTicketIdGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.UniqueTicketIdGeneratorConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.expiration.builder.ProxyGrantingTicketExpirationPolicyBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"buildTicketExpirationPolicy","parameterTypes":[] }, 
    {"name":"getTicketType","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.expiration.builder.ProxyTicketExpirationPolicyBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"buildTicketExpirationPolicy","parameterTypes":[] }, 
    {"name":"getTicketType","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.expiration.builder.ServiceTicketExpirationPolicyBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"buildTicketExpirationPolicy","parameterTypes":[] }, 
    {"name":"getTicketType","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.expiration.builder.TicketGrantingTicketExpirationPolicyBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"buildTicketExpirationPolicy","parameterTypes":[] }, 
    {"name":"getTicketType","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.expiration.builder.TransientSessionTicketExpirationPolicyBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"buildTicketExpirationPolicy","parameterTypes":[] }, 
    {"name":"getTicketType","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.factory.DefaultProxyGrantingTicketFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"create","parameterTypes":["org.apereo.cas.ticket.ServiceTicket","org.apereo.cas.authentication.Authentication","java.lang.Class"] }, 
    {"name":"getTicketType","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.factory.DefaultProxyTicketFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"create","parameterTypes":["org.apereo.cas.ticket.proxy.ProxyGrantingTicket","org.apereo.cas.authentication.principal.Service","java.lang.Class"] }, 
    {"name":"getTicketType","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.factory.DefaultServiceTicketFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"create","parameterTypes":["org.apereo.cas.ticket.TicketGrantingTicket","org.apereo.cas.authentication.principal.Service","boolean","java.lang.Class"] }, 
    {"name":"getTicketExpirationPolicy","parameterTypes":[] }, 
    {"name":"getTicketType","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.factory.DefaultTicketFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"get","parameterTypes":["java.lang.Class"] }, 
    {"name":"getTicketType","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.factory.DefaultTicketGrantingTicketFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"create","parameterTypes":["org.apereo.cas.authentication.Authentication","org.apereo.cas.authentication.principal.Service","java.lang.Class"] }, 
    {"name":"getTicketType","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.factory.DefaultTransientSessionTicketFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"create","parameterTypes":["java.lang.String","org.apereo.cas.authentication.principal.Service","java.util.Map"] }, 
    {"name":"create","parameterTypes":["org.apereo.cas.authentication.principal.Service","java.util.Map"] }, 
    {"name":"getTicketType","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.proxy.ProxyGrantingTicket"}
,
{
  "name":"org.apereo.cas.ticket.proxy.ProxyGrantingTicketFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.proxy.ProxyHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.proxy.ProxyTicket"}
,
{
  "name":"org.apereo.cas.ticket.proxy.ProxyTicketFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.proxy.support.Cas10ProxyHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"canHandle","parameterTypes":["org.apereo.cas.authentication.Credential"] }, 
    {"name":"handle","parameterTypes":["org.apereo.cas.authentication.Credential","org.apereo.cas.ticket.TicketGrantingTicket"] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.proxy.support.Cas20ProxyHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"canHandle","parameterTypes":["org.apereo.cas.authentication.Credential"] }, 
    {"name":"handle","parameterTypes":["org.apereo.cas.authentication.Credential","org.apereo.cas.ticket.TicketGrantingTicket"] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.registry.AbstractMapBasedTicketRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addTicketInternal","parameterTypes":["org.apereo.cas.ticket.Ticket"] }, 
    {"name":"deleteAll","parameterTypes":[] }, 
    {"name":"deleteSingleTicket","parameterTypes":["java.lang.String"] }, 
    {"name":"getTicket","parameterTypes":["java.lang.String","java.util.function.Predicate"] }, 
    {"name":"getTickets","parameterTypes":[] }, 
    {"name":"updateTicket","parameterTypes":["org.apereo.cas.ticket.Ticket"] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.registry.AbstractTicketRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addTicket","parameterTypes":["org.apereo.cas.ticket.Ticket"] }, 
    {"name":"countSessionsFor","parameterTypes":["java.lang.String"] }, 
    {"name":"deleteTicket","parameterTypes":["java.lang.String"] }, 
    {"name":"deleteTicket","parameterTypes":["org.apereo.cas.ticket.Ticket"] }, 
    {"name":"getTicket","parameterTypes":["java.lang.String"] }, 
    {"name":"getTicket","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"serviceTicketCount","parameterTypes":[] }, 
    {"name":"sessionCount","parameterTypes":[] }, 
    {"name":"setCipherExecutor","parameterTypes":["org.apereo.cas.util.crypto.CipherExecutor"] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.registry.DefaultTicketRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getMapInstance","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.ticket.registry.DefaultTicketRegistryCleaner",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"clean","parameterTypes":[] }, 
    {"name":"cleanTicket","parameterTypes":["org.apereo.cas.ticket.Ticket"] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.registry.DefaultTicketRegistrySupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getAuthenticatedPrincipalFrom","parameterTypes":["java.lang.String"] }, 
    {"name":"getAuthenticationFrom","parameterTypes":["java.lang.String"] }, 
    {"name":"getPrincipalAttributesFrom","parameterTypes":["java.lang.String"] }, 
    {"name":"getTicketGrantingTicket","parameterTypes":["java.lang.String"] }, 
    {"name":"getTicketState","parameterTypes":["java.lang.String"] }, 
    {"name":"updateAuthentication","parameterTypes":["java.lang.String","org.apereo.cas.authentication.Authentication"] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.registry.NoOpLockingStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"acquire","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.ticket.registry.TicketRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.registry.TicketRegistryCleaner",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"clean","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.ticket.registry.TicketRegistrySupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.registry.support.LockingStrategy",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.serialization.DefaultTicketSerializationExecutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getTicketSerializer","parameterTypes":["java.lang.Class"] }, 
    {"name":"getTicketSerializer","parameterTypes":["java.lang.String"] }, 
    {"name":"getTicketSerializer","parameterTypes":["org.apereo.cas.ticket.Ticket"] }, 
    {"name":"registerTicketSerializer","parameterTypes":["java.lang.String","org.apereo.cas.util.serialization.StringSerializer"] }, 
    {"name":"registerTicketSerializer","parameterTypes":["org.apereo.cas.util.serialization.StringSerializer"] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.serialization.DefaultTicketStringSerializationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"deserializeTicket","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"deserializeTicket","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"serializeTicket","parameterTypes":["org.apereo.cas.ticket.Ticket"] }
  ]}
,
{
  "name":"org.apereo.cas.ticket.serialization.TicketSerializationExecutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.ticket.serialization.TicketSerializationExecutionPlanConfigurer"}
,
{
  "name":"org.apereo.cas.ticket.serialization.TicketSerializationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.token.TokenTicketBuilder"}
,
{
  "name":"org.apereo.cas.tomcat.CasTomcatServletWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.tomcat.CasTomcatServletWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, 
    {"name":"customize","parameterTypes":["org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory"] }
  ]}
,
{
  "name":"org.apereo.cas.util.DefaultUniqueTicketIdGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getNewTicketId","parameterTypes":["java.lang.String"] }, 
    {"name":"setMaxLength","parameterTypes":["long"] }, 
    {"name":"setNumericGenerator","parameterTypes":["org.apereo.cas.util.gen.NumericGenerator"] }, 
    {"name":"setRandomStringGenerator","parameterTypes":["org.apereo.cas.util.gen.RandomStringGenerator"] }, 
    {"name":"setSuffix","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.apereo.cas.util.HostNameBasedUniqueTicketIdGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.util.HttpUtils$HttpExecutionRequest$HttpExecutionRequestBuilder"}
,
{
  "name":"org.apereo.cas.util.ProxyGrantingTicketIdGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.util.ProxyTicketIdGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.util.ServiceTicketIdGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.util.TicketGrantingTicketIdGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.util.cipher.AbstractCipherExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"extractPrivateKeyFromResource","parameterTypes":["java.lang.String"] }, 
    {"name":"extractPublicKeyFromResource","parameterTypes":["java.lang.String"] }, 
    {"name":"getCustomHeaders","parameterTypes":[] }, 
    {"name":"getSigningKey","parameterTypes":[] }, 
    {"name":"isEnabled","parameterTypes":[] }, 
    {"name":"setCustomHeaders","parameterTypes":["java.util.Map"] }, 
    {"name":"setSigningKey","parameterTypes":["java.security.Key"] }
  ]}
,
{
  "name":"org.apereo.cas.util.cipher.BaseBinaryCipherExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"decode","parameterTypes":["java.lang.Object","java.lang.Object[]"] }, 
    {"name":"decode","parameterTypes":["byte[]","java.lang.Object[]"] }, 
    {"name":"encode","parameterTypes":["java.lang.Object","java.lang.Object[]"] }, 
    {"name":"encode","parameterTypes":["byte[]","java.lang.Object[]"] }, 
    {"name":"getCipherName","parameterTypes":[] }, 
    {"name":"getEncryptionKey","parameterTypes":[] }, 
    {"name":"getEncryptionSecretKey","parameterTypes":[] }, 
    {"name":"getParameterSpec","parameterTypes":[] }, 
    {"name":"getSecretKeyAlgorithm","parameterTypes":[] }, 
    {"name":"setEncryptionSecretKey","parameterTypes":["byte[]"] }, 
    {"name":"setSecretKeyAlgorithm","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.apereo.cas.util.cipher.BaseStringCipherExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"decode","parameterTypes":["java.io.Serializable","java.lang.Object[]"] }, 
    {"name":"decode","parameterTypes":["java.lang.Object","java.lang.Object[]"] }, 
    {"name":"encode","parameterTypes":["java.io.Serializable","java.lang.Object[]"] }, 
    {"name":"encode","parameterTypes":["java.lang.Object","java.lang.Object[]"] }, 
    {"name":"getContentEncryptionAlgorithmIdentifier","parameterTypes":[] }, 
    {"name":"getEncryptionAlgorithm","parameterTypes":[] }, 
    {"name":"getEncryptionKey","parameterTypes":[] }, 
    {"name":"getEncryptionKeySize","parameterTypes":[] }, 
    {"name":"getSigningKeySize","parameterTypes":[] }, 
    {"name":"getStrategyType","parameterTypes":[] }, 
    {"name":"isEncryptionEnabled","parameterTypes":[] }, 
    {"name":"isSigningEnabled","parameterTypes":[] }, 
    {"name":"setContentEncryptionAlgorithmIdentifier","parameterTypes":["java.lang.String"] }, 
    {"name":"setEncryptionAlgorithm","parameterTypes":["java.lang.String"] }, 
    {"name":"setEncryptionEnabled","parameterTypes":["boolean"] }, 
    {"name":"setEncryptionKey","parameterTypes":["java.security.Key"] }, 
    {"name":"setEncryptionKeySize","parameterTypes":["int"] }, 
    {"name":"setSigningEnabled","parameterTypes":["boolean"] }, 
    {"name":"setSigningKeySize","parameterTypes":["int"] }, 
    {"name":"setStrategyType","parameterTypes":["org.apereo.cas.util.cipher.BaseStringCipherExecutor$CipherOperationsStrategyType"] }
  ]}
,
{
  "name":"org.apereo.cas.util.cipher.BaseStringCipherExecutor$CipherOperationsStrategyType"}
,
{
  "name":"org.apereo.cas.util.cipher.TicketGrantingCookieCipherExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","int","int"] }],
  "queriedMethods":[{"name":"getName","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.util.cipher.WebflowConversationStateCipherExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getName","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.util.crypto.CipherExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.util.crypto.NoOpCipherExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"decode","parameterTypes":["java.lang.Object","java.lang.Object[]"] }, 
    {"name":"encode","parameterTypes":["java.lang.Object","java.lang.Object[]"] }, 
    {"name":"isEnabled","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.util.feature.CasRuntimeModule"}
,
{
  "name":"org.apereo.cas.util.feature.CasRuntimeModule$CasRuntimeModuleBuilder"}
,
{
  "name":"org.apereo.cas.util.feature.CasRuntimeModuleLoader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.util.feature.DefaultCasRuntimeModuleLoader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"load","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.util.gen.NumericGenerator"}
,
{
  "name":"org.apereo.cas.util.gen.RandomStringGenerator"}
,
{
  "name":"org.apereo.cas.util.http.HttpClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.util.http.HttpClientFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.util.http.HttpMessage"}
,
{
  "name":"org.apereo.cas.util.http.SimpleHttpClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getHttpClientFactory","parameterTypes":[] }, 
    {"name":"getWrappedHttpClient","parameterTypes":[] }, 
    {"name":"isValidEndPoint","parameterTypes":["java.lang.String"] }, 
    {"name":"isValidEndPoint","parameterTypes":["java.net.URL"] }, 
    {"name":"sendMessageToEndPoint","parameterTypes":["java.net.URL"] }, 
    {"name":"sendMessageToEndPoint","parameterTypes":["org.apereo.cas.util.http.HttpMessage"] }
  ]}
,
{
  "name":"org.apereo.cas.util.http.SimpleHttpClientFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getAcceptableCodes","parameterTypes":[] }, 
    {"name":"getConnectionBackoffStrategy","parameterTypes":[] }, 
    {"name":"getConnectionKeepAliveStrategy","parameterTypes":[] }, 
    {"name":"getConnectionReuseStrategy","parameterTypes":[] }, 
    {"name":"getConnectionTimeout","parameterTypes":[] }, 
    {"name":"getCookieStore","parameterTypes":[] }, 
    {"name":"getCredentialsProvider","parameterTypes":[] }, 
    {"name":"getDefaultHeaders","parameterTypes":[] }, 
    {"name":"getExecutorService","parameterTypes":[] }, 
    {"name":"getHostnameVerifier","parameterTypes":[] }, 
    {"name":"getHttpRequestRetryHandler","parameterTypes":[] }, 
    {"name":"getMaxConnectionsPerRoute","parameterTypes":[] }, 
    {"name":"getMaxPooledConnections","parameterTypes":[] }, 
    {"name":"getObjectType","parameterTypes":[] }, 
    {"name":"getProxy","parameterTypes":[] }, 
    {"name":"getProxyAuthenticationStrategy","parameterTypes":[] }, 
    {"name":"getQueueSize","parameterTypes":[] }, 
    {"name":"getReadTimeout","parameterTypes":[] }, 
    {"name":"getRedirectionStrategy","parameterTypes":[] }, 
    {"name":"getServiceUnavailableRetryStrategy","parameterTypes":[] }, 
    {"name":"getSslContext","parameterTypes":[] }, 
    {"name":"getThreadsNumber","parameterTypes":[] }, 
    {"name":"getTrustManagers","parameterTypes":[] }, 
    {"name":"isAuthenticationEnabled","parameterTypes":[] }, 
    {"name":"isCircularRedirectsAllowed","parameterTypes":[] }, 
    {"name":"isRedirectsEnabled","parameterTypes":[] }, 
    {"name":"isSingleton","parameterTypes":[] }, 
    {"name":"setAcceptableCodes","parameterTypes":["java.util.List"] }, 
    {"name":"setAuthenticationEnabled","parameterTypes":["boolean"] }, 
    {"name":"setCircularRedirectsAllowed","parameterTypes":["boolean"] }, 
    {"name":"setConnectionBackoffStrategy","parameterTypes":["org.apache.http.client.ConnectionBackoffStrategy"] }, 
    {"name":"setConnectionKeepAliveStrategy","parameterTypes":["org.apache.http.conn.ConnectionKeepAliveStrategy"] }, 
    {"name":"setConnectionReuseStrategy","parameterTypes":["org.apache.http.ConnectionReuseStrategy"] }, 
    {"name":"setConnectionTimeout","parameterTypes":["long"] }, 
    {"name":"setCookieStore","parameterTypes":["org.apache.http.client.CookieStore"] }, 
    {"name":"setCredentialsProvider","parameterTypes":["org.apache.http.client.CredentialsProvider"] }, 
    {"name":"setDefaultHeaders","parameterTypes":["java.util.Collection"] }, 
    {"name":"setExecutorService","parameterTypes":["java.util.concurrent.ExecutorService"] }, 
    {"name":"setHostnameVerifier","parameterTypes":["javax.net.ssl.HostnameVerifier"] }, 
    {"name":"setHttpRequestRetryHandler","parameterTypes":["org.apache.http.client.HttpRequestRetryHandler"] }, 
    {"name":"setMaxConnectionsPerRoute","parameterTypes":["int"] }, 
    {"name":"setMaxPooledConnections","parameterTypes":["int"] }, 
    {"name":"setProxy","parameterTypes":["org.apache.http.HttpHost"] }, 
    {"name":"setProxyAuthenticationStrategy","parameterTypes":["org.apache.http.client.AuthenticationStrategy"] }, 
    {"name":"setQueueSize","parameterTypes":["int"] }, 
    {"name":"setReadTimeout","parameterTypes":["int"] }, 
    {"name":"setRedirectionStrategy","parameterTypes":["org.apache.http.client.RedirectStrategy"] }, 
    {"name":"setRedirectsEnabled","parameterTypes":["boolean"] }, 
    {"name":"setServiceUnavailableRetryStrategy","parameterTypes":["org.apache.http.client.ServiceUnavailableRetryStrategy"] }, 
    {"name":"setSslContext","parameterTypes":["javax.net.ssl.SSLContext"] }, 
    {"name":"setSslSocketFactory","parameterTypes":["org.apache.http.conn.ssl.SSLConnectionSocketFactory"] }, 
    {"name":"setThreadsNumber","parameterTypes":["int"] }, 
    {"name":"setTrustManagers","parameterTypes":["javax.net.ssl.TrustManager[]"] }
  ]}
,
{
  "name":"org.apereo.cas.util.http.SimpleHttpClientFactoryBean$DefaultHttpClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getObject","parameterTypes":[] }, 
    {"name":"getSslSocketFactory","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.util.lock.DefaultLockRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"execute","parameterTypes":["java.lang.Object","java.util.function.Supplier"] }]}
,
{
  "name":"org.apereo.cas.util.lock.LockRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.util.logging.LoggingInitialization"}
,
{
  "name":"org.apereo.cas.util.model.TriStateBoolean"}
,
{
  "name":"org.apereo.cas.util.scripting.ExecutableCompiledGroovyScript"}
,
{
  "name":"org.apereo.cas.util.scripting.GroovyScriptResourceCacheManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"containsKey","parameterTypes":["java.lang.String"] }, 
    {"name":"get","parameterTypes":["java.lang.String"] }, 
    {"name":"getKeys","parameterTypes":[] }, 
    {"name":"isEmpty","parameterTypes":[] }, 
    {"name":"put","parameterTypes":["java.lang.String","org.apereo.cas.util.scripting.ExecutableCompiledGroovyScript"] }, 
    {"name":"remove","parameterTypes":["java.lang.String"] }, 
    {"name":"resolveScriptableResource","parameterTypes":["java.lang.String","java.lang.String[]"] }
  ]}
,
{
  "name":"org.apereo.cas.util.scripting.ScriptResourceCacheManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.util.scripting.WatchableGroovyScriptResource"}
,
{
  "name":"org.apereo.cas.util.serialization.ComponentSerializationPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.util.serialization.ComponentSerializationPlanConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.util.serialization.DefaultComponentSerializationPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getRegisteredClasses","parameterTypes":[] }, 
    {"name":"registerSerializableClass","parameterTypes":["java.lang.Class"] }, 
    {"name":"registerSerializableClass","parameterTypes":["java.lang.Class","java.lang.Integer"] }
  ]}
,
{
  "name":"org.apereo.cas.util.serialization.JacksonObjectMapperFactory$JacksonObjectMapperFactoryBuilder"}
,
{
  "name":"org.apereo.cas.util.serialization.StringSerializer"}
,
{
  "name":"org.apereo.cas.util.spring.ApplicationContextProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]}
,
{
  "name":"org.apereo.cas.util.spring.BeanContainer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.util.spring.BeanContainer$ListBeanContainer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"and","parameterTypes":["java.lang.Object"] }, 
    {"name":"first","parameterTypes":[] }, 
    {"name":"size","parameterTypes":[] }, 
    {"name":"toList","parameterTypes":[] }, 
    {"name":"toSet","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.util.spring.CasEventListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.util.spring.Converters$ZonedDateTimeToStringConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"convert","parameterTypes":["java.lang.Object"] }]}
,
{
  "name":"org.apereo.cas.util.spring.SpringAwareMessageMessageInterpolator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"interpolate","parameterTypes":["java.lang.String","javax.validation.MessageInterpolator$Context"] }, 
    {"name":"interpolate","parameterTypes":["java.lang.String","javax.validation.MessageInterpolator$Context","java.util.Locale"] }, 
    {"name":"setMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }
  ]}
,
{
  "name":"org.apereo.cas.util.spring.boot.ConditionalOnMatchingHostname",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.util.spring.boot.ConditionalOnMultiValuedProperty",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.util.spring.boot.DefaultCasBanner"}
,
{
  "name":"org.apereo.cas.util.spring.boot.MatchingHostnameCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.util.spring.boot.MultiValuedPropertyCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.validation.AbstractCasProtocolValidationSpecification",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getServicesManager","parameterTypes":[] }, 
    {"name":"isRenew","parameterTypes":[] }, 
    {"name":"isSatisfiedBy","parameterTypes":["org.apereo.cas.validation.Assertion","javax.servlet.http.HttpServletRequest"] }, 
    {"name":"reset","parameterTypes":[] }, 
    {"name":"setRenew","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.apereo.cas.validation.Assertion"}
,
{
  "name":"org.apereo.cas.validation.AuthenticationAttributeReleasePolicy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.AuthenticationContextValidationResult"}
,
{
  "name":"org.apereo.cas.validation.AuthenticationContextValidationResult$AuthenticationContextValidationResultBuilder"}
,
{
  "name":"org.apereo.cas.validation.AuthenticationPolicyAwareServiceTicketValidationAuthorizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"authorize","parameterTypes":["javax.servlet.http.HttpServletRequest","org.apereo.cas.authentication.principal.Service","org.apereo.cas.validation.Assertion"] }]}
,
{
  "name":"org.apereo.cas.validation.Cas10ProtocolValidationSpecification",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.Cas20ProtocolValidationSpecification",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.Cas20WithoutProxyingValidationSpecification",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.CasProtocolAttributesRenderer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.CasProtocolValidationSpecification",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.CasProtocolViewFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.ChainingCasProtocolValidationSpecification",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"isSatisfiedBy","parameterTypes":["org.apereo.cas.validation.Assertion","javax.servlet.http.HttpServletRequest"] }, 
    {"name":"reset","parameterTypes":[] }, 
    {"name":"setRenew","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.apereo.cas.validation.DefaultServiceTicketValidationAuthorizersExecutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getAuthorizers","parameterTypes":[] }, 
    {"name":"registerAuthorizer","parameterTypes":["org.apereo.cas.validation.ServiceTicketValidationAuthorizer"] }
  ]}
,
{
  "name":"org.apereo.cas.validation.RequestedAuthenticationContextValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.ServiceTicketValidationAuthorizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.ServiceTicketValidationAuthorizerConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.ServiceTicketValidationAuthorizersExecutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.ValidationResponseType"}
,
{
  "name":"org.apereo.cas.validation.config.CasCoreValidationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.validation.config.CasCoreValidationConfiguration$CasCoreValidationAuthorizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationPolicyAwareServiceTicketValidationAuthorizer","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.services.ServicesManager","org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }, 
    {"name":"casCoreServiceTicketValidationAuthorizerConfigurer","parameterTypes":["org.apereo.cas.validation.ServiceTicketValidationAuthorizer"] }
  ]}
,
{
  "name":"org.apereo.cas.validation.config.CasCoreValidationConfiguration$CasCoreValidationAuthorizerConfiguration$$Lambda$1147/0x0000000840827840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.config.CasCoreValidationConfiguration$CasCoreValidationAuthorizerConfiguration$$Lambda$1152/0x0000000840823c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.config.CasCoreValidationConfiguration$CasCoreValidationAuthorizerConfiguration$$Lambda$1154/0x0000000840825440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.config.CasCoreValidationConfiguration$CasCoreValidationAuthorizerConfiguration$$Lambda$1159/0x0000000840826040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.config.CasCoreValidationConfiguration$CasCoreValidationAuthorizerConfiguration$$Lambda$1189/0x000000084082d040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.validation.config.CasCoreValidationConfiguration$CasCoreValidationAuthorizerConfiguration$$Lambda$1495/0x00000008409ae840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthorizersExecutionPlan","parameterTypes":["org.apereo.cas.validation.ServiceTicketValidationAuthorizersExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.validation.config.CasCoreValidationConfiguration$CasCoreValidationAuthorizerConfiguration$$Lambda$1565/0x0000000840a2f840",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureAuthorizersExecutionPlan","parameterTypes":["org.apereo.cas.validation.ServiceTicketValidationAuthorizersExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.validation.config.CasCoreValidationConfiguration$CasCoreValidationExecutionPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"serviceValidationAuthorizers","parameterTypes":["java.util.List"] }
  ]}
,
{
  "name":"org.apereo.cas.validation.config.CasCoreValidationConfiguration$CasCoreValidationProxyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"proxy10Handler","parameterTypes":[] }, 
    {"name":"proxy20Handler","parameterTypes":["org.apereo.cas.ticket.UniqueTicketIdGenerator","org.apereo.cas.util.http.HttpClient"] }
  ]}
,
{
  "name":"org.apereo.cas.validation.config.CasCoreValidationConfiguration$CasCoreValidationSpecificationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"cas10ProtocolValidationSpecification","parameterTypes":["org.apereo.cas.services.ServicesManager"] }, 
    {"name":"cas20ProtocolValidationSpecification","parameterTypes":["org.apereo.cas.services.ServicesManager"] }, 
    {"name":"cas20WithoutProxyProtocolValidationSpecification","parameterTypes":["org.apereo.cas.services.ServicesManager"] }
  ]}
,
{
  "name":"org.apereo.cas.web.AbstractDelegateController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]}
,
{
  "name":"org.apereo.cas.web.AbstractServiceValidateController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addValidationSpecification","parameterTypes":["org.apereo.cas.validation.CasProtocolValidationSpecification"] }, 
    {"name":"canHandle","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse"] }, 
    {"name":"getServiceValidateConfigurationContext","parameterTypes":[] }, 
    {"name":"handleProxyGrantingTicketDelivery","parameterTypes":["java.lang.String","org.apereo.cas.authentication.Credential"] }, 
    {"name":"handleRequestInternal","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse"] }
  ]}
,
{
  "name":"org.apereo.cas.web.BaseCasActuatorEndpoint"}
,
{
  "name":"org.apereo.cas.web.CaptchaActivationStrategy"}
,
{
  "name":"org.apereo.cas.web.CaptchaValidator"}
,
{
  "name":"org.apereo.cas.web.CasWebApplication",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"handleApplicationReadyEvent","parameterTypes":["org.springframework.boot.context.event.ApplicationReadyEvent"] }, 
    {"name":"main","parameterTypes":["java.lang.String[]"] }
  ]}
,
{
  "name":"org.apereo.cas.web.CasYamlHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.DefaultBrowserSessionStorage$DefaultBrowserSessionStorageBuilder"}
,
{
  "name":"org.apereo.cas.web.DelegatedClientIdentityProviderConfiguration$DelegatedClientIdentityProviderConfigurationBuilder"}
,
{
  "name":"org.apereo.cas.web.FlowExecutionExceptionResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"resolveException","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object","java.lang.Exception"] }]}
,
{
  "name":"org.apereo.cas.web.ProtocolEndpointWebSecurityConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.ServiceValidateConfigurationContext"}
,
{
  "name":"org.apereo.cas.web.ServiceValidationViewFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.ServiceValidationViewFactoryConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.ServiceValidationViewTypes"}
,
{
  "name":"org.apereo.cas.web.SimpleUrlValidator",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"isValid","parameterTypes":["java.lang.String"] }, 
    {"name":"isValidDomain","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.apereo.cas.web.SimpleUrlValidatorFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getObject","parameterTypes":[] }, 
    {"name":"getObjectType","parameterTypes":[] }, 
    {"name":"isSingleton","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.web.UrlValidator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.apereo.cas.web.config.CasCookieConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.web.config.CasCookieConfiguration$CasCookieCoreConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"cookieCipherExecutor","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"cookieValueManager","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.util.crypto.CipherExecutor"] }
  ]}
,
{
  "name":"org.apereo.cas.web.config.CasCookieConfiguration$CasCookieGeneratorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"ticketGrantingTicketCookieGenerator","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.web.cookie.CookieValueManager"] }, 
    {"name":"warnCookieGenerator","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.web.config.CasSupportActionsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.web.config.CasSupportActionsConfiguration$CasSupportActionsExceptionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"errorHandlerResolver","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.web.config.CasSupportActionsConfiguration$CasSupportActionsExecutionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationViaFormAction","parameterTypes":["org.apereo.cas.web.flow.resolver.CasWebflowEventResolver","org.apereo.cas.web.flow.resolver.CasDelegatingWebflowEventResolver","org.apereo.cas.authentication.adaptive.AdaptiveAuthenticationPolicy"] }, 
    {"name":"confirmLogoutAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.services.ServicesManager","org.apereo.cas.web.cookie.CasCookieBuilder","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.web.support.ArgumentExtractor","org.apereo.cas.logout.LogoutExecutionPlan"] }, 
    {"name":"createTicketGrantingTicketAction","parameterTypes":["org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext"] }, 
    {"name":"finishLogoutAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.services.ServicesManager","org.apereo.cas.web.cookie.CasCookieBuilder","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.web.support.ArgumentExtractor","org.apereo.cas.logout.LogoutExecutionPlan"] }, 
    {"name":"frontChannelLogoutAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.services.ServicesManager","org.apereo.cas.web.cookie.CasCookieBuilder","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.web.support.ArgumentExtractor","org.apereo.cas.logout.LogoutExecutionPlan"] }, 
    {"name":"gatewayServicesManagementCheck","parameterTypes":["org.apereo.cas.services.ServicesManager","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan"] }, 
    {"name":"generateServiceTicketAction","parameterTypes":["org.apereo.cas.services.ServicesManager","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.authentication.AuthenticationSystemSupport","org.apereo.cas.ticket.registry.TicketRegistrySupport","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan","org.apereo.cas.authentication.PrincipalElectionStrategy"] }, 
    {"name":"genericSuccessViewAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.services.ServicesManager","org.apereo.cas.authentication.principal.ServiceFactory","org.apereo.cas.CentralAuthenticationService"] }, 
    {"name":"initialAuthenticationRequestValidationAction","parameterTypes":["org.apereo.cas.web.flow.resolver.CasWebflowEventResolver"] }, 
    {"name":"initialFlowSetupAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.authentication.AuthenticationEventExecutionPlan","org.apereo.cas.services.ServicesManager","org.apereo.cas.web.cookie.CasCookieBuilder","org.apereo.cas.web.cookie.CasCookieBuilder","org.apereo.cas.ticket.registry.TicketRegistrySupport","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan","org.apereo.cas.web.flow.SingleSignOnParticipationStrategy","org.apereo.cas.web.support.ArgumentExtractor"] }, 
    {"name":"initializeLoginAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.services.ServicesManager"] }, 
    {"name":"logoutAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.services.ServicesManager","org.apereo.cas.web.cookie.CasCookieBuilder","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.web.support.ArgumentExtractor","org.apereo.cas.logout.LogoutExecutionPlan"] }, 
    {"name":"logoutViewSetupAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.services.ServicesManager","org.apereo.cas.web.cookie.CasCookieBuilder","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.web.support.ArgumentExtractor","org.apereo.cas.logout.LogoutExecutionPlan"] }, 
    {"name":"populateSpringSecurityContextAction","parameterTypes":[] }, 
    {"name":"redirectUnauthorizedServiceUrlAction","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.services.ServicesManager"] }, 
    {"name":"renderLoginFormAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.services.ServicesManager"] }, 
    {"name":"sendTicketGrantingTicketAction","parameterTypes":["org.apereo.cas.web.cookie.CasCookieBuilder","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.web.flow.SingleSignOnParticipationStrategy"] }, 
    {"name":"serviceAuthorizationCheck","parameterTypes":["org.apereo.cas.services.ServicesManager","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan"] }, 
    {"name":"serviceWarningAction","parameterTypes":["org.apereo.cas.web.cookie.CasCookieBuilder","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.authentication.AuthenticationSystemSupport","org.apereo.cas.ticket.registry.TicketRegistrySupport","org.apereo.cas.authentication.PrincipalElectionStrategy"] }, 
    {"name":"setServiceUnauthorizedRedirectUrlAction","parameterTypes":["org.apereo.cas.services.ServicesManager"] }, 
    {"name":"terminateSessionAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.logout.LogoutManager","org.apereo.cas.web.cookie.CasCookieBuilder","org.apereo.cas.web.cookie.CasCookieBuilder","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.logout.slo.SingleLogoutRequestExecutor"] }, 
    {"name":"ticketGrantingTicketCheckAction","parameterTypes":["org.apereo.cas.CentralAuthenticationService"] }, 
    {"name":"verifyRequiredServiceAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.services.ServicesManager","org.apereo.cas.web.cookie.CasCookieBuilder","org.apereo.cas.ticket.registry.TicketRegistrySupport"] }
  ]}
,
{
  "name":"org.apereo.cas.web.config.CasValidationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.web.config.CasValidationConfiguration$CasValidationControllerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"legacyValidateController","parameterTypes":["org.apereo.cas.validation.RequestedAuthenticationContextValidator","org.apereo.cas.ticket.proxy.ProxyHandler","org.apereo.cas.validation.ServiceTicketValidationAuthorizersExecutionPlan","org.apereo.cas.services.ServicesManager","org.apereo.cas.web.support.ArgumentExtractor","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.authentication.AuthenticationSystemSupport","org.apereo.cas.validation.CasProtocolValidationSpecification","org.apereo.cas.web.ServiceValidationViewFactory"] }, 
    {"name":"proxyController","parameterTypes":["org.apereo.cas.authentication.principal.ServiceFactory","org.apereo.cas.CentralAuthenticationService","org.springframework.context.ConfigurableApplicationContext","org.springframework.web.servlet.View","org.springframework.web.servlet.View"] }, 
    {"name":"proxyValidateController","parameterTypes":["org.apereo.cas.validation.RequestedAuthenticationContextValidator","org.apereo.cas.validation.ServiceTicketValidationAuthorizersExecutionPlan","org.apereo.cas.services.ServicesManager","org.apereo.cas.web.support.ArgumentExtractor","org.apereo.cas.ticket.proxy.ProxyHandler","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.authentication.AuthenticationSystemSupport","org.apereo.cas.validation.CasProtocolValidationSpecification","org.apereo.cas.web.ServiceValidationViewFactory"] }, 
    {"name":"serviceValidateController","parameterTypes":["org.apereo.cas.validation.RequestedAuthenticationContextValidator","org.apereo.cas.authentication.AuthenticationSystemSupport","org.apereo.cas.services.ServicesManager","org.apereo.cas.validation.ServiceTicketValidationAuthorizersExecutionPlan","org.apereo.cas.ticket.proxy.ProxyHandler","org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.web.support.ArgumentExtractor","org.apereo.cas.validation.CasProtocolValidationSpecification","org.apereo.cas.web.ServiceValidationViewFactory"] }, 
    {"name":"v3ProxyValidateController","parameterTypes":["org.apereo.cas.validation.RequestedAuthenticationContextValidator","org.apereo.cas.validation.ServiceTicketValidationAuthorizersExecutionPlan","org.apereo.cas.services.ServicesManager","org.apereo.cas.web.support.ArgumentExtractor","org.apereo.cas.ticket.proxy.ProxyHandler","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.authentication.AuthenticationSystemSupport","org.apereo.cas.validation.CasProtocolValidationSpecification","org.apereo.cas.web.ServiceValidationViewFactory"] }, 
    {"name":"v3ServiceValidateController","parameterTypes":["org.apereo.cas.validation.ServiceTicketValidationAuthorizersExecutionPlan","org.apereo.cas.services.ServicesManager","org.apereo.cas.web.support.ArgumentExtractor","org.apereo.cas.ticket.proxy.ProxyHandler","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.authentication.AuthenticationSystemSupport","org.apereo.cas.validation.RequestedAuthenticationContextValidator","org.apereo.cas.validation.CasProtocolValidationSpecification","org.apereo.cas.web.ServiceValidationViewFactory"] }
  ]}
,
{
  "name":"org.apereo.cas.web.config.CasValidationConfiguration$CasValidationRendererConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"cas1ProtocolAttributesRenderer","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"cas3ProtocolAttributesRenderer","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.web.config.CasValidationConfiguration$CasValidationSpecificationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"legacyValidateControllerValidationSpecification","parameterTypes":["org.apereo.cas.validation.CasProtocolValidationSpecification"] }, 
    {"name":"proxyValidateControllerValidationSpecification","parameterTypes":["org.apereo.cas.validation.CasProtocolValidationSpecification"] }, 
    {"name":"serviceValidateControllerValidationSpecification","parameterTypes":["org.apereo.cas.validation.CasProtocolValidationSpecification"] }, 
    {"name":"v3ProxyValidateControllerValidationSpecification","parameterTypes":["org.apereo.cas.validation.CasProtocolValidationSpecification"] }, 
    {"name":"v3ServiceValidateControllerValidationSpecification","parameterTypes":["org.apereo.cas.validation.CasProtocolValidationSpecification"] }
  ]}
,
{
  "name":"org.apereo.cas.web.config.CasValidationConfiguration$CasValidationViewFactoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"serviceValidationViewFactory","parameterTypes":["java.util.List"] }
  ]}
,
{
  "name":"org.apereo.cas.web.config.CasValidationConfiguration$CasValidationViewRegistrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casServiceValidationViewFactoryConfigurer","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.web.servlet.View","org.springframework.web.servlet.View","org.springframework.web.servlet.View","org.springframework.web.servlet.View","org.springframework.web.servlet.View","org.springframework.web.servlet.View","org.springframework.web.servlet.View"] }
  ]}
,
{
  "name":"org.apereo.cas.web.config.CasValidationConfiguration$CasValidationViewRegistrationConfiguration$$Lambda$1149/0x0000000840826840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.config.CasValidationConfiguration$CasValidationViewRegistrationConfiguration$$Lambda$1154/0x0000000840827c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.config.CasValidationConfiguration$CasValidationViewRegistrationConfiguration$$Lambda$1156/0x0000000840827c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.config.CasValidationConfiguration$CasValidationViewRegistrationConfiguration$$Lambda$1161/0x0000000840827840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.config.CasValidationConfiguration$CasValidationViewRegistrationConfiguration$$Lambda$1191/0x000000084082f840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.config.CasValidationConfiguration$CasValidationViewRegistrationConfiguration$$Lambda$1497/0x00000008409afc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureViewFactory","parameterTypes":["org.apereo.cas.web.ServiceValidationViewFactory"] }]}
,
{
  "name":"org.apereo.cas.web.config.CasValidationConfiguration$CasValidationViewRegistrationConfiguration$$Lambda$1567/0x0000000840a2ec40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureViewFactory","parameterTypes":["org.apereo.cas.web.ServiceValidationViewFactory"] }]}
,
{
  "name":"org.apereo.cas.web.config.CasValidationConfiguration$CasValidationViewsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"cas1ServiceFailureView","parameterTypes":["org.apereo.cas.validation.AuthenticationAttributeReleasePolicy","org.apereo.cas.authentication.ProtocolAttributeEncoder","org.apereo.cas.services.ServicesManager","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan","org.apereo.cas.validation.CasProtocolAttributesRenderer"] }, 
    {"name":"cas1ServiceSuccessView","parameterTypes":["org.apereo.cas.validation.AuthenticationAttributeReleasePolicy","org.apereo.cas.authentication.ProtocolAttributeEncoder","org.apereo.cas.services.ServicesManager","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan","org.apereo.cas.validation.CasProtocolAttributesRenderer"] }, 
    {"name":"cas2ProxyFailureView","parameterTypes":["org.apereo.cas.validation.CasProtocolViewFactory","org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"cas2ProxySuccessView","parameterTypes":["org.apereo.cas.validation.CasProtocolViewFactory","org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.context.ConfigurableApplicationContext"] }, 
    {"name":"cas2ServiceFailureView","parameterTypes":["org.apereo.cas.validation.CasProtocolViewFactory","org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.context.ConfigurableApplicationContext"] }, 
    {"name":"cas2ServiceSuccessView","parameterTypes":["org.apereo.cas.validation.AuthenticationAttributeReleasePolicy","org.apereo.cas.authentication.ProtocolAttributeEncoder","org.apereo.cas.services.ServicesManager","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan","org.springframework.web.servlet.View"] }, 
    {"name":"cas2SuccessView","parameterTypes":["org.apereo.cas.validation.CasProtocolViewFactory","org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"cas3ServiceFailureView","parameterTypes":["org.apereo.cas.validation.CasProtocolViewFactory","org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.context.ConfigurableApplicationContext"] }, 
    {"name":"cas3ServiceJsonView","parameterTypes":["org.apereo.cas.validation.AuthenticationAttributeReleasePolicy","org.apereo.cas.authentication.ProtocolAttributeEncoder","org.apereo.cas.services.ServicesManager","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan","org.apereo.cas.validation.CasProtocolAttributesRenderer"] }, 
    {"name":"cas3ServiceSuccessView","parameterTypes":["org.apereo.cas.validation.AuthenticationAttributeReleasePolicy","org.apereo.cas.authentication.ProtocolAttributeEncoder","org.apereo.cas.services.ServicesManager","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan","org.apereo.cas.validation.CasProtocolAttributesRenderer","org.springframework.web.servlet.View"] }, 
    {"name":"cas3SuccessView","parameterTypes":["org.apereo.cas.validation.CasProtocolViewFactory","org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.context.ConfigurableApplicationContext"] }, 
    {"name":"casPostResponseView","parameterTypes":["org.apereo.cas.validation.CasProtocolViewFactory","org.springframework.context.ConfigurableApplicationContext"] }
  ]}
,
{
  "name":"org.apereo.cas.web.cookie.CasCookieBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.cookie.CookieValueManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.BaseServiceAuthorizationCheckAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"doExecute","parameterTypes":["org.springframework.webflow.execution.RequestContext"] }]}
,
{
  "name":"org.apereo.cas.web.flow.BaseSingleSignOnParticipationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.CasDefaultFlowUrlHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"createFlowDefinitionUrl","parameterTypes":["java.lang.String","org.springframework.webflow.core.collection.AttributeMap","javax.servlet.http.HttpServletRequest"] }, 
    {"name":"createFlowExecutionUrl","parameterTypes":["java.lang.String","java.lang.String","javax.servlet.http.HttpServletRequest"] }, 
    {"name":"getFlowExecutionKey","parameterTypes":["javax.servlet.http.HttpServletRequest"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.CasFlowHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"supports","parameterTypes":["java.lang.Object"] }]}
,
{
  "name":"org.apereo.cas.web.flow.CasWebflowConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.CasWebflowExecutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.CasWebflowExecutionPlanConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.CasWebflowLoginContextProvider"}
,
{
  "name":"org.apereo.cas.web.flow.ChainingSingleSignOnParticipationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"isCreateCookieOnRenewedAuthentication","parameterTypes":["org.apereo.cas.web.flow.SingleSignOnParticipationRequest"] }, 
    {"name":"isParticipating","parameterTypes":["org.apereo.cas.web.flow.SingleSignOnParticipationRequest"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.web.flow.SingleSignOnParticipationRequest"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.DefaultSingleSignOnParticipationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isCreateCookieOnRenewedAuthentication","parameterTypes":["org.apereo.cas.web.flow.SingleSignOnParticipationRequest"] }, 
    {"name":"isParticipating","parameterTypes":["org.apereo.cas.web.flow.SingleSignOnParticipationRequest"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.GatewayServicesManagementCheckAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.GenerateServiceTicketAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.LogoutConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.PopulateSpringSecurityContextAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.ServiceAuthorizationCheckAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.SingleSignOnParticipationRequest"}
,
{
  "name":"org.apereo.cas.web.flow.SingleSignOnParticipationRequest$SingleSignOnParticipationRequestBuilder"}
,
{
  "name":"org.apereo.cas.web.flow.SingleSignOnParticipationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.SingleSignOnParticipationStrategyConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.actions.AbstractAuthenticationAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.actions.AbstractMultifactorAuthenticationAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.actions.AuthenticationExceptionHandlerAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.actions.CheckWebAuthenticationRequestAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.actions.ClearWebflowCredentialAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.actions.InitialAuthenticationAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.actions.InjectResponseHeadersAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.actions.MultifactorAuthenticationAvailableAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.actions.MultifactorAuthenticationBypassAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.actions.MultifactorAuthenticationFailureAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.actions.RedirectToServiceAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.actions.RenewAuthenticationRequestCheckAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.actions.composite.MultifactorProviderSelectedAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.actions.composite.PrepareMultifactorProviderSelectionAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.authentication.BaseMultifactorAuthenticationProviderEventResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.authentication.CasWebflowExceptionCatalog",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.authentication.CasWebflowExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.authentication.DefaultCasWebflowAbstractTicketExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"handle","parameterTypes":["java.lang.Exception","org.springframework.webflow.execution.RequestContext"] }, 
    {"name":"supports","parameterTypes":["java.lang.Exception","org.springframework.webflow.execution.RequestContext"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.authentication.DefaultCasWebflowAuthenticationExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"handle","parameterTypes":["java.lang.Exception","org.springframework.webflow.execution.RequestContext"] }, 
    {"name":"supports","parameterTypes":["java.lang.Exception","org.springframework.webflow.execution.RequestContext"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.authentication.DefaultCasWebflowExceptionCatalog",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getRegisteredExceptions","parameterTypes":[] }, 
    {"name":"registerException","parameterTypes":["java.lang.Class"] }, 
    {"name":"registerExceptions","parameterTypes":["java.util.Collection"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.authentication.GenericCasWebflowExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"handle","parameterTypes":["java.lang.Exception","org.springframework.webflow.execution.RequestContext"] }, 
    {"name":"supports","parameterTypes":["java.lang.Exception","org.springframework.webflow.execution.RequestContext"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.authentication.RankedMultifactorAuthenticationProviderSelector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"resolve","parameterTypes":["java.util.Collection","org.apereo.cas.services.RegisteredService","org.apereo.cas.authentication.principal.Principal"] }]}
,
{
  "name":"org.apereo.cas.web.flow.authentication.RegisteredServiceAuthenticationPolicySingleSignOnParticipationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isParticipating","parameterTypes":["org.apereo.cas.web.flow.SingleSignOnParticipationRequest"] }, 
    {"name":"supports","parameterTypes":["org.apereo.cas.web.flow.SingleSignOnParticipationRequest"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowActionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationExceptionHandler","parameterTypes":["java.util.List"] }, 
    {"name":"checkWebAuthenticationRequestAction","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"clearWebflowCredentialsAction","parameterTypes":[] }, 
    {"name":"injectResponseHeadersAction","parameterTypes":["org.apereo.cas.authentication.principal.ResponseBuilderLocator"] }, 
    {"name":"redirectToServiceAction","parameterTypes":["org.apereo.cas.authentication.principal.ResponseBuilderLocator"] }, 
    {"name":"renewAuthenticationRequestCheckAction","parameterTypes":["org.apereo.cas.web.flow.SingleSignOnParticipationStrategy"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casWebflowConfigurationContext","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.ticket.registry.TicketRegistrySupport","org.apereo.cas.authentication.AuthenticationSystemSupport","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan","org.apereo.cas.CentralAuthenticationService","org.apereo.cas.authentication.MultifactorAuthenticationContextValidator","org.apereo.cas.authentication.AuthenticationEventExecutionPlan","org.apereo.cas.services.ServicesManager","org.apereo.cas.web.cookie.CasCookieBuilder","org.apereo.cas.ticket.registry.TicketRegistry","org.apereo.cas.web.flow.SingleSignOnParticipationStrategy","org.apereo.cas.audit.AuditableExecution","org.apereo.cas.web.cookie.CasCookieBuilder"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowEventResolutionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"serviceTicketRequestWebflowEventResolver","parameterTypes":["org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext"] }, 
    {"name":"webflowCipherExecutor","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowExceptionCatalogConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"handledAuthenticationExceptions","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowExceptionHandlingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultCasWebflowAbstractTicketExceptionHandler","parameterTypes":["org.apereo.cas.web.flow.authentication.CasWebflowExceptionCatalog"] }, 
    {"name":"defaultCasWebflowAuthenticationExceptionHandler","parameterTypes":["org.apereo.cas.web.flow.authentication.CasWebflowExceptionCatalog"] }, 
    {"name":"genericCasWebflowExceptionHandler","parameterTypes":["org.apereo.cas.web.flow.authentication.CasWebflowExceptionCatalog"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowSingleSignOnConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultSingleSignOnParticipationStrategy","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan","org.apereo.cas.ticket.registry.TicketRegistrySupport","org.apereo.cas.services.ServicesManager"] }, 
    {"name":"defaultSingleSignOnParticipationStrategyConfigurer","parameterTypes":["org.apereo.cas.web.flow.SingleSignOnParticipationStrategy"] }, 
    {"name":"requiredAuthenticationHandlersSingleSignOnParticipationStrategy","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.authentication.AuthenticationServiceSelectionPlan","org.apereo.cas.services.ServicesManager","org.apereo.cas.ticket.registry.TicketRegistrySupport","org.apereo.cas.authentication.AuthenticationEventExecutionPlan"] }, 
    {"name":"requiredAuthenticationHandlersSingleSignOnParticipationStrategyConfigurer","parameterTypes":["org.apereo.cas.web.flow.SingleSignOnParticipationStrategy"] }, 
    {"name":"singleSignOnParticipationStrategy","parameterTypes":["java.util.List"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowSingleSignOnConfiguration$$Lambda$1493/0x00000008409ec840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowSingleSignOnConfiguration$$Lambda$1494/0x00000008409ecc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowSingleSignOnConfiguration$$Lambda$1498/0x00000008409e4840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowSingleSignOnConfiguration$$Lambda$1499/0x00000008409b9840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureStrategy","parameterTypes":["org.apereo.cas.web.flow.ChainingSingleSignOnParticipationStrategy"] }]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowSingleSignOnConfiguration$$Lambda$1499/0x00000008409e4c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowSingleSignOnConfiguration$$Lambda$1500/0x00000008409b9c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureStrategy","parameterTypes":["org.apereo.cas.web.flow.ChainingSingleSignOnParticipationStrategy"] }]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowSingleSignOnConfiguration$$Lambda$1500/0x00000008409c2040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowSingleSignOnConfiguration$$Lambda$1501/0x00000008409c2440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowSingleSignOnConfiguration$$Lambda$1505/0x00000008409c2c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowSingleSignOnConfiguration$$Lambda$1506/0x00000008409c2040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowSingleSignOnConfiguration$$Lambda$1535/0x00000008409cac40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowSingleSignOnConfiguration$$Lambda$1536/0x00000008409ca040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowSingleSignOnConfiguration$$Lambda$1569/0x0000000840a2c840",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureStrategy","parameterTypes":["org.apereo.cas.web.flow.ChainingSingleSignOnParticipationStrategy"] }]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasCoreWebflowConfiguration$CasCoreWebflowSingleSignOnConfiguration$$Lambda$1570/0x0000000840a2cc40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureStrategy","parameterTypes":["org.apereo.cas.web.flow.ChainingSingleSignOnParticipationStrategy"] }]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasMultifactorAuthenticationWebflowConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasMultifactorAuthenticationWebflowConfiguration$CasCoreMultifactorAuthenticationProviderSelectiveConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"selectiveAuthenticationProviderWebflowEventResolver","parameterTypes":["org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasMultifactorAuthenticationWebflowConfiguration$CasMultifactorAuthenticationWebflowActionsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"mfaAvailableAction","parameterTypes":[] }, 
    {"name":"mfaBypassAction","parameterTypes":[] }, 
    {"name":"mfaFailureAction","parameterTypes":[] }, 
    {"name":"multifactorProviderSelectedAction","parameterTypes":[] }, 
    {"name":"prepareMultifactorProviderSelectionAction","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasMultifactorAuthenticationWebflowConfiguration$CasMultifactorAuthenticationWebflowContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"initialAuthenticationAttemptWebflowEventResolver","parameterTypes":["org.apereo.cas.web.flow.resolver.CasWebflowEventResolver","org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext","org.apereo.cas.web.flow.resolver.CasWebflowEventResolver","org.apereo.cas.web.flow.resolver.CasWebflowEventResolver","org.apereo.cas.web.flow.resolver.CasWebflowEventResolver","org.apereo.cas.web.flow.resolver.CasWebflowEventResolver","org.apereo.cas.web.flow.resolver.CasWebflowEventResolver","org.apereo.cas.web.flow.resolver.CasWebflowEventResolver","org.apereo.cas.web.flow.resolver.CasWebflowEventResolver","org.apereo.cas.web.flow.resolver.CasWebflowEventResolver","org.apereo.cas.web.flow.resolver.CasWebflowEventResolver","org.apereo.cas.web.flow.resolver.CasWebflowEventResolver","org.apereo.cas.web.flow.resolver.CasWebflowEventResolver","org.apereo.cas.web.flow.resolver.CasWebflowEventResolver"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasMultifactorAuthenticationWebflowConfiguration$CasMultifactorAuthenticationWebflowRankedEventConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"rankedAuthenticationProviderWebflowEventResolver","parameterTypes":["org.apereo.cas.web.flow.resolver.CasDelegatingWebflowEventResolver","org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext","org.apereo.cas.authentication.MultifactorAuthenticationContextValidator","org.apereo.cas.web.flow.SingleSignOnParticipationStrategy"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasMultifactorAuthenticationWebflowConfiguration$CasMultifactorAuthenticationWebflowResolverConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultMultifactorAuthenticationPrincipalResolver","parameterTypes":[] }, 
    {"name":"multifactorAuthenticationProviderResolver","parameterTypes":["java.util.List"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasMultifactorAuthenticationWebflowConfiguration$CasMultifactorAuthenticationWebflowSelectorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"multifactorAuthenticationProviderSelector","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationFailureModeEvaluator","org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasMultifactorAuthenticationWebflowConfiguration$CasMultifactorAuthenticationWebflowTriggersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"adaptiveAuthenticationPolicyWebflowEventResolver","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationTrigger","org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext"] }, 
    {"name":"adaptiveMultifactorAuthenticationTrigger","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"authenticationAttributeAuthenticationPolicyWebflowEventResolver","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationTrigger","org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext"] }, 
    {"name":"authenticationAttributeMultifactorAuthenticationTrigger","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationProviderResolver","org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"defaultMultifactorTriggerSelectionStrategy","parameterTypes":["java.util.List"] }, 
    {"name":"globalAuthenticationPolicyWebflowEventResolver","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationTrigger","org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext"] }, 
    {"name":"globalMultifactorAuthenticationTrigger","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationProviderSelector","org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"groovyScriptAuthenticationPolicyWebflowEventResolver","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationTrigger","org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext"] }, 
    {"name":"groovyScriptMultifactorAuthenticationTrigger","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"httpRequestAuthenticationPolicyWebflowEventResolver","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationTrigger","org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext"] }, 
    {"name":"httpRequestMultifactorAuthenticationTrigger","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"predicatedPrincipalAttributeMultifactorAuthenticationPolicyEventResolver","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationTrigger","org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext"] }, 
    {"name":"predicatedPrincipalAttributeMultifactorAuthenticationTrigger","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"principalAttributeAuthenticationPolicyWebflowEventResolver","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationTrigger","org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext"] }, 
    {"name":"principalAttributeMultifactorAuthenticationTrigger","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationProviderResolver","org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"registeredServiceAuthenticationPolicyWebflowEventResolver","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationTrigger","org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext"] }, 
    {"name":"registeredServiceMultifactorAuthenticationTrigger","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationProviderSelector","org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"registeredServicePrincipalAttributeAuthenticationPolicyWebflowEventResolver","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationTrigger","org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext"] }, 
    {"name":"registeredServicePrincipalAttributeMultifactorAuthenticationTrigger","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationProviderSelector","org.apereo.cas.authentication.MultifactorAuthenticationProviderResolver","org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"restEndpointAuthenticationPolicyWebflowEventResolver","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationTrigger","org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext"] }, 
    {"name":"restEndpointMultifactorAuthenticationTrigger","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationProviderResolver","org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"scriptedRegisteredServiceAuthenticationPolicyWebflowEventResolver","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationTrigger","org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext"] }, 
    {"name":"scriptedRegisteredServiceMultifactorAuthenticationTrigger","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties"] }, 
    {"name":"timedAuthenticationPolicyWebflowEventResolver","parameterTypes":["org.apereo.cas.authentication.MultifactorAuthenticationTrigger","org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext"] }, 
    {"name":"timedMultifactorAuthenticationTrigger","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casWebflowExecutionPlanInitializer","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.apereo.cas.web.flow.CasWebflowExecutionPlan"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$$Lambda$1208/0x000000084083a040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$$Lambda$1240/0x000000084088d840",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$$Lambda$1281/0x00000008408d3040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$$Lambda$1286/0x00000008408cb040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$$Lambda$1288/0x00000008408c1040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$$Lambda$1293/0x00000008408f8440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$$Lambda$1323/0x00000008408c9440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$CasFlowHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$CasWebflowContextBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"expressionParser","parameterTypes":["org.springframework.binding.convert.ConversionService"] }, 
    {"name":"flowBuilder","parameterTypes":[] }, 
    {"name":"flowBuilderServices","parameterTypes":["org.springframework.webflow.engine.builder.ViewFactoryCreator","org.springframework.binding.expression.ExpressionParser"] }, 
    {"name":"logoutConversionService","parameterTypes":[] }, 
    {"name":"viewFactoryCreator","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$CasWebflowContextExecutionPlanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casDefaultWebflowExecutionPlanConfigurer","parameterTypes":["org.apereo.cas.web.flow.CasWebflowConfigurer","org.apereo.cas.web.flow.CasWebflowConfigurer","org.apereo.cas.web.flow.CasWebflowConfigurer","org.springframework.web.servlet.i18n.LocaleChangeInterceptor","org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"defaultLogoutWebflowConfigurer","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.webflow.definition.registry.FlowDefinitionRegistry","org.springframework.webflow.definition.registry.FlowDefinitionRegistry","org.springframework.webflow.engine.builder.support.FlowBuilderServices"] }, 
    {"name":"defaultWebflowConfigurer","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.webflow.definition.registry.FlowDefinitionRegistry","org.springframework.webflow.definition.registry.FlowDefinitionRegistry","org.springframework.webflow.engine.builder.support.FlowBuilderServices"] }, 
    {"name":"groovyWebflowConfigurer","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.webflow.definition.registry.FlowDefinitionRegistry","org.springframework.webflow.definition.registry.FlowDefinitionRegistry","org.springframework.webflow.engine.builder.support.FlowBuilderServices"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$CasWebflowContextExecutionPlanConfiguration$$Lambda$1079/0x000000084076dc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureWebflowExecutionPlan","parameterTypes":["org.apereo.cas.web.flow.CasWebflowExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$CasWebflowContextExecutionPlanConfiguration$$Lambda$1111/0x00000008407c2c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"configureWebflowExecutionPlan","parameterTypes":["org.apereo.cas.web.flow.CasWebflowExecutionPlan"] }]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$CasWebflowContextExecutionPlanConfiguration$$Lambda$1156/0x0000000840823c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$CasWebflowContextExecutionPlanConfiguration$$Lambda$1161/0x0000000840850040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$CasWebflowContextExecutionPlanConfiguration$$Lambda$1163/0x0000000840837040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$CasWebflowContextExecutionPlanConfiguration$$Lambda$1168/0x0000000840837c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$CasWebflowContextExecutionPlanConfiguration$$Lambda$1198/0x000000084083fc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$CasWebflowContextFlowExecutorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loginFlowExecutor","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.webflow.definition.registry.FlowDefinitionRegistry","org.apereo.cas.util.crypto.CipherExecutor"] }, 
    {"name":"logoutFlowExecutor","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.springframework.webflow.definition.registry.FlowDefinitionRegistry","org.apereo.cas.util.crypto.CipherExecutor"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$CasWebflowContextFlowHandlerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loginFlowHandlerMapping","parameterTypes":["org.springframework.webflow.definition.registry.FlowDefinitionRegistry"] }, 
    {"name":"loginFlowUrlHandler","parameterTypes":[] }, 
    {"name":"loginHandlerAdapter","parameterTypes":["org.springframework.webflow.executor.FlowExecutor","org.springframework.webflow.context.servlet.FlowUrlHandler"] }, 
    {"name":"logoutFlowHandlerMapping","parameterTypes":["org.springframework.webflow.definition.registry.FlowDefinitionRegistry","org.springframework.web.servlet.i18n.LocaleChangeInterceptor","org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor"] }, 
    {"name":"logoutFlowUrlHandler","parameterTypes":[] }, 
    {"name":"logoutHandlerAdapter","parameterTypes":["org.springframework.webflow.context.servlet.FlowUrlHandler","org.springframework.webflow.executor.FlowExecutor"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$CasWebflowContextInterceptorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"localeChangeInterceptor","parameterTypes":["org.apereo.cas.configuration.CasConfigurationProperties","org.apereo.cas.services.ServicesManager","org.apereo.cas.web.support.ArgumentExtractor"] }, 
    {"name":"resourceUrlProviderExposingInterceptor","parameterTypes":["org.springframework.web.servlet.resource.ResourceUrlProvider"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$CasWebflowDefinitionsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loginFlowRegistry","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.springframework.webflow.engine.builder.support.FlowBuilderServices","org.springframework.webflow.engine.builder.FlowBuilder"] }, 
    {"name":"logoutFlowRegistry","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.springframework.webflow.engine.builder.support.FlowBuilderServices","org.springframework.webflow.engine.builder.FlowBuilder"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.config.CasWebflowContextConfiguration$CasWebflowExecutionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"casWebflowExecutionPlan","parameterTypes":["java.util.List"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.configurer.AbstractCasWebflowConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addActionsToActionStateExecutionListAt","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","int","org.springframework.webflow.action.EvaluateAction[]"] }, 
    {"name":"buildFlow","parameterTypes":["java.lang.String"] }, 
    {"name":"cloneActionState","parameterTypes":["org.springframework.webflow.engine.ActionState","org.springframework.webflow.engine.ActionState"] }, 
    {"name":"containsFlowState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String"] }, 
    {"name":"containsSubflowState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String"] }, 
    {"name":"containsTransition","parameterTypes":["org.springframework.webflow.engine.TransitionableState","java.lang.String"] }, 
    {"name":"createActionState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String"] }, 
    {"name":"createActionState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.lang.String"] }, 
    {"name":"createActionState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","org.springframework.webflow.execution.Action"] }, 
    {"name":"createActionState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","org.springframework.webflow.execution.Action[]"] }, 
    {"name":"createClonedActionState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.lang.String"] }, 
    {"name":"createDecisionState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.lang.String","java.lang.String","java.lang.String"] }, 
    {"name":"createEndState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String"] }, 
    {"name":"createEndState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.lang.String"] }, 
    {"name":"createEndState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.lang.String","boolean"] }, 
    {"name":"createEndState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","org.springframework.binding.expression.Expression"] }, 
    {"name":"createEndState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","org.springframework.webflow.execution.ViewFactory"] }, 
    {"name":"createEvaluateAction","parameterTypes":["java.lang.String"] }, 
    {"name":"createEvaluateActionForExistingActionState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.lang.String"] }, 
    {"name":"createExpression","parameterTypes":["java.lang.String"] }, 
    {"name":"createExpression","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"createExternalRedirectViewFactory","parameterTypes":["java.lang.String"] }, 
    {"name":"createFlowVariable","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.lang.Class"] }, 
    {"name":"createMapperToSubflowState","parameterTypes":["java.util.List"] }, 
    {"name":"createMappingToSubflowState","parameterTypes":["java.lang.String","java.lang.String","boolean","java.lang.Class"] }, 
    {"name":"createRenderAction","parameterTypes":["java.lang.String[]"] }, 
    {"name":"createSetAction","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"createStateBinderConfiguration","parameterTypes":["java.util.List"] }, 
    {"name":"createStateDefaultTransition","parameterTypes":["org.springframework.webflow.engine.TransitionableState","java.lang.String"] }, 
    {"name":"createStateDefaultTransition","parameterTypes":["org.springframework.webflow.engine.TransitionableState","org.springframework.webflow.definition.StateDefinition"] }, 
    {"name":"createStateModelBinding","parameterTypes":["org.springframework.webflow.engine.TransitionableState","java.lang.String","java.lang.Class"] }, 
    {"name":"createSubflowAttributeMapper","parameterTypes":["org.springframework.binding.mapping.Mapper","org.springframework.binding.mapping.Mapper"] }, 
    {"name":"createSubflowState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.lang.String"] }, 
    {"name":"createSubflowState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.lang.String","org.springframework.webflow.execution.Action"] }, 
    {"name":"createTransition","parameterTypes":["java.lang.String"] }, 
    {"name":"createTransition","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"createTransition","parameterTypes":["java.lang.String","java.lang.String","org.springframework.webflow.execution.Action[]"] }, 
    {"name":"createTransition","parameterTypes":["java.lang.String","org.springframework.webflow.engine.TransitionableState"] }, 
    {"name":"createTransition","parameterTypes":["org.springframework.binding.expression.Expression","java.lang.String","org.springframework.webflow.execution.Action[]"] }, 
    {"name":"createTransitionForState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.lang.String","java.lang.String"] }, 
    {"name":"createTransitionForState","parameterTypes":["org.springframework.webflow.engine.TransitionableState","java.lang.String"] }, 
    {"name":"createTransitionForState","parameterTypes":["org.springframework.webflow.engine.TransitionableState","java.lang.String","java.lang.String"] }, 
    {"name":"createTransitionForState","parameterTypes":["org.springframework.webflow.engine.TransitionableState","java.lang.String","java.lang.String","java.util.Map"] }, 
    {"name":"createTransitionForState","parameterTypes":["org.springframework.webflow.engine.TransitionableState","java.lang.String","java.lang.String","java.util.Map","org.springframework.webflow.execution.Action[]"] }, 
    {"name":"createTransitionForState","parameterTypes":["org.springframework.webflow.engine.TransitionableState","java.lang.String","java.lang.String","boolean"] }, 
    {"name":"createTransitionForState","parameterTypes":["org.springframework.webflow.engine.TransitionableState","java.lang.String","java.lang.String","boolean","java.util.Map"] }, 
    {"name":"createTransitionForState","parameterTypes":["org.springframework.webflow.engine.TransitionableState","java.lang.String","java.lang.String","boolean","java.util.Map","org.springframework.webflow.execution.Action[]"] }, 
    {"name":"createTransitionForState","parameterTypes":["org.springframework.webflow.engine.TransitionableState","java.lang.String","java.lang.String","org.springframework.webflow.execution.Action[]"] }, 
    {"name":"createTransitionsForState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.util.Map"] }, 
    {"name":"createViewState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.lang.String"] }, 
    {"name":"createViewState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.lang.String","org.springframework.webflow.engine.builder.BinderConfiguration"] }, 
    {"name":"createViewState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","org.springframework.binding.expression.Expression","org.springframework.webflow.engine.builder.BinderConfiguration"] }, 
    {"name":"createViewState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","org.springframework.webflow.execution.ViewFactory"] }, 
    {"name":"getApplicationContext","parameterTypes":[] }, 
    {"name":"getCasProperties","parameterTypes":[] }, 
    {"name":"getExpressionStringFromAction","parameterTypes":["org.springframework.webflow.action.EvaluateAction"] }, 
    {"name":"getFlow","parameterTypes":["java.lang.String"] }, 
    {"name":"getFlow","parameterTypes":["org.springframework.webflow.definition.registry.FlowDefinitionRegistry","java.lang.String"] }, 
    {"name":"getFlowBuilderServices","parameterTypes":[] }, 
    {"name":"getLoginFlow","parameterTypes":[] }, 
    {"name":"getLogoutFlow","parameterTypes":[] }, 
    {"name":"getLogoutFlowDefinitionRegistry","parameterTypes":[] }, 
    {"name":"getMainFlowDefinitionRegistry","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getSpringExpressionParser","parameterTypes":[] }, 
    {"name":"getStartState","parameterTypes":["org.springframework.webflow.engine.Flow"] }, 
    {"name":"getState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String"] }, 
    {"name":"getState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.lang.Class"] }, 
    {"name":"getTransitionExecutionCriteriaChainForTransition","parameterTypes":["org.springframework.webflow.engine.Transition"] }, 
    {"name":"getTransitionableState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String"] }, 
    {"name":"getTransitionableState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.lang.Class"] }, 
    {"name":"getViewStateBinderConfiguration","parameterTypes":["org.springframework.webflow.engine.ViewState"] }, 
    {"name":"initialize","parameterTypes":[] }, 
    {"name":"prependActionsToActionStateExecutionList","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String","java.lang.String[]"] }, 
    {"name":"prependActionsToActionStateExecutionList","parameterTypes":["org.springframework.webflow.engine.Flow","org.springframework.webflow.engine.ActionState","org.springframework.webflow.action.EvaluateAction[]"] }, 
    {"name":"setLogoutFlowDefinitionRegistry","parameterTypes":["org.springframework.webflow.definition.registry.FlowDefinitionRegistry"] }, 
    {"name":"setName","parameterTypes":["java.lang.String"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"setStartState","parameterTypes":["org.springframework.webflow.engine.Flow","java.lang.String"] }, 
    {"name":"setStartState","parameterTypes":["org.springframework.webflow.engine.Flow","org.springframework.webflow.engine.TransitionableState"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.configurer.CasMultifactorWebflowConfigurer"}
,
{
  "name":"org.apereo.cas.web.flow.configurer.DefaultLoginWebflowConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.configurer.DefaultLogoutWebflowConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.configurer.GroovyWebflowConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.configurer.plan.DefaultCasWebflowExecutionPlan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"execute","parameterTypes":[] }, 
    {"name":"getWebflowConfigurers","parameterTypes":[] }, 
    {"name":"getWebflowInterceptors","parameterTypes":[] }, 
    {"name":"getWebflowLoginContextProviders","parameterTypes":[] }, 
    {"name":"registerWebflowConfigurer","parameterTypes":["org.apereo.cas.web.flow.CasWebflowConfigurer"] }, 
    {"name":"registerWebflowInterceptor","parameterTypes":["org.springframework.web.servlet.HandlerInterceptor"] }, 
    {"name":"registerWebflowLoginContextProvider","parameterTypes":["org.apereo.cas.web.flow.CasWebflowLoginContextProvider"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.decorator.WebflowDecorator"}
,
{
  "name":"org.apereo.cas.web.flow.executor.Transcoder"}
,
{
  "name":"org.apereo.cas.web.flow.login.CreateTicketGrantingTicketAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.login.GenericSuccessViewAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.login.InitialAuthenticationRequestValidationAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.login.InitialFlowSetupAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.login.InitializeLoginAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.login.RedirectUnauthorizedServiceUrlAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.login.RenderLoginAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.login.SendTicketGrantingTicketAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.login.ServiceWarningAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.login.SetServiceUnauthorizedRedirectUrlAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.login.TicketGrantingTicketCheckAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.login.VerifyRequiredServiceAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.logout.AbstractLogoutAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"doExecute","parameterTypes":["org.springframework.webflow.execution.RequestContext"] }]}
,
{
  "name":"org.apereo.cas.web.flow.logout.ConfirmLogoutAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.logout.FinishLogoutAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.logout.FrontChannelLogoutAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.logout.LogoutAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.logout.LogoutViewSetupAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.logout.TerminateSessionAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.resolver.CasDelegatingWebflowEventResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.resolver.CasWebflowEventResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.resolver.impl.AbstractCasMultifactorAuthenticationWebflowEventResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.flow.resolver.impl.AbstractCasWebflowEventResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getConfigurationContext","parameterTypes":[] }, 
    {"name":"resolve","parameterTypes":["org.springframework.webflow.execution.RequestContext"] }, 
    {"name":"resolveSingle","parameterTypes":["org.springframework.webflow.execution.RequestContext"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"toString","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.web.flow.resolver.impl.CasWebflowEventResolutionConfigurationContext$CasWebflowEventResolutionConfigurationContextBuilder"}
,
{
  "name":"org.apereo.cas.web.flow.resolver.impl.DefaultCasDelegatingWebflowEventResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addDelegate","parameterTypes":["org.apereo.cas.web.flow.resolver.CasWebflowEventResolver"] }, 
    {"name":"addDelegate","parameterTypes":["org.apereo.cas.web.flow.resolver.CasWebflowEventResolver","int"] }, 
    {"name":"resolveInternal","parameterTypes":["org.springframework.webflow.execution.RequestContext"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.resolver.impl.RankedMultifactorAuthenticationProviderWebflowEventResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addDelegate","parameterTypes":["org.apereo.cas.web.flow.resolver.CasWebflowEventResolver"] }, 
    {"name":"addDelegate","parameterTypes":["org.apereo.cas.web.flow.resolver.CasWebflowEventResolver","int"] }, 
    {"name":"resolveInternal","parameterTypes":["org.springframework.webflow.execution.RequestContext"] }, 
    {"name":"resolveSingle","parameterTypes":["org.springframework.webflow.execution.RequestContext"] }
  ]}
,
{
  "name":"org.apereo.cas.web.flow.resolver.impl.SelectiveMultifactorAuthenticationProviderWebflowEventResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"resolveInternal","parameterTypes":["org.springframework.webflow.execution.RequestContext"] }]}
,
{
  "name":"org.apereo.cas.web.flow.resolver.impl.ServiceTicketRequestWebflowEventResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"resolveInternal","parameterTypes":["org.springframework.webflow.execution.RequestContext"] }]}
,
{
  "name":"org.apereo.cas.web.flow.resolver.impl.mfa.DefaultMultifactorAuthenticationProviderWebflowEventResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"resolveInternal","parameterTypes":["org.springframework.webflow.execution.RequestContext"] }, 
    {"name":"resolveSingle","parameterTypes":["org.springframework.webflow.execution.RequestContext"] }
  ]}
,
{
  "name":"org.apereo.cas.web.security.CasWebSecurityConfigurerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.security.CasWebSecurityExpressionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.security.CasWebSecurityJdbcConfigurerAdapter"}
,
{
  "name":"org.apereo.cas.web.security.flow.PopulateSpringSecurityContextAction",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.support.AbstractArgumentExtractor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"extractService","parameterTypes":["javax.servlet.http.HttpServletRequest"] }, 
    {"name":"getServiceFactories","parameterTypes":[] }, 
    {"name":"getServiceFactory","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.cas.web.support.ArgumentExtractor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.support.AuthenticationCredentialsThreadLocalBinderClearingFilter",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.web.support.CasLocaleChangeInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"preHandle","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object"] }]}
,
{
  "name":"org.apereo.cas.web.support.DefaultArgumentExtractor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.support.ThrottledSubmissionsStore"}
,
{
  "name":"org.apereo.cas.web.support.filters.AbstractSecurityFilter",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.web.support.filters.AddResponseHeadersFilter",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.web.support.filters.RequestParameterPolicyEnforcementFilter",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.web.support.filters.ResponseHeadersEnforcementFilter",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.cas.web.support.gen.CookieRetrievingCookieGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addCookie","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.String"] }, 
    {"name":"addCookie","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","boolean","java.lang.String"] }, 
    {"name":"isRememberMeAuthentication","parameterTypes":["org.springframework.webflow.execution.RequestContext"] }, 
    {"name":"removeAll","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse"] }, 
    {"name":"retrieveCookieValue","parameterTypes":["javax.servlet.http.HttpServletRequest"] }, 
    {"name":"setCookieDomain","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.apereo.cas.web.support.gen.TicketGrantingCookieRetrievingCookieGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.support.gen.WarningCookieRetrievingCookieGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.support.mgmr.DefaultCasCookieValueManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.support.mgmr.EncryptedCookieValueManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"buildCookieValue","parameterTypes":["java.lang.String","javax.servlet.http.HttpServletRequest"] }, 
    {"name":"obtainCookieValue","parameterTypes":["java.lang.String","javax.servlet.http.HttpServletRequest"] }
  ]}
,
{
  "name":"org.apereo.cas.web.v1.LegacyValidateController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.v2.ProxyController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"canHandle","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse"] }]}
,
{
  "name":"org.apereo.cas.web.v2.ProxyValidateController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"handleRequestInternal","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse"] }]}
,
{
  "name":"org.apereo.cas.web.v2.ServiceValidateController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"handleRequestInternal","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse"] }]}
,
{
  "name":"org.apereo.cas.web.v3.V3ProxyValidateController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.v3.V3ServiceValidateController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.view.Cas10ResponseView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.view.Cas20ResponseView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.view.Cas30ResponseView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.view.CasProtocolThymeleafViewFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"create","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","java.lang.String","java.lang.String"] }]}
,
{
  "name":"org.apereo.cas.web.view.CasProtocolView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"toString","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.web.view.CasReloadableMessageBundle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"setBasenames","parameterTypes":["java.lang.String[]"] }]}
,
{
  "name":"org.apereo.cas.web.view.ChainingTemplateViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.cas.web.view.attributes.DefaultCas30ProtocolAttributesRenderer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"render","parameterTypes":["java.util.Map"] }]}
,
{
  "name":"org.apereo.cas.web.view.attributes.NoOpProtocolAttributesRenderer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"render","parameterTypes":["java.util.Map"] }]}
,
{
  "name":"org.apereo.cas.web.view.json.Cas30JsonResponseView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"toString","parameterTypes":[] }]}
,
{
  "name":"org.apereo.cas.web.view.json.CasJsonServiceResponseAuthenticationFailure"}
,
{
  "name":"org.apereo.cas.web.view.json.CasJsonServiceResponseAuthenticationSuccess"}
,
{
  "name":"org.apereo.inspektr.audit.AuditActionContext"}
,
{
  "name":"org.apereo.inspektr.audit.AuditTrailManagementAspect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.inspektr.audit.AuditTrailManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.inspektr.audit.AuditTrailManager$AuditFormats"}
,
{
  "name":"org.apereo.inspektr.audit.FilterAndDelegateAuditTrailManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getAuditRecordsSince","parameterTypes":["java.time.LocalDate"] }, 
    {"name":"record","parameterTypes":["org.apereo.inspektr.audit.AuditActionContext"] }, 
    {"name":"removeAll","parameterTypes":[] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, 
    {"name":"setAuditFormat","parameterTypes":["org.apereo.inspektr.audit.AuditTrailManager$AuditFormats"] }
  ]}
,
{
  "name":"org.apereo.inspektr.audit.annotation.Audit",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.inspektr.audit.annotation.Audits"}
,
{
  "name":"org.apereo.inspektr.audit.spi.AuditActionResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.inspektr.audit.spi.AuditResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.inspektr.audit.spi.support.AbstractAuditResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Exception"] }, 
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Object"] }, 
    {"name":"setAuditFormat","parameterTypes":["org.apereo.inspektr.audit.AuditTrailManager$AuditFormats"] }, 
    {"name":"setResourcePostProcessor","parameterTypes":["java.util.function.Function"] }
  ]}
,
{
  "name":"org.apereo.inspektr.audit.spi.support.AbstractSuffixAwareAuditActionResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.inspektr.audit.spi.support.BooleanAuditActionResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Exception","org.apereo.inspektr.audit.annotation.Audit"] }, 
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Object","org.apereo.inspektr.audit.annotation.Audit"] }
  ]}
,
{
  "name":"org.apereo.inspektr.audit.spi.support.DefaultAuditActionResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Exception","org.apereo.inspektr.audit.annotation.Audit"] }, 
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Object","org.apereo.inspektr.audit.annotation.Audit"] }
  ]}
,
{
  "name":"org.apereo.inspektr.audit.spi.support.MessageBundleAwareResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Exception"] }]}
,
{
  "name":"org.apereo.inspektr.audit.spi.support.NullableReturnValueAuditResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Exception"] }, 
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Object"] }, 
    {"name":"setAuditFormat","parameterTypes":["org.apereo.inspektr.audit.AuditTrailManager$AuditFormats"] }
  ]}
,
{
  "name":"org.apereo.inspektr.audit.spi.support.ObjectCreationAuditActionResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Exception","org.apereo.inspektr.audit.annotation.Audit"] }, 
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Object","org.apereo.inspektr.audit.annotation.Audit"] }
  ]}
,
{
  "name":"org.apereo.inspektr.audit.spi.support.ParametersAsStringResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"toResourceString","parameterTypes":["java.lang.Object"] }]}
,
{
  "name":"org.apereo.inspektr.audit.spi.support.ReturnValueAsStringResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Exception"] }, 
    {"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Object"] }, 
    {"name":"setAuditFormat","parameterTypes":["org.apereo.inspektr.audit.AuditTrailManager$AuditFormats"] }, 
    {"name":"setResourcePostProcessor","parameterTypes":["java.util.function.Function"] }, 
    {"name":"toResourceString","parameterTypes":["java.lang.Object"] }
  ]}
,
{
  "name":"org.apereo.inspektr.audit.spi.support.ShortenedReturnValueAsStringAuditResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"resolveFrom","parameterTypes":["org.aspectj.lang.JoinPoint","java.lang.Object"] }]}
,
{
  "name":"org.apereo.inspektr.common.Cleanable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.inspektr.common.spi.PrincipalResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.inspektr.common.web.ClientInfo"}
,
{
  "name":"org.apereo.inspektr.common.web.ClientInfoThreadLocalFilter",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.apereo.services.persondir.IPersonAttributeDao",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.services.persondir.IPersonAttributeDaoFilter"}
,
{
  "name":"org.apereo.services.persondir.IPersonAttributes"}
,
{
  "name":"org.apereo.services.persondir.support.AbstractAggregatingDefaultQueryPersonAttributeDao",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getAvailableQueryAttributes","parameterTypes":["org.apereo.services.persondir.IPersonAttributeDaoFilter"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"getMerger","parameterTypes":[] }, 
    {"name":"getPeopleWithMultivaluedAttributes","parameterTypes":["java.util.Map","org.apereo.services.persondir.IPersonAttributeDaoFilter"] }, 
    {"name":"getPersonAttributeDaos","parameterTypes":[] }, 
    {"name":"getPossibleUserAttributeNames","parameterTypes":["org.apereo.services.persondir.IPersonAttributeDaoFilter"] }, 
    {"name":"isRecoverExceptions","parameterTypes":[] }, 
    {"name":"isRequireAll","parameterTypes":[] }, 
    {"name":"isStopOnSuccess","parameterTypes":[] }, 
    {"name":"setMerger","parameterTypes":["org.apereo.services.persondir.support.merger.IAttributeMerger"] }, 
    {"name":"setPersonAttributeDaos","parameterTypes":["java.util.List"] }, 
    {"name":"setRecoverExceptions","parameterTypes":["boolean"] }, 
    {"name":"setRequireAll","parameterTypes":["boolean"] }, 
    {"name":"setStopOnSuccess","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.apereo.services.persondir.support.AbstractDefaultAttributePersonAttributeDao",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getPerson","parameterTypes":["java.lang.String","org.apereo.services.persondir.IPersonAttributeDaoFilter"] }, 
    {"name":"getUsernameAttributeProvider","parameterTypes":[] }, 
    {"name":"setUsernameAttributeProvider","parameterTypes":["org.apereo.services.persondir.support.IUsernameAttributeProvider"] }
  ]}
,
{
  "name":"org.apereo.services.persondir.support.AbstractFlatteningPersonAttributeDao",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getPeople","parameterTypes":["java.util.Map","org.apereo.services.persondir.IPersonAttributeDaoFilter"] }]}
,
{
  "name":"org.apereo.services.persondir.support.BaseGroovyScriptDaoImpl"}
,
{
  "name":"org.apereo.services.persondir.support.BasePersonAttributeDao",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"compareTo","parameterTypes":["java.lang.Object"] }, 
    {"name":"compareTo","parameterTypes":["org.apereo.services.persondir.IPersonAttributeDao"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getTags","parameterTypes":[] }, 
    {"name":"isEnabled","parameterTypes":[] }, 
    {"name":"putTag","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"setEnabled","parameterTypes":["boolean"] }, 
    {"name":"setId","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"setTags","parameterTypes":["java.util.Map"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.apereo.services.persondir.support.CachingPersonAttributeDaoImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getAvailableQueryAttributes","parameterTypes":["org.apereo.services.persondir.IPersonAttributeDaoFilter"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"getPeopleWithMultivaluedAttributes","parameterTypes":["java.util.Map","org.apereo.services.persondir.IPersonAttributeDaoFilter"] }, 
    {"name":"getPossibleUserAttributeNames","parameterTypes":["org.apereo.services.persondir.IPersonAttributeDaoFilter"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.apereo.services.persondir.support.IUsernameAttributeProvider"}
,
{
  "name":"org.apereo.services.persondir.support.MergingPersonAttributeDaoImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.apereo.services.persondir.support.merger.BaseAdditiveAttributeMerger"}
,
{
  "name":"org.apereo.services.persondir.support.merger.IAttributeMerger"}
,
{
  "name":"org.aspectj.lang.JoinPoint"}
,
{
  "name":"org.aspectj.lang.annotation.Around",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"argNames","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.aspectj.lang.annotation.Aspect",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.aspectj.weaver.Advice"}
,
{
  "name":"org.aspectj.weaver.reflect.Java15AnnotationFinder",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.aspectj.weaver.reflect.Java15GenericSignatureInformationProvider",
  "methods":[{"name":"<init>","parameterTypes":["org.aspectj.weaver.World"] }]}
,
{
  "name":"org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.aspectj.weaver.tools.Jdk14TraceFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.COMPOSITE$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.EdEC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.GM$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.Blake2s$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.DSTU7564$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.Haraka$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.Keccak$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.drbg.DRBG$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ARIA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DSTU7624$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.GOST3412_2015$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SCRYPT$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SipHash128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Zuc$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.ast.ASTNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.codehaus.groovy.ast.AnnotatedNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.codehaus.groovy.ast.AnnotationNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.codehaus.groovy.ast.ClassNode"] }, 
    {"name":"getClassNode","parameterTypes":[] }
  ]}
,
{
  "name":"org.codehaus.groovy.ast.AnnotationNode$addMember",
  "methods":[{"name":"<init>","parameterTypes":["org.codehaus.groovy.runtime.callsite.CallSite","groovy.lang.MetaClassImpl","groovy.lang.MetaMethod","java.lang.Class[]","java.lang.reflect.Constructor"] }]}
,
{
  "name":"org.codehaus.groovy.ast.ClassHelper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.codehaus.groovy.ast.ClassHelper$make",
  "methods":[{"name":"<init>","parameterTypes":["org.codehaus.groovy.runtime.callsite.CallSite","groovy.lang.MetaClassImpl","groovy.lang.MetaMethod","java.lang.Class[]","java.lang.reflect.Constructor"] }]}
,
{
  "name":"org.codehaus.groovy.ast.ClassNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getMethod","parameterTypes":["java.lang.String","org.codehaus.groovy.ast.Parameter[]"] }]}
,
{
  "name":"org.codehaus.groovy.ast.MethodNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.codehaus.groovy.ast.NodeMetaDataHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.codehaus.groovy.ast.Variable",
  "queryAllPublicMethods":true}
,
{
  "name":"org.codehaus.groovy.ast.expr.Expression",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.codehaus.groovy.ast.tools.GeneralUtils",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.codehaus.groovy.ast.tools.GeneralUtils$constX",
  "methods":[{"name":"<init>","parameterTypes":["org.codehaus.groovy.runtime.callsite.CallSite","groovy.lang.MetaClassImpl","groovy.lang.MetaMethod","java.lang.Class[]","java.lang.reflect.Constructor"] }]}
,
{
  "name":"org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.codehaus.groovy.control.CompilationUnit$PhaseOperation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.codehaus.groovy.control.ProcessingUnit",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.codehaus.groovy.control.customizers.ASTTransformationCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"findASTTransformationClass","parameterTypes":["java.lang.Class","java.lang.ClassLoader"] }, 
    {"name":"findPhase","parameterTypes":["java.lang.Class","java.lang.ClassLoader"] }, 
    {"name":"findPhase","parameterTypes":["org.codehaus.groovy.transform.ASTTransformation"] }, 
    {"name":"setAnnotationParameters","parameterTypes":["java.util.Map"] }
  ]}
,
{
  "name":"org.codehaus.groovy.control.customizers.ASTTransformationCustomizer$_setAnnotationParameters_closure1",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"doCall","parameterTypes":["java.lang.Object","java.lang.Object"] }]}
,
{
  "name":"org.codehaus.groovy.control.customizers.CompilationCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.codehaus.groovy.jsr223.ScriptExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.codehaus.groovy.jsr223.ScriptStaticExtensions",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.codehaus.groovy.runtime.DefaultGroovyStaticMethods",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.codehaus.groovy.runtime.GStringImpl"}
,
{
  "name":"org.codehaus.groovy.runtime.GeneratedClosure",
  "queryAllPublicMethods":true}
,
{
  "name":"org.codehaus.groovy.runtime.callsite.CallSite",
  "queryAllPublicMethods":true}
,
{
  "name":"org.codehaus.groovy.runtime.callsite.CallSiteArray"}
,
{
  "name":"org.codehaus.groovy.runtime.dgm$1241",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","org.codehaus.groovy.reflection.CachedClass","java.lang.Class","java.lang.Class[]"] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgm$203",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","org.codehaus.groovy.reflection.CachedClass","java.lang.Class","java.lang.Class[]"] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgm$24",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","org.codehaus.groovy.reflection.CachedClass","java.lang.Class","java.lang.Class[]"] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgm$32",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","org.codehaus.groovy.reflection.CachedClass","java.lang.Class","java.lang.Class[]"] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgm$547",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","org.codehaus.groovy.reflection.CachedClass","java.lang.Class","java.lang.Class[]"] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgm$563",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","org.codehaus.groovy.reflection.CachedClass","java.lang.Class","java.lang.Class[]"] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.BooleanArrayGetAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.BooleanArrayPutAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.ByteArrayGetAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.ByteArrayPutAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.CharacterArrayGetAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.CharacterArrayPutAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.DoubleArrayGetAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.DoubleArrayPutAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.FloatArrayGetAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.FloatArrayPutAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.IntegerArrayGetAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.IntegerArrayPutAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.LongArrayGetAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.LongArrayPutAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.ObjectArrayGetAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.ObjectArrayPutAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.ShortArrayGetAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.runtime.dgmimpl.arrays.ShortArrayPutAtMetaMethod",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.transform.ASTTransformation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.codehaus.groovy.transform.GroovyASTTransformation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.codehaus.groovy.transform.GroovyASTTransformation$phase",
  "methods":[{"name":"<init>","parameterTypes":["org.codehaus.groovy.runtime.callsite.CallSite","groovy.lang.MetaClassImpl","groovy.lang.MetaMethod","java.lang.Class[]","java.lang.reflect.Constructor"] }]}
,
{
  "name":"org.codehaus.groovy.transform.GroovyASTTransformationClass",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"classes","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.codehaus.groovy.transform.GroovyASTTransformationClass$classes",
  "methods":[{"name":"<init>","parameterTypes":["org.codehaus.groovy.runtime.callsite.CallSite","groovy.lang.MetaClassImpl","groovy.lang.MetaMethod","java.lang.Class[]","java.lang.reflect.Constructor"] }]}
,
{
  "name":"org.codehaus.groovy.transform.GroovyASTTransformationClass$value$0",
  "methods":[{"name":"<init>","parameterTypes":["org.codehaus.groovy.runtime.callsite.CallSite","groovy.lang.MetaClassImpl","groovy.lang.MetaMethod","java.lang.Class[]","java.lang.reflect.Constructor"] }]}
,
{
  "name":"org.codehaus.groovy.transform.StaticTypesTransformation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.codehaus.groovy.transform.sc.StaticCompileTransformation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.codehaus.groovy.vmplugin.v8.PluginDefaultGroovyMethods",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.codehaus.groovy.vmplugin.v9.Java9",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.cryptacular.bean.CipherBean"}
,
{
  "name":"org.graalvm.nativeimage.ImageInfo",
  "methods":[{"name":"inImageCode","parameterTypes":[] }]}
,
{
  "name":"org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
  "methods":[{"name":"externalClassLoader","parameterTypes":["java.lang.ClassLoader"] }]}
,
{
  "name":"org.hibernate.validator.internal.engine.ConfigurationImpl"}
,
{
  "name":"org.hibernate.validator.internal.engine.resolver.JPATraversableResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]}
,
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle",
  "fields":[{"name":"INSTANCE"}]}
,
{
  "name":"org.jasig.cas.client.validation.TicketValidator"}
,
{
  "name":"org.joda.time.ReadableInstant"}
,
{
  "name":"org.joda.time.YearMonth"}
,
{
  "name":"org.ldaptive.auth.DnResolver"}
,
{
  "name":"org.ldaptive.auth.EntryResolver"}
,
{
  "name":"org.pac4j.core.authorization.generator.AuthorizationGenerator"}
,
{
  "name":"org.pac4j.core.context.session.JEESessionStore"}
,
{
  "name":"org.pac4j.core.context.session.SessionStore"}
,
{
  "name":"org.quartz.JobDetail"}
,
{
  "name":"org.quartz.JobListener"}
,
{
  "name":"org.quartz.Scheduler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.quartz.SchedulerException"}
,
{
  "name":"org.quartz.SchedulerFactory"}
,
{
  "name":"org.quartz.SchedulerListener"}
,
{
  "name":"org.quartz.Trigger"}
,
{
  "name":"org.quartz.TriggerListener"}
,
{
  "name":"org.quartz.impl.StdScheduler",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"addCalendar","parameterTypes":["java.lang.String","org.quartz.Calendar","boolean","boolean"] }, 
    {"name":"addJob","parameterTypes":["org.quartz.JobDetail","boolean"] }, 
    {"name":"addJob","parameterTypes":["org.quartz.JobDetail","boolean","boolean"] }, 
    {"name":"checkExists","parameterTypes":["org.quartz.JobKey"] }, 
    {"name":"checkExists","parameterTypes":["org.quartz.TriggerKey"] }, 
    {"name":"clear","parameterTypes":[] }, 
    {"name":"deleteCalendar","parameterTypes":["java.lang.String"] }, 
    {"name":"deleteJob","parameterTypes":["org.quartz.JobKey"] }, 
    {"name":"deleteJobs","parameterTypes":["java.util.List"] }, 
    {"name":"getCalendar","parameterTypes":["java.lang.String"] }, 
    {"name":"getCalendarNames","parameterTypes":[] }, 
    {"name":"getContext","parameterTypes":[] }, 
    {"name":"getCurrentlyExecutingJobs","parameterTypes":[] }, 
    {"name":"getJobDetail","parameterTypes":["org.quartz.JobKey"] }, 
    {"name":"getJobGroupNames","parameterTypes":[] }, 
    {"name":"getJobKeys","parameterTypes":["org.quartz.impl.matchers.GroupMatcher"] }, 
    {"name":"getListenerManager","parameterTypes":[] }, 
    {"name":"getMetaData","parameterTypes":[] }, 
    {"name":"getPausedTriggerGroups","parameterTypes":[] }, 
    {"name":"getSchedulerInstanceId","parameterTypes":[] }, 
    {"name":"getSchedulerName","parameterTypes":[] }, 
    {"name":"getTrigger","parameterTypes":["org.quartz.TriggerKey"] }, 
    {"name":"getTriggerGroupNames","parameterTypes":[] }, 
    {"name":"getTriggerKeys","parameterTypes":["org.quartz.impl.matchers.GroupMatcher"] }, 
    {"name":"getTriggerState","parameterTypes":["org.quartz.TriggerKey"] }, 
    {"name":"getTriggersOfJob","parameterTypes":["org.quartz.JobKey"] }, 
    {"name":"interrupt","parameterTypes":["java.lang.String"] }, 
    {"name":"interrupt","parameterTypes":["org.quartz.JobKey"] }, 
    {"name":"isInStandbyMode","parameterTypes":[] }, 
    {"name":"isShutdown","parameterTypes":[] }, 
    {"name":"isStarted","parameterTypes":[] }, 
    {"name":"pauseAll","parameterTypes":[] }, 
    {"name":"pauseJob","parameterTypes":["org.quartz.JobKey"] }, 
    {"name":"pauseJobs","parameterTypes":["org.quartz.impl.matchers.GroupMatcher"] }, 
    {"name":"pauseTrigger","parameterTypes":["org.quartz.TriggerKey"] }, 
    {"name":"pauseTriggers","parameterTypes":["org.quartz.impl.matchers.GroupMatcher"] }, 
    {"name":"rescheduleJob","parameterTypes":["org.quartz.TriggerKey","org.quartz.Trigger"] }, 
    {"name":"resetTriggerFromErrorState","parameterTypes":["org.quartz.TriggerKey"] }, 
    {"name":"resumeAll","parameterTypes":[] }, 
    {"name":"resumeJob","parameterTypes":["org.quartz.JobKey"] }, 
    {"name":"resumeJobs","parameterTypes":["org.quartz.impl.matchers.GroupMatcher"] }, 
    {"name":"resumeTrigger","parameterTypes":["org.quartz.TriggerKey"] }, 
    {"name":"resumeTriggers","parameterTypes":["org.quartz.impl.matchers.GroupMatcher"] }, 
    {"name":"scheduleJob","parameterTypes":["org.quartz.JobDetail","java.util.Set","boolean"] }, 
    {"name":"scheduleJob","parameterTypes":["org.quartz.JobDetail","org.quartz.Trigger"] }, 
    {"name":"scheduleJob","parameterTypes":["org.quartz.Trigger"] }, 
    {"name":"scheduleJobs","parameterTypes":["java.util.Map","boolean"] }, 
    {"name":"setJobFactory","parameterTypes":["org.quartz.spi.JobFactory"] }, 
    {"name":"shutdown","parameterTypes":[] }, 
    {"name":"shutdown","parameterTypes":["boolean"] }, 
    {"name":"standby","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"startDelayed","parameterTypes":["int"] }, 
    {"name":"triggerJob","parameterTypes":["org.quartz.JobKey"] }, 
    {"name":"triggerJob","parameterTypes":["org.quartz.JobKey","org.quartz.JobDataMap"] }, 
    {"name":"unscheduleJob","parameterTypes":["org.quartz.TriggerKey"] }, 
    {"name":"unscheduleJobs","parameterTypes":["java.util.List"] }
  ]}
,
{
  "name":"org.quartz.impl.StdSchedulerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.quartz.simpl.RAMJobStore",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setInstanceId","parameterTypes":["java.lang.String"] }, 
    {"name":"setInstanceName","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.quartz.simpl.SimpleThreadPool",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setInstanceId","parameterTypes":["java.lang.String"] }, 
    {"name":"setInstanceName","parameterTypes":["java.lang.String"] }, 
    {"name":"setThreadCount","parameterTypes":["int"] }
  ]}
,
{
  "name":"org.quartz.spi.JobFactory"}
,
{
  "name":"org.reactivestreams.Publisher"}
,
{
  "name":"org.reactivestreams.Subscriber",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.reactivestreams.Subscription"}
,
{
  "name":"org.slf4j.LoggerFactory"}
,
{
  "name":"org.slf4j.bridge.SLF4JBridgeHandler"}
,
{
  "name":"org.slf4j.spi.LocationAwareLogger",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"log","parameterTypes":["org.slf4j.Marker","java.lang.String","int","java.lang.String","java.lang.Object[]","java.lang.Throwable"] }]}
,
{
  "name":"org.springframework.aop.Advisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.aop.IntroductionAdvisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.aop.IntroductionInfo",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.aop.PointcutAdvisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.aop.SpringProxy",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.aop.TargetClassAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getTargetClass","parameterTypes":[] }]}
,
{
  "name":"org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"setBeforeExistingAdvisors","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.aop.framework.Advised",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getTargetSource","parameterTypes":[] }, 
    {"name":"isFrozen","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.aop.framework.AopInfrastructureBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.aop.framework.ProxyConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"setProxyTargetClass","parameterTypes":["boolean"] }]}
,
{
  "name":"org.springframework.aop.framework.ProxyProcessorSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"setOrder","parameterTypes":["int"] }]}
,
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]}
,
{
  "name":"org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"getAdvice","parameterTypes":[] }, 
    {"name":"getAdviceBeanName","parameterTypes":[] }, 
    {"name":"setAdvice","parameterTypes":["org.aopalliance.aop.Advice"] }, 
    {"name":"setAdviceBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.aop.support.AbstractPointcutAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"setOrder","parameterTypes":["int"] }]}
,
{
  "name":"org.springframework.aot.StaticSpringFactories"}
,
{
  "name":"org.springframework.beans.BeanWrapper"}
,
{
  "name":"org.springframework.beans.BeansException"}
,
{
  "name":"org.springframework.beans.ExtendedBeanInfoFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.beans.factory.Aware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.beans.factory.BeanClassLoaderAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.beans.factory.BeanFactory",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.beans.factory.BeanFactoryAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.beans.factory.BeanNameAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.beans.factory.DisposableBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.beans.factory.FactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.beans.factory.InitializingBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.beans.factory.ListableBeanFactory"}
,
{
  "name":"org.springframework.beans.factory.NoSuchBeanDefinitionException"}
,
{
  "name":"org.springframework.beans.factory.ObjectFactory"}
,
{
  "name":"org.springframework.beans.factory.ObjectProvider"}
,
{
  "name":"org.springframework.beans.factory.SmartInitializingSingleton",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.beans.factory.annotation.Autowired",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"required","parameterTypes":[] }]}
,
{
  "name":"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.beans.factory.annotation.Qualifier",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.beans.factory.annotation.Required",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.beans.factory.annotation.Value",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.beans.factory.config.AbstractFactoryBean"}
,
{
  "name":"org.springframework.beans.factory.config.AutowireCapableBeanFactory"}
,
{
  "name":"org.springframework.beans.factory.config.BeanDefinition"}
,
{
  "name":"org.springframework.beans.factory.config.BeanDefinitionCustomizer"}
,
{
  "name":"org.springframework.beans.factory.config.BeanExpressionContext",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getBeanFactory","parameterTypes":[] }]}
,
{
  "name":"org.springframework.beans.factory.config.BeanFactoryPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.beans.factory.config.BeanPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.beans.factory.config.ConfigurableBeanFactory"}
,
{
  "name":"org.springframework.beans.factory.config.ConfigurableListableBeanFactory"}
,
{
  "name":"org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.beans.factory.config.PropertiesFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getObject","parameterTypes":[] }, 
    {"name":"getObjectType","parameterTypes":[] }, 
    {"name":"isSingleton","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.beans.factory.config.SetFactoryBean"}
,
{
  "name":"org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.beans.factory.support.AbstractBeanDefinitionReader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionReader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistry"}
,
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.beans.factory.support.BeanNameGenerator",
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor",
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.beans.factory.support.NullBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
  "allPublicFields":true}
,
{
  "name":"org.springframework.binding.convert.ConversionException"}
,
{
  "name":"org.springframework.binding.convert.ConversionExecutionException"}
,
{
  "name":"org.springframework.binding.convert.ConversionExecutor"}
,
{
  "name":"org.springframework.binding.convert.ConversionExecutorNotFoundException"}
,
{
  "name":"org.springframework.binding.convert.ConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.binding.convert.converters.Converter"}
,
{
  "name":"org.springframework.binding.convert.service.DefaultConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.binding.convert.service.GenericConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addAlias","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"addConverter","parameterTypes":["java.lang.String","org.springframework.binding.convert.converters.Converter"] }, 
    {"name":"addConverter","parameterTypes":["org.springframework.binding.convert.converters.Converter"] }, 
    {"name":"executeConversion","parameterTypes":["java.lang.Object","java.lang.Class"] }, 
    {"name":"executeConversion","parameterTypes":["java.lang.String","java.lang.Object","java.lang.Class"] }, 
    {"name":"getClassForAlias","parameterTypes":["java.lang.String"] }, 
    {"name":"getConversionExecutor","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"getConversionExecutor","parameterTypes":["java.lang.String","java.lang.Class","java.lang.Class"] }, 
    {"name":"getDelegateConversionService","parameterTypes":[] }, 
    {"name":"getParent","parameterTypes":[] }, 
    {"name":"setParent","parameterTypes":["org.springframework.binding.convert.ConversionService"] }
  ]}
,
{
  "name":"org.springframework.binding.expression.Expression"}
,
{
  "name":"org.springframework.binding.expression.ExpressionParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.binding.expression.ExpressionVariable"}
,
{
  "name":"org.springframework.binding.expression.ParserContext"}
,
{
  "name":"org.springframework.binding.expression.ParserException"}
,
{
  "name":"org.springframework.binding.expression.spel.SpringELExpression"}
,
{
  "name":"org.springframework.binding.expression.spel.SpringELExpressionParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addPropertyAccessor","parameterTypes":["org.springframework.expression.PropertyAccessor"] }, 
    {"name":"getConversionService","parameterTypes":[] }, 
    {"name":"parseExpression","parameterTypes":["java.lang.String","org.springframework.binding.expression.ParserContext"] }
  ]}
,
{
  "name":"org.springframework.binding.expression.support.AbstractGetValueExpression"}
,
{
  "name":"org.springframework.binding.expression.support.FluentParserContext"}
,
{
  "name":"org.springframework.binding.mapping.Mapper"}
,
{
  "name":"org.springframework.binding.mapping.impl.DefaultMapping"}
,
{
  "name":"org.springframework.binding.message.MessageContext"}
,
{
  "name":"org.springframework.binding.message.MessageResolver"}
,
{
  "name":"org.springframework.boot.Banner"}
,
{
  "name":"org.springframework.boot.ClearCachesApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.LazyInitializationExcludeFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.SpringApplication",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"setAllowBeanDefinitionOverriding","parameterTypes":["boolean"] }, 
    {"name":"setLazyInitialization","parameterTypes":["boolean"] }, 
    {"name":"setWebApplicationType","parameterTypes":["org.springframework.boot.WebApplicationType"] }
  ]}
,
{
  "name":"org.springframework.boot.SpringBootConfiguration",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.WebApplicationType"}
,
{
  "name":"org.springframework.boot.actuate.audit.AuditEvent"}
,
{
  "name":"org.springframework.boot.actuate.audit.AuditEventRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.audit.AuditEventsEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.audit.InMemoryAuditEventRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"add","parameterTypes":["org.springframework.boot.actuate.audit.AuditEvent"] }, 
    {"name":"find","parameterTypes":["java.lang.String","java.time.Instant","java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.audit.listener.AbstractAuditListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.boot.actuate.audit.listener.AuditApplicationEvent"] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.audit.listener.AuditApplicationEvent"}
,
{
  "name":"org.springframework.boot.actuate.audit.listener.AuditListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"auditListener","parameterTypes":["org.springframework.boot.actuate.audit.AuditEventRepository"] }, 
    {"name":"authenticationAuditListener","parameterTypes":[] }, 
    {"name":"authorizationAuditListener","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"endpointCachingOperationInvokerAdvisor","parameterTypes":["org.springframework.core.env.Environment"] }, 
    {"name":"endpointOperationParameterMapper","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"endpoint","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"match","parameterTypes":["org.springframework.boot.actuate.endpoint.ExposableEndpoint"] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getRootPath","parameterTypes":["org.springframework.boot.actuate.endpoint.EndpointId"] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"servletExposeExcludePropertyEndpointFilter","parameterTypes":["org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"servletEndpointRegistrar","parameterTypes":["org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties","org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier","org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }, 
    {"name":"controllerEndpointDiscoverer","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"controllerExposeExcludePropertyEndpointFilter","parameterTypes":[] }, 
    {"name":"endpointMediaTypes","parameterTypes":[] }, 
    {"name":"pathMappedEndpoints","parameterTypes":["java.util.Collection"] }, 
    {"name":"webEndpointDiscoverer","parameterTypes":["org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper","org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"webEndpointPathMapper","parameterTypes":[] }, 
    {"name":"webExposeExcludePropertyEndpointFilter","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"servletEndpointDiscoverer","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getExposure","parameterTypes":[] }, 
    {"name":"setBasePath","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Discovery"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getInclude","parameterTypes":[] }, 
    {"name":"setInclude","parameterTypes":["java.util.Set"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"controllerEndpointHandlerMapping","parameterTypes":["org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier","org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties","org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }, 
    {"name":"webEndpointServletHandlerMapping","parameterTypes":["org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier","org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier","org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier","org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes","org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties","org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties","org.springframework.core.env.Environment"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"pingHealthContributor","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"fallback","parameterTypes":[] }],
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"buildInfoContributor","parameterTypes":["org.springframework.boot.info.BuildProperties"] }, 
    {"name":"envInfoContributor","parameterTypes":["org.springframework.core.env.ConfigurableEnvironment"] }, 
    {"name":"gitInfoContributor","parameterTypes":["org.springframework.boot.info.GitProperties","org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties"] }, 
    {"name":"javaInfoContributor","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorFallback"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setEnabled","parameterTypes":["boolean"] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"classLoaderMetrics","parameterTypes":[] }, 
    {"name":"jvmGcMetrics","parameterTypes":[] }, 
    {"name":"jvmHeapPressureMetrics","parameterTypes":[] }, 
    {"name":"jvmMemoryMetrics","parameterTypes":[] }, 
    {"name":"jvmThreadMetrics","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"logbackMetrics","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryConfigurer"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"meterRegistryPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.context.ApplicationContext"] }, 
    {"name":"micrometerClock","parameterTypes":[] }, 
    {"name":"propertiesMeterFilter","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getEnable","parameterTypes":[] }, 
    {"name":"getWeb","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getServer","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getRequest","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server$ServerRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getAutotime","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }, 
    {"name":"map","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"diskSpaceMetrics","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }, 
    {"name":"fileDescriptorMetrics","parameterTypes":[] }, 
    {"name":"processorMetrics","parameterTypes":[] }, 
    {"name":"uptimeMetrics","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }, 
    {"name":"metricsRepositoryMethodInvocationListener","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider"] }, 
    {"name":"metricsRepositoryMethodInvocationListenerBeanPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"repositoryTagsProvider","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"simpleConfig","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"] }, 
    {"name":"simpleMeterRegistry","parameterTypes":["io.micrometer.core.instrument.simple.SimpleConfig","io.micrometer.core.instrument.Clock"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimplePropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"get","parameterTypes":["java.lang.String"] }, 
    {"name":"mode","parameterTypes":[] }, 
    {"name":"prefix","parameterTypes":[] }, 
    {"name":"step","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"startupTimeMetrics","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"bindTaskExecutorsToRegistry","parameterTypes":["java.util.Map","io.micrometer.core.instrument.MeterRegistry"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"metricsHttpClientUriTagFilter","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"metricsRestTemplateCustomizer","parameterTypes":["io.micrometer.core.instrument.MeterRegistry","org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider","org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }, 
    {"name":"restTemplateExchangeTagsProvider","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.client.WebClientMetricsConfiguration"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }, 
    {"name":"metricsHttpServerUriTagFilter","parameterTypes":[] }, 
    {"name":"metricsWebMvcConfigurer","parameterTypes":["io.micrometer.core.instrument.MeterRegistry","org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider"] }, 
    {"name":"webMvcMetricsFilter","parameterTypes":["io.micrometer.core.instrument.MeterRegistry","org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider"] }, 
    {"name":"webMvcTagsProvider","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration$MetricsWebMvcConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"addInterceptors","parameterTypes":["org.springframework.web.servlet.config.annotation.InterceptorRegistry"] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"tomcatMetricsBinder","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.security.servlet.EndpointRequest$EndpointRequestMatcher"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration$MvcRequestMatcherConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"requestMatcherProvider","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }],
  "queriedMethods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"managementServletContext","parameterTypes":["org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }, 
    {"name":"servletWebChildContextFactory","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration$$Lambda$1219/0x000000084083dc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getServletPath","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration$$Lambda$1251/0x000000084088b440",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getServletPath","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration$$Lambda$1292/0x00000008408d0c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration$$Lambda$1297/0x0000000840900c40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration$$Lambda$1299/0x00000008408fe440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration$$Lambda$1304/0x00000008408fd840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration$$Lambda$1334/0x000000084090e040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"createManagementContext","parameterTypes":["org.springframework.context.ApplicationContext","java.lang.Class[]"] }]}
,
{
  "name":"org.springframework.boot.actuate.availability.LivenessStateHealthIndicator"}
,
{
  "name":"org.springframework.boot.actuate.availability.ReadinessStateHealthIndicator"}
,
{
  "name":"org.springframework.boot.actuate.beans.BeansEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.context.ShutdownEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointId"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointsSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.ExposableEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.Operation"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.OperationType"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationMethod"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Endpoint",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"id","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getEndpoints","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationParameter"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationParameters"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.ParameterMappingException"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"mapParameterValue","parameterTypes":["org.springframework.boot.actuate.endpoint.invoke.OperationParameter","java.lang.Object"] }]}
,
{
  "name":"org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"apply","parameterTypes":["org.springframework.boot.actuate.endpoint.EndpointId","org.springframework.boot.actuate.endpoint.OperationType","org.springframework.boot.actuate.endpoint.invoke.OperationParameters","org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"] }]}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.ExposableServletEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.ExposableWebEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMappedEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"iterator","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"onStartup","parameterTypes":["javax.servlet.ServletContext"] }]}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebOperation"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebOperationRequestPredicate"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ExposableControllerEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"id","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getEndpoints","parameterTypes":[] }, 
    {"name":"match","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler",
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$ServletWebOperation"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping"}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.health.AbstractHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"health","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.actuate.health.Health"}
,
{
  "name":"org.springframework.boot.actuate.health.Health$Builder"}
,
{
  "name":"org.springframework.boot.actuate.health.HealthContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.health.HealthEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroups"}
,
{
  "name":"org.springframework.boot.actuate.health.HealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.health.PingHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthIndicator"}
,
{
  "name":"org.springframework.boot.actuate.info.BuildInfoContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"contribute","parameterTypes":["org.springframework.boot.actuate.info.Info$Builder"] }]}
,
{
  "name":"org.springframework.boot.actuate.info.EnvironmentInfoContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"contribute","parameterTypes":["org.springframework.boot.actuate.info.Info$Builder"] }]}
,
{
  "name":"org.springframework.boot.actuate.info.GitInfoContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"contribute","parameterTypes":["org.springframework.boot.actuate.info.Info$Builder"] }]}
,
{
  "name":"org.springframework.boot.actuate.info.Info$Builder"}
,
{
  "name":"org.springframework.boot.actuate.info.InfoContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.info.InfoEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.info.InfoPropertiesInfoContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode"}
,
{
  "name":"org.springframework.boot.actuate.info.JavaInfoContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"contribute","parameterTypes":["org.springframework.boot.actuate.info.Info$Builder"] }]}
,
{
  "name":"org.springframework.boot.actuate.integration.IntegrationGraphEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.logging.LogFileWebEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.logging.LoggersEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.management.HeapDumpWebEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.management.ThreadDumpEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.metrics.MetricsEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider"}
,
{
  "name":"org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"repositoryTags","parameterTypes":["org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"] }]}
,
{
  "name":"org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterInvocation","parameterTypes":["org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"] }]}
,
{
  "name":"org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"supportsEventType","parameterTypes":["java.lang.Class"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]}
,
{
  "name":"org.springframework.boot.actuate.metrics.web.client.DefaultRestTemplateExchangeTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getTags","parameterTypes":["java.lang.String","org.springframework.http.HttpRequest","org.springframework.http.client.ClientHttpResponse"] }]}
,
{
  "name":"org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"customize","parameterTypes":["org.springframework.web.client.RestTemplate"] }]}
,
{
  "name":"org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getLongRequestTags","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.Object"] }, 
    {"name":"getTags","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object","java.lang.Throwable"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }
  ]}
,
{
  "name":"org.springframework.boot.actuate.quartz.QuartzEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.security.AbstractAuthenticationAuditListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }]}
,
{
  "name":"org.springframework.boot.actuate.security.AbstractAuthorizationAuditListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }]}
,
{
  "name":"org.springframework.boot.actuate.security.AuthenticationAuditListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]}
,
{
  "name":"org.springframework.boot.actuate.security.AuthenticationAuditListener$WebAuditListener"}
,
{
  "name":"org.springframework.boot.actuate.security.AuthorizationAuditListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]}
,
{
  "name":"org.springframework.boot.actuate.trace.http.HttpTraceEndpoint"}
,
{
  "name":"org.springframework.boot.actuate.trace.http.HttpTraceRepository"}
,
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingsEndpoint"}
,
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackage",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"basePackageClasses","parameterTypes":[] }, 
    {"name":"basePackages","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureAfter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureBefore",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureOrder",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.BackgroundPreinitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.EnableAutoConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"exclude","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.ImportAutoConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"classes","parameterTypes":[] }, 
    {"name":"exclude","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer$SharedMetadataReaderFactoryBean"}
,
{
  "name":"org.springframework.boot.autoconfigure.SpringBootApplication",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"exclude","parameterTypes":[] }, 
    {"name":"excludeName","parameterTypes":[] }, 
    {"name":"nameGenerator","parameterTypes":[] }, 
    {"name":"proxyBeanMethods","parameterTypes":[] }, 
    {"name":"scanBasePackageClasses","parameterTypes":[] }, 
    {"name":"scanBasePackages","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$JdkDynamicAutoProxyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"applicationAvailability","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"annotation","parameterTypes":[] }, 
    {"name":"parameterizedContainer","parameterTypes":[] }, 
    {"name":"search","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"name","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnJndi",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"annotation","parameterTypes":[] }, 
    {"name":"ignored","parameterTypes":[] }, 
    {"name":"ignoredType","parameterTypes":[] }, 
    {"name":"name","parameterTypes":[] }, 
    {"name":"parameterizedContainer","parameterTypes":[] }, 
    {"name":"search","parameterTypes":[] }, 
    {"name":"type","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"havingValue","parameterTypes":[] }, 
    {"name":"matchIfMissing","parameterTypes":[] }, 
    {"name":"name","parameterTypes":[] }, 
    {"name":"prefix","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"search","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"type","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.OnBeanCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.OnClassCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.OnJndiCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.OnResourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.SearchStrategy"}
,
{
  "name":"org.springframework.boot.autoconfigure.condition.SpringBootCondition"}
,
{
  "name":"org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultLifecycleProcessor","parameterTypes":["org.springframework.boot.autoconfigure.context.LifecycleProperties"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"messageSourceProperties","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.context.MessageSourceProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"propertySourcesPlaceholderConfigurer","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"persistenceExceptionTranslationPostProcessor","parameterTypes":["org.springframework.core.env.Environment"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"] }, 
    {"name":"pageableCustomizer","parameterTypes":[] }, 
    {"name":"sortCustomizer","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1107/0x00000008407d8040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"customize","parameterTypes":["org.springframework.data.web.SortHandlerMethodArgumentResolver"] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1109/0x00000008407df840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"customize","parameterTypes":["org.springframework.data.web.PageableHandlerMethodArgumentResolver"] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1139/0x000000084082e840",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"customize","parameterTypes":["org.springframework.data.web.SortHandlerMethodArgumentResolver"] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1141/0x000000084082e040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"customize","parameterTypes":["org.springframework.data.web.PageableHandlerMethodArgumentResolver"] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1193/0x0000000840885840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1195/0x0000000840885040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1198/0x000000084087cc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1200/0x000000084087c440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1200/0x000000084087cc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1202/0x000000084087c440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1205/0x0000000840872040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1207/0x0000000840871840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1235/0x0000000840884840",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1237/0x0000000840884040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"}
,
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Sort"}
,
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"] }, 
    {"name":"groovyMarkupConfigurer","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider$GroovyTemplateAvailabilityProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"gson","parameterTypes":["com.google.gson.GsonBuilder"] }, 
    {"name":"gsonBuilder","parameterTypes":["java.util.List"] }, 
    {"name":"standardGsonBuilderCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.gson.GsonProperties"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"customize","parameterTypes":["com.google.gson.GsonBuilder"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConverters",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"iterator","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"messageConverters","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"stringHttpMessageConverter","parameterTypes":["org.springframework.core.env.Environment"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"mappingJackson2HttpMessageConverter","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"mappingJackson2XmlHttpMessageConverter","parameterTypes":["org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.info.ProjectInfoProperties"] }, 
    {"name":"buildProperties","parameterTypes":[] }, 
    {"name":"gitProperties","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build"}
,
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git"}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"integrationGlobalProperties","parameterTypes":["org.springframework.boot.autoconfigure.integration.IntegrationProperties"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationComponentScanConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultPollerMetadata","parameterTypes":["org.springframework.boot.autoconfigure.integration.IntegrationProperties"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationManagementConfiguration$EnableIntegrationManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationRSocketConfiguration$AnyRSocketChannelAdapterAvailable",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$OnIntegrationDatasourceInitializationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfigurationScanRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationProperties$Channel"}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationProperties$Endpoint"}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationProperties$Error"}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationProperties$Jdbc"}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationProperties$Management"}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationProperties$Poller"}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationProperties$RSocket"}
,
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jsonComponentModule","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"standardJacksonObjectMapperBuilderCustomizer","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.autoconfigure.jackson.JacksonProperties"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"customize","parameterTypes":["org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jacksonObjectMapperBuilder","parameterTypes":["org.springframework.context.ApplicationContext","java.util.List"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"}
,
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }],
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"}
,
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration$JndiOrPropertyCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration$MailSenderCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.netty.NettyProperties"] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyProperties$LeakDetection"}
,
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.quartz.JobStoreType"}
,
{
  "name":"org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"quartzScheduler","parameterTypes":["org.springframework.boot.autoconfigure.quartz.QuartzProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","java.util.Map","org.springframework.beans.factory.ObjectProvider","org.springframework.context.ApplicationContext"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.quartz.QuartzProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.quartz.QuartzProperties$Jdbc"}
,
{
  "name":"org.springframework.boot.autoconfigure.quartz.SchedulerFactoryBeanCustomizer"}
,
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityDataConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getUser","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityProperties$Filter"}
,
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityProperties$User",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setName","parameterTypes":["java.lang.String"] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$ReactiveUserDetailsServiceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.AntPathRequestMatcherProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getRequestMatcher","parameterTypes":["java.lang.String"] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.ErrorPageSecurityFilterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"errorPageSecurityInterceptor","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.RequestMatcherProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"securityFilterChainRegistration","parameterTypes":["org.springframework.boot.autoconfigure.security.SecurityProperties"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"inMemoryUserDetailsManager","parameterTypes":["org.springframework.boot.autoconfigure.security.SecurityProperties","org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.WebSecurityEnablerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.task.ScheduledBeanLazyInitializationExcludeFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"isExcluded","parameterTypes":["java.lang.String","org.springframework.beans.factory.config.BeanDefinition","java.lang.Class"] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"applicationTaskExecutor","parameterTypes":["org.springframework.boot.task.TaskExecutorBuilder"] }, 
    {"name":"taskExecutorBuilder","parameterTypes":["org.springframework.boot.autoconfigure.task.TaskExecutionProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"}
,
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown"}
,
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"scheduledBeanLazyInitializationExcludeFilter","parameterTypes":[] }, 
    {"name":"taskScheduler","parameterTypes":["org.springframework.boot.task.TaskSchedulerBuilder"] }, 
    {"name":"taskSchedulerBuilder","parameterTypes":["org.springframework.boot.autoconfigure.task.TaskSchedulingProperties","org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool"}
,
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown"}
,
{
  "name":"org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"applyToMvcViewResolver","parameterTypes":["java.lang.Object"] }, 
    {"name":"getPrefix","parameterTypes":[] }, 
    {"name":"getRequestContextAttribute","parameterTypes":[] }, 
    {"name":"getSuffix","parameterTypes":[] }, 
    {"name":"isAllowRequestOverride","parameterTypes":[] }, 
    {"name":"isAllowSessionOverride","parameterTypes":[] }, 
    {"name":"isExposeRequestAttributes","parameterTypes":[] }, 
    {"name":"isExposeSessionAttributes","parameterTypes":[] }, 
    {"name":"isExposeSpringMacroHelpers","parameterTypes":[] }, 
    {"name":"setAllowRequestOverride","parameterTypes":["boolean"] }, 
    {"name":"setAllowSessionOverride","parameterTypes":["boolean"] }, 
    {"name":"setExposeRequestAttributes","parameterTypes":["boolean"] }, 
    {"name":"setExposeSessionAttributes","parameterTypes":["boolean"] }, 
    {"name":"setExposeSpringMacroHelpers","parameterTypes":["boolean"] }, 
    {"name":"setPrefix","parameterTypes":["java.lang.String"] }, 
    {"name":"setRequestContextAttribute","parameterTypes":["java.lang.String"] }, 
    {"name":"setSuffix","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setEnabled","parameterTypes":["boolean"] }],
  "queriedMethods":[
    {"name":"getCharset","parameterTypes":[] }, 
    {"name":"getCharsetName","parameterTypes":[] }, 
    {"name":"getContentType","parameterTypes":[] }, 
    {"name":"getViewNames","parameterTypes":[] }, 
    {"name":"isCache","parameterTypes":[] }, 
    {"name":"isCheckTemplateLocation","parameterTypes":[] }, 
    {"name":"isEnabled","parameterTypes":[] }, 
    {"name":"setCache","parameterTypes":["boolean"] }, 
    {"name":"setCharset","parameterTypes":["java.nio.charset.Charset"] }, 
    {"name":"setCheckTemplateLocation","parameterTypes":["boolean"] }, 
    {"name":"setContentType","parameterTypes":["org.springframework.util.MimeType"] }, 
    {"name":"setViewNames","parameterTypes":["java.lang.String[]"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.template.PathBasedTemplateAvailabilityProvider$TemplateAvailabilityProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders"}
,
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties","org.springframework.context.ApplicationContext"] }, 
    {"name":"defaultTemplateResolver","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"java8TimeDialect","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebLayoutConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setCache","parameterTypes":["boolean"] }, 
    {"name":"setEncoding","parameterTypes":["java.nio.charset.Charset"] }, 
    {"name":"setMode","parameterTypes":["java.lang.String"] }, 
    {"name":"setTemplateResolverOrder","parameterTypes":["java.lang.Integer"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive"}
,
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet"}
,
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.transaction.PlatformTransactionManagerCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"platformTransactionManagerCustomizers","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"transactionTemplate","parameterTypes":["org.springframework.transaction.PlatformTransactionManager"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }],
  "queriedMethods":[{"name":"customize","parameterTypes":["org.springframework.transaction.PlatformTransactionManager"] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.transaction.jta.AtomikosJtaConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultValidator","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"methodValidationPostProcessor","parameterTypes":["org.springframework.core.env.Environment","javax.validation.Validator","org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"supports","parameterTypes":["java.lang.Class"] }, 
    {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors"] }, 
    {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.autoconfigure.web.ErrorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setIncludeStacktrace","parameterTypes":["org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getCompression","parameterTypes":[] }, 
    {"name":"getError","parameterTypes":[] }, 
    {"name":"getServlet","parameterTypes":[] }, 
    {"name":"getSsl","parameterTypes":[] }, 
    {"name":"getTomcat","parameterTypes":[] }, 
    {"name":"setForwardHeadersStrategy","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"] }, 
    {"name":"setMaxHttpHeaderSize","parameterTypes":["org.springframework.util.unit.DataSize"] }, 
    {"name":"setPort","parameterTypes":["java.lang.Integer"] }, 
    {"name":"setSsl","parameterTypes":["org.springframework.boot.web.server.Ssl"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Netty"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Reactive"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getContextParameters","parameterTypes":[] }, 
    {"name":"getEncoding","parameterTypes":[] }, 
    {"name":"getSession","parameterTypes":[] }, 
    {"name":"setContextPath","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getAccesslog","parameterTypes":[] }, 
    {"name":"getAdditionalTldSkipPatterns","parameterTypes":[] }, 
    {"name":"getRemoteip","parameterTypes":[] }, 
    {"name":"getThreads","parameterTypes":[] }, 
    {"name":"setAdditionalTldSkipPatterns","parameterTypes":["java.util.List"] }, 
    {"name":"setBackgroundProcessorDelay","parameterTypes":["java.time.Duration"] }, 
    {"name":"setBasedir","parameterTypes":["java.io.File"] }, 
    {"name":"setConnectionTimeout","parameterTypes":["java.time.Duration"] }, 
    {"name":"setMaxHttpFormPostSize","parameterTypes":["org.springframework.util.unit.DataSize"] }, 
    {"name":"setUriEncoding","parameterTypes":["java.nio.charset.Charset"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"setEnabled","parameterTypes":["boolean"] }, 
    {"name":"setPattern","parameterTypes":["java.lang.String"] }, 
    {"name":"setSuffix","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"setPortHeader","parameterTypes":["java.lang.String"] }, 
    {"name":"setProtocolHeader","parameterTypes":["java.lang.String"] }, 
    {"name":"setProtocolHeaderHttpsValue","parameterTypes":["java.lang.String"] }, 
    {"name":"setRemoteIpHeader","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"setMax","parameterTypes":["int"] }, 
    {"name":"setMinSpare","parameterTypes":["int"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"tomcatWebServerFactoryCustomizer","parameterTypes":["org.springframework.core.env.Environment","org.springframework.boot.autoconfigure.web.ServerProperties"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.format.DateTimeFormatters"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.format.WebConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Session"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties","org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"] }, 
    {"name":"webSessionIdResolver","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"dispatcherServlet","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"dispatcherServletRegistration","parameterTypes":["org.springframework.web.servlet.DispatcherServlet","org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties","org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addUrlMappings","parameterTypes":["java.lang.String[]"] }, 
    {"name":"getPath","parameterTypes":[] }, 
    {"name":"setUrlMappings","parameterTypes":["java.util.Collection"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }, 
    {"name":"characterEncodingFilter","parameterTypes":[] }, 
    {"name":"localeCharsetMappingsCustomizer","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"] }, 
    {"name":"multipartConfigElement","parameterTypes":[] }, 
    {"name":"multipartResolver","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"servletWebServerFactoryCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"tomcatServletWebServerFactoryCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"formContentFilter","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties","org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ListableBeanFactory"] }, 
    {"name":"flashMapManager","parameterTypes":[] }, 
    {"name":"mvcContentNegotiationManager","parameterTypes":[] }, 
    {"name":"mvcConversionService","parameterTypes":[] }, 
    {"name":"mvcValidator","parameterTypes":[] }, 
    {"name":"requestMappingHandlerAdapter","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.validation.Validator"] }, 
    {"name":"requestMappingHandlerMapping","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"welcomePageHandlerMapping","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties","org.springframework.beans.factory.ListableBeanFactory","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"beanNameViewResolver","parameterTypes":[] }, 
    {"name":"defaultViewResolver","parameterTypes":[] }, 
    {"name":"requestContextFilter","parameterTypes":[] }, 
    {"name":"viewResolver","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }
  ],
  "queriedMethods":[
    {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, 
    {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"] }, 
    {"name":"configureAsyncSupport","parameterTypes":["org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"] }, 
    {"name":"configureContentNegotiation","parameterTypes":["org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"] }, 
    {"name":"configureMessageConverters","parameterTypes":["java.util.List"] }, 
    {"name":"configurePathMatch","parameterTypes":["org.springframework.web.servlet.config.annotation.PathMatchConfigurer"] }, 
    {"name":"getMessageCodesResolver","parameterTypes":[] }, 
    {"name":"setServletContext","parameterTypes":["javax.servlet.ServletContext"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getPathmatch","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setMatchingStrategy","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$MatchingStrategy"] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"resolveErrorView","parameterTypes":["javax.servlet.http.HttpServletRequest","org.springframework.http.HttpStatus","java.util.Map"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }, 
    {"name":"basicErrorController","parameterTypes":["org.springframework.boot.web.servlet.error.ErrorAttributes","org.springframework.beans.factory.ObjectProvider"] }, 
    {"name":"errorAttributes","parameterTypes":[] }, 
    {"name":"errorPageCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"] }, 
    {"name":"preserveErrorControllerTargetClassPostProcessor","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.autoconfigure.web.WebProperties"] }, 
    {"name":"conventionErrorViewResolver","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"registerErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPageRegistry"] }
  ]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor"}
,
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.availability.ApplicationAvailability",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.availability.ApplicationAvailabilityBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getLastChangeEvent","parameterTypes":["java.lang.Class"] }, 
    {"name":"getState","parameterTypes":["java.lang.Class"] }, 
    {"name":"getState","parameterTypes":["java.lang.Class","org.springframework.boot.availability.AvailabilityState"] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }
  ]}
,
{
  "name":"org.springframework.boot.availability.AvailabilityChangeEvent"}
,
{
  "name":"org.springframework.boot.availability.AvailabilityState"}
,
{
  "name":"org.springframework.boot.availability.LivenessState"}
,
{
  "name":"org.springframework.boot.availability.ReadinessState"}
,
{
  "name":"org.springframework.boot.builder.ParentContextCloserApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.commons.logging.Log"] }]}
,
{
  "name":"org.springframework.boot.cloud.CloudPlatform"}
,
{
  "name":"org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty"}
,
{
  "name":"org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.ContextIdApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.FileEncodingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.TypeExcludeFilter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.config.AnsiOutputApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.ConfigurableBootstrapContext"] }]}
,
{
  "name":"org.springframework.boot.context.config.ConfigDataProperties",
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]}
,
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLoader",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLocationResolver",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.commons.logging.Log","org.springframework.boot.context.properties.bind.Binder","org.springframework.core.io.ResourceLoader"] }]}
,
{
  "name":"org.springframework.boot.context.event.ApplicationReadyEvent"}
,
{
  "name":"org.springframework.boot.context.event.ApplicationStartedEvent"}
,
{
  "name":"org.springframework.boot.context.event.EventPublishingRunListener",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.SpringApplication","java.lang.String[]"] }]}
,
{
  "name":"org.springframework.boot.context.logging.LoggingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.properties.BoundConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.context.properties.ConfigurationProperties",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"ignoreInvalidFields","parameterTypes":[] }, 
    {"name":"ignoreUnknownFields","parameterTypes":[] }, 
    {"name":"prefix","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinding",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationProperties",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.properties.NestedConfigurationProperty",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.context.properties.bind.BindHandler"}
,
{
  "name":"org.springframework.boot.context.properties.bind.Binder"}
,
{
  "name":"org.springframework.boot.context.properties.bind.Name",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.properties.migrator.PropertiesMigrationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.context.properties.source.ConfigurationProperty"}
,
{
  "name":"org.springframework.boot.context.properties.source.ConfigurationPropertyName"}
,
{
  "name":"org.springframework.boot.convert.DurationUnit",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.diagnostics.AbstractFailureAnalyzer"}
,
{
  "name":"org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.env.PropertiesPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.commons.logging.Log"] }]}
,
{
  "name":"org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.env.YamlPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.info.BuildProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.info.GitProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.info.InfoProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"get","parameterTypes":["java.lang.String"] }, 
    {"name":"getInstant","parameterTypes":["java.lang.String"] }, 
    {"name":"iterator","parameterTypes":[] }, 
    {"name":"toPropertySource","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.jackson.JsonComponent$Scope"}
,
{
  "name":"org.springframework.boot.jackson.JsonComponentModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }
  ]}
,
{
  "name":"org.springframework.boot.jdbc.AbstractDataSourceInitializerDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.jdbc.DataSourceBuilder"}
,
{
  "name":"org.springframework.boot.jdbc.DataSourceInitializationMode"}
,
{
  "name":"org.springframework.boot.jdbc.EmbeddedDatabaseConnection"}
,
{
  "name":"org.springframework.boot.jdbc.XADataSourceWrapper"}
,
{
  "name":"org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider"}
,
{
  "name":"org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.loader.LaunchedURLClassLoader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"clearCache","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.loader.archive.Archive",
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.boot.logging.LogLevel"}
,
{
  "name":"org.springframework.boot.logging.LoggingSystem"}
,
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.logging.logback.ColorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]}
,
{
  "name":"org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.sql.init.DatabaseInitializationMode"}
,
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]}
,
{
  "name":"org.springframework.boot.task.TaskExecutorBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.task.TaskExecutorCustomizer"}
,
{
  "name":"org.springframework.boot.task.TaskSchedulerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.task.TaskSchedulerCustomizer"}
,
{
  "name":"org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter$$Lambda$588/0x000000084043f040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter$$Lambda$589/0x000000084041f040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter$$Lambda$592/0x0000000840437c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter$$Lambda$595/0x000000084043f040",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter$$Lambda$600/0x000000084043fc40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter$$Lambda$610/0x0000000840447c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter$$Lambda$629/0x0000000840447c40",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.web.client.RestTemplateBuilder"}
,
{
  "name":"org.springframework.boot.web.client.RestTemplateCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.web.context.ConfigurableWebServerApplicationContext"}
,
{
  "name":"org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.web.context.WebServerInitializedEvent"}
,
{
  "name":"org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer"}
,
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer"}
,
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"}
,
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.ClassLoader"] }]}
,
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer"}
,
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addAdditionalTomcatConnectors","parameterTypes":["org.apache.catalina.connector.Connector[]"] }, 
    {"name":"addConnectorCustomizers","parameterTypes":["org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]"] }, 
    {"name":"addContextCustomizers","parameterTypes":["org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]"] }, 
    {"name":"addContextLifecycleListeners","parameterTypes":["org.apache.catalina.LifecycleListener[]"] }, 
    {"name":"addContextValves","parameterTypes":["org.apache.catalina.Valve[]"] }, 
    {"name":"addEngineValves","parameterTypes":["org.apache.catalina.Valve[]"] }, 
    {"name":"addProtocolHandlerCustomizers","parameterTypes":["org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]"] }, 
    {"name":"addTldSkipPatterns","parameterTypes":["java.lang.String[]"] }, 
    {"name":"getAdditionalTomcatConnectors","parameterTypes":[] }, 
    {"name":"getContextLifecycleListeners","parameterTypes":[] }, 
    {"name":"getContextValves","parameterTypes":[] }, 
    {"name":"getEngineValves","parameterTypes":[] }, 
    {"name":"getTldSkipPatterns","parameterTypes":[] }, 
    {"name":"getTomcatConnectorCustomizers","parameterTypes":[] }, 
    {"name":"getTomcatContextCustomizers","parameterTypes":[] }, 
    {"name":"getTomcatProtocolHandlerCustomizers","parameterTypes":[] }, 
    {"name":"getUriEncoding","parameterTypes":[] }, 
    {"name":"getWebServer","parameterTypes":["org.springframework.boot.web.servlet.ServletContextInitializer[]"] }, 
    {"name":"setBackgroundProcessorDelay","parameterTypes":["int"] }, 
    {"name":"setBaseDirectory","parameterTypes":["java.io.File"] }, 
    {"name":"setContextLifecycleListeners","parameterTypes":["java.util.Collection"] }, 
    {"name":"setContextValves","parameterTypes":["java.util.Collection"] }, 
    {"name":"setDisableMBeanRegistry","parameterTypes":["boolean"] }, 
    {"name":"setEngineValves","parameterTypes":["java.util.Collection"] }, 
    {"name":"setProtocol","parameterTypes":["java.lang.String"] }, 
    {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }, 
    {"name":"setTldSkipPatterns","parameterTypes":["java.util.Collection"] }, 
    {"name":"setTomcatConnectorCustomizers","parameterTypes":["java.util.Collection"] }, 
    {"name":"setTomcatContextCustomizers","parameterTypes":["java.util.Collection"] }, 
    {"name":"setTomcatProtocolHandlerCustomizers","parameterTypes":["java.util.Collection"] }, 
    {"name":"setUriEncoding","parameterTypes":["java.nio.charset.Charset"] }
  ]}
,
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
,
{
  "name":"org.springframework.boot.web.error.ErrorAttributeOptions"}
,
{
  "name":"org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPage[]"] }, 
    {"name":"getAddress","parameterTypes":[] }, 
    {"name":"getCompression","parameterTypes":[] }, 
    {"name":"getErrorPages","parameterTypes":[] }, 
    {"name":"getHttp2","parameterTypes":[] }, 
    {"name":"getPort","parameterTypes":[] }, 
    {"name":"getServerHeader","parameterTypes":[] }, 
    {"name":"getShutdown","parameterTypes":[] }, 
    {"name":"getSsl","parameterTypes":[] }, 
    {"name":"getSslStoreProvider","parameterTypes":[] }, 
    {"name":"setAddress","parameterTypes":["java.net.InetAddress"] }, 
    {"name":"setCompression","parameterTypes":["org.springframework.boot.web.server.Compression"] }, 
    {"name":"setErrorPages","parameterTypes":["java.util.Set"] }, 
    {"name":"setHttp2","parameterTypes":["org.springframework.boot.web.server.Http2"] }, 
    {"name":"setPort","parameterTypes":["int"] }, 
    {"name":"setServerHeader","parameterTypes":["java.lang.String"] }, 
    {"name":"setShutdown","parameterTypes":["org.springframework.boot.web.server.Shutdown"] }, 
    {"name":"setSsl","parameterTypes":["org.springframework.boot.web.server.Ssl"] }, 
    {"name":"setSslStoreProvider","parameterTypes":["org.springframework.boot.web.server.SslStoreProvider"] }
  ]}
,
{
  "name":"org.springframework.boot.web.server.Compression",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"setEnabled","parameterTypes":["boolean"] }, 
    {"name":"setMimeTypes","parameterTypes":["java.lang.String[]"] }
  ]}
,
{
  "name":"org.springframework.boot.web.server.ConfigurableWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.web.server.Cookie",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setHttpOnly","parameterTypes":["java.lang.Boolean"] }]}
,
{
  "name":"org.springframework.boot.web.server.ErrorPage"}
,
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.web.server.Http2"}
,
{
  "name":"org.springframework.boot.web.server.MimeMappings"}
,
{
  "name":"org.springframework.boot.web.server.Shutdown"}
,
{
  "name":"org.springframework.boot.web.server.Ssl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setEnabled","parameterTypes":["boolean"] }, 
    {"name":"setKeyPassword","parameterTypes":["java.lang.String"] }, 
    {"name":"setKeyStore","parameterTypes":["java.lang.String"] }, 
    {"name":"setKeyStorePassword","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.boot.web.server.SslStoreProvider"}
,
{
  "name":"org.springframework.boot.web.server.WebServer"}
,
{
  "name":"org.springframework.boot.web.server.WebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addServletNames","parameterTypes":["java.lang.String[]"] }, 
    {"name":"addServletRegistrationBeans","parameterTypes":["org.springframework.boot.web.servlet.ServletRegistrationBean[]"] }, 
    {"name":"addUrlPatterns","parameterTypes":["java.lang.String[]"] }, 
    {"name":"getServletNames","parameterTypes":[] }, 
    {"name":"getServletRegistrationBeans","parameterTypes":[] }, 
    {"name":"getUrlPatterns","parameterTypes":[] }, 
    {"name":"isMatchAfter","parameterTypes":[] }, 
    {"name":"setDispatcherTypes","parameterTypes":["java.util.EnumSet"] }, 
    {"name":"setDispatcherTypes","parameterTypes":["javax.servlet.DispatcherType","javax.servlet.DispatcherType[]"] }, 
    {"name":"setMatchAfter","parameterTypes":["boolean"] }, 
    {"name":"setServletNames","parameterTypes":["java.util.Collection"] }, 
    {"name":"setServletRegistrationBeans","parameterTypes":["java.util.Collection"] }, 
    {"name":"setUrlPatterns","parameterTypes":["java.util.Collection"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getFilter","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]}
,
{
  "name":"org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.web.servlet.DispatcherType"}
,
{
  "name":"org.springframework.boot.web.servlet.DynamicRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addInitParameter","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"getInitParameters","parameterTypes":[] }, 
    {"name":"isAsyncSupported","parameterTypes":[] }, 
    {"name":"setAsyncSupported","parameterTypes":["boolean"] }, 
    {"name":"setInitParameters","parameterTypes":["java.util.Map"] }, 
    {"name":"setName","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.boot.web.servlet.FilterRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getFilter","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.web.servlet.RegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isEnabled","parameterTypes":[] }, 
    {"name":"onStartup","parameterTypes":["javax.servlet.ServletContext"] }, 
    {"name":"setEnabled","parameterTypes":["boolean"] }, 
    {"name":"setOrder","parameterTypes":["int"] }
  ]}
,
{
  "name":"org.springframework.boot.web.servlet.ServletContextInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.web.servlet.ServletRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getMultipartConfig","parameterTypes":[] }, 
    {"name":"getServlet","parameterTypes":[] }, 
    {"name":"getServletName","parameterTypes":[] }, 
    {"name":"getUrlMappings","parameterTypes":[] }, 
    {"name":"setLoadOnStartup","parameterTypes":["int"] }, 
    {"name":"setMultipartConfig","parameterTypes":["javax.servlet.MultipartConfigElement"] }, 
    {"name":"setServlet","parameterTypes":["javax.servlet.Servlet"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.boot.web.servlet.WebListenerRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"}
,
{
  "name":"org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getError","parameterTypes":["org.springframework.web.context.request.WebRequest"] }, 
    {"name":"getErrorAttributes","parameterTypes":["org.springframework.web.context.request.WebRequest","org.springframework.boot.web.error.ErrorAttributeOptions"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"resolveException","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object","java.lang.Exception"] }
  ]}
,
{
  "name":"org.springframework.boot.web.servlet.error.ErrorAttributes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.web.servlet.error.ErrorController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getOrder","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getOrder","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter"}
,
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getOrder","parameterTypes":[] }]}
,
{
  "name":"org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addCookieSameSiteSuppliers","parameterTypes":["org.springframework.boot.web.servlet.server.CookieSameSiteSupplier[]"] }, 
    {"name":"addInitializers","parameterTypes":["org.springframework.boot.web.servlet.ServletContextInitializer[]"] }, 
    {"name":"addWebListeners","parameterTypes":["java.lang.String[]"] }, 
    {"name":"getContextPath","parameterTypes":[] }, 
    {"name":"getCookieSameSiteSuppliers","parameterTypes":[] }, 
    {"name":"getDisplayName","parameterTypes":[] }, 
    {"name":"getDocumentRoot","parameterTypes":[] }, 
    {"name":"getInitParameters","parameterTypes":[] }, 
    {"name":"getJsp","parameterTypes":[] }, 
    {"name":"getLocaleCharsetMappings","parameterTypes":[] }, 
    {"name":"getMimeMappings","parameterTypes":[] }, 
    {"name":"getSession","parameterTypes":[] }, 
    {"name":"isRegisterDefaultServlet","parameterTypes":[] }, 
    {"name":"setContextPath","parameterTypes":["java.lang.String"] }, 
    {"name":"setCookieSameSiteSuppliers","parameterTypes":["java.util.List"] }, 
    {"name":"setDisplayName","parameterTypes":["java.lang.String"] }, 
    {"name":"setDocumentRoot","parameterTypes":["java.io.File"] }, 
    {"name":"setInitParameters","parameterTypes":["java.util.Map"] }, 
    {"name":"setInitializers","parameterTypes":["java.util.List"] }, 
    {"name":"setJsp","parameterTypes":["org.springframework.boot.web.servlet.server.Jsp"] }, 
    {"name":"setLocaleCharsetMappings","parameterTypes":["java.util.Map"] }, 
    {"name":"setMimeMappings","parameterTypes":["org.springframework.boot.web.server.MimeMappings"] }, 
    {"name":"setRegisterDefaultServlet","parameterTypes":["boolean"] }, 
    {"name":"setSession","parameterTypes":["org.springframework.boot.web.servlet.server.Session"] }
  ]}
,
{
  "name":"org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"}
,
{
  "name":"org.springframework.boot.web.servlet.server.Encoding",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setCharset","parameterTypes":["java.nio.charset.Charset"] }, 
    {"name":"setForce","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.boot.web.servlet.server.Jsp"}
,
{
  "name":"org.springframework.boot.web.servlet.server.ServletWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.web.servlet.server.Session",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getCookie","parameterTypes":[] }, 
    {"name":"getTrackingModes","parameterTypes":[] }, 
    {"name":"setTimeout","parameterTypes":["java.time.Duration"] }, 
    {"name":"setTrackingModes","parameterTypes":["java.util.Set"] }
  ]}
,
{
  "name":"org.springframework.boot.web.servlet.server.Session$Cookie",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.boot.web.servlet.server.Session$SessionTrackingMode",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.boot.web.servlet.support.SpringBootServletInitializer"}
,
{
  "name":"org.springframework.cache.Cache"}
,
{
  "name":"org.springframework.cache.CacheManager"}
,
{
  "name":"org.springframework.cache.caffeine.CaffeineCache"}
,
{
  "name":"org.springframework.cache.caffeine.CaffeineCacheManager"}
,
{
  "name":"org.springframework.cache.ehcache.EhCacheCache"}
,
{
  "name":"org.springframework.cache.interceptor.CacheAspectSupport"}
,
{
  "name":"org.springframework.cache.jcache.JCacheCache"}
,
{
  "name":"org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"configurationPropertiesBeans","parameterTypes":[] }, 
    {"name":"configurationPropertiesRebinder","parameterTypes":["org.springframework.cloud.context.properties.ConfigurationPropertiesBeans"] }
  ],
  "queriedMethods":[
    {"name":"afterSingletonsInstantiated","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]}
,
{
  "name":"org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"environmentManager","parameterTypes":["org.springframework.core.env.ConfigurableEnvironment"] }
  ]}
,
{
  "name":"org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.autoconfigure.RefreshAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"legacyContextRefresher","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.springframework.cloud.context.scope.refresh.RefreshScope","org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties"] }, 
    {"name":"loggingRebinder","parameterTypes":[] }, 
    {"name":"refreshEventListener","parameterTypes":["org.springframework.cloud.context.refresh.ContextRefresher"] }, 
    {"name":"refreshScope","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$JpaInvokerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"init","parameterTypes":[] }
  ],
  "queriedMethods":[{"name":"setLoadTimeWeaver","parameterTypes":["org.springframework.instrument.classloading.LoadTimeWeaver"] }]}
,
{
  "name":"org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }],
  "queriedMethods":[{"name":"toString","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }],
  "queriedMethods":[
    {"name":"postProcessBeanDefinitionRegistry","parameterTypes":["org.springframework.beans.factory.support.BeanDefinitionRegistry"] }, 
    {"name":"postProcessBeanFactory","parameterTypes":["org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, 
    {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }
  ]}
,
{
  "name":"org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.autoconfigure.RestartEndpointWithIntegrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.integration.monitor.IntegrationMBeanExporter"] }, 
    {"name":"integrationPauseHandler","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.springframework.cloud.autoconfigure.RestartEndpointWithIntegrationConfiguration$IntegrationPauseHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"pause","parameterTypes":[] }, 
    {"name":"resume","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.bootstrap.BootstrapApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.bootstrap.BootstrapApplicationListener$BootstrapMarkerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.bootstrap.BootstrapImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.bootstrap.BootstrapImportSelectorConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.bootstrap.RefreshBootstrapRegistryInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }],
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"initialize","parameterTypes":["org.springframework.context.ConfigurableApplicationContext"] }
  ]}
,
{
  "name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setAllowOverride","parameterTypes":["boolean"] }, 
    {"name":"setOverrideNone","parameterTypes":["boolean"] }, 
    {"name":"setOverrideSystemProperties","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.cloud.bootstrap.config.PropertySourceLocator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.cloud.bootstrap.encrypt.AbstractEnvironmentDecrypt",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"isFailOnError","parameterTypes":[] }, 
    {"name":"setFailOnError","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.bootstrap.encrypt.EncryptionBootstrapConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"environmentDecryptApplicationListener","parameterTypes":["org.springframework.context.ConfigurableApplicationContext","org.springframework.cloud.bootstrap.encrypt.KeyProperties"] }, 
    {"name":"keyProperties","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.cloud.bootstrap.encrypt.EncryptionBootstrapConfiguration$KeyCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.bootstrap.encrypt.EnvironmentDecryptApplicationInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.cloud.bootstrap.encrypt.KeyProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore"}
,
{
  "name":"org.springframework.cloud.bootstrap.marker.Marker"}
,
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"commonsFeatures","parameterTypes":[] }, 
    {"name":"discoveryClientHealthIndicator","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties"] }
  ]}
,
{
  "name":"org.springframework.cloud.client.ConditionalOnBlockingDiscoveryEnabled",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.cloud.client.ConditionalOnDiscoveryEnabled",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.cloud.client.ConditionalOnDiscoveryHealthIndicatorEnabled",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.cloud.client.ConditionalOnReactiveDiscoveryEnabled",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.cloud.client.DefaultServiceInstance"}
,
{
  "name":"org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.client.actuator.FeaturesEndpoint"}
,
{
  "name":"org.springframework.cloud.client.actuator.HasFeatures",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.client.actuator.NamedFeature"}
,
{
  "name":"org.springframework.cloud.client.discovery.DiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.client.discovery.EnableDiscoveryClient",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"autoRegister","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.client.discovery.EnableDiscoveryClientImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"description","parameterTypes":[] }, 
    {"name":"getInstances","parameterTypes":["java.lang.String"] }, 
    {"name":"getServices","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"compositeDiscoveryClient","parameterTypes":["java.util.List"] }
  ]}
,
{
  "name":"org.springframework.cloud.client.discovery.event.InstanceRegisteredEvent"}
,
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"health","parameterTypes":[] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }
  ]}
,
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }],
  "queriedMethods":[{"name":"toString","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor"}
,
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"description","parameterTypes":[] }, 
    {"name":"getInstances","parameterTypes":["java.lang.String"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getServices","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setInet","parameterTypes":["org.springframework.cloud.commons.util.InetUtils"] }, 
    {"name":"setServer","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }, 
    {"name":"simpleDiscoveryClient","parameterTypes":["org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties"] }, 
    {"name":"simpleDiscoveryProperties","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"init","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerClient"}
,
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"loadBalancerClientsDefaultsMappingsProvider","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$725/0x0000000840660440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$729/0x000000084065f040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$732/0x000000084065f440",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$737/0x0000000840655040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$747/0x000000084063cc40",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getDefaultMappings","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$766/0x0000000840667040",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$779/0x0000000840694440",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getDefaultMappings","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"init","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistry"}
,
{
  "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"defaultsBindHandlerAdvisor","parameterTypes":["org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider[]"] }
  ]}
,
{
  "name":"org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"apply","parameterTypes":["org.springframework.boot.context.properties.bind.BindHandler"] }]}
,
{
  "name":"org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.commons.httpclient.ApacheHttpClientConnectionManagerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.commons.httpclient.ApacheHttpClientFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.commons.httpclient.DefaultApacheHttpClientConnectionManagerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"newConnectionManager","parameterTypes":["boolean","int","int","long","java.util.concurrent.TimeUnit","org.apache.http.config.RegistryBuilder"] }]}
,
{
  "name":"org.springframework.cloud.commons.httpclient.DefaultApacheHttpClientFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"createBuilder","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.commons.httpclient.HttpClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.commons.httpclient.HttpClientConfiguration$ApacheHttpClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"apacheHttpClientBuilder","parameterTypes":[] }, 
    {"name":"apacheHttpClientFactory","parameterTypes":["org.apache.http.impl.client.HttpClientBuilder"] }, 
    {"name":"connManFactory","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$ConditionalOnOAuth2ClientInResourceServer",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$OAuth2OnClientInResourceServerCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.commons.util.InetUtils",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"close","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.commons.util.InetUtils$HostInfo"}
,
{
  "name":"org.springframework.cloud.commons.util.InetUtilsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.commons.util.UtilAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"inetUtils","parameterTypes":["org.springframework.cloud.commons.util.InetUtilsProperties"] }, 
    {"name":"inetUtilsProperties","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.cloud.config.client.ConfigClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.config.client.ConfigClientAutoConfiguration$ConfigClientFailFastListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.cloud.config.client.ConfigClientAutoConfiguration"] }],
  "queriedMethods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]}
,
{
  "name":"org.springframework.cloud.config.client.ConfigClientAutoConfiguration$ConfigClientWatchConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"configClientWatch","parameterTypes":["org.springframework.cloud.context.refresh.ContextRefresher"] }
  ]}
,
{
  "name":"org.springframework.cloud.config.client.ConfigClientProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"checkTlsStoreType","parameterTypes":[] }, 
    {"name":"setEnabled","parameterTypes":["boolean"] }, 
    {"name":"setFailFast","parameterTypes":["boolean"] }, 
    {"name":"setProfile","parameterTypes":["java.lang.String"] }, 
    {"name":"setUri","parameterTypes":["java.lang.String[]"] }
  ],
  "queriedMethods":[{"name":"toString","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.config.client.ConfigClientProperties$Credentials"}
,
{
  "name":"org.springframework.cloud.config.client.ConfigClientProperties$Discovery"}
,
{
  "name":"org.springframework.cloud.config.client.ConfigClientRetryBootstrapper",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.config.client.ConfigClientWatch",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"watchConfigServer","parameterTypes":[] }
  ],
  "queriedMethods":[
    {"name":"close","parameterTypes":[] }, 
    {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }
  ]}
,
{
  "name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.commons.logging.Log"] }]}
,
{
  "name":"org.springframework.cloud.config.client.ConfigServerConfigDataLocationResolver",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.commons.logging.Log"] }]}
,
{
  "name":"org.springframework.cloud.config.client.ConfigServerConfigDataMissingEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.config.client.ConfigServiceBootstrapConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"configClientProperties","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.cloud.config.client.ConfigServiceBootstrapConfiguration$RetryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"configServerRetryInterceptor","parameterTypes":["org.springframework.cloud.config.client.RetryProperties"] }
  ]}
,
{
  "name":"org.springframework.cloud.config.client.RetryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.configuration.CompatibilityPredicate"}
,
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"compositeCompatibilityVerifier","parameterTypes":["java.util.List"] }, 
    {"name":"springBootVersionVerifier","parameterTypes":["org.springframework.cloud.configuration.CompatibilityVerifierProperties"] }
  ]}
,
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifierProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.configuration.CompositeCompatibilityVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.configuration.SpringBootVersionVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"verify","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.configuration.TlsProperties"}
,
{
  "name":"org.springframework.cloud.configuration.VerificationResult"}
,
{
  "name":"org.springframework.cloud.context.config.annotation.RefreshScope",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"proxyMode","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.context.environment.EnvironmentChangeEvent"}
,
{
  "name":"org.springframework.cloud.context.environment.EnvironmentManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }]}
,
{
  "name":"org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]}
,
{
  "name":"org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]}
,
{
  "name":"org.springframework.cloud.context.refresh.ConfigDataContextRefresher"}
,
{
  "name":"org.springframework.cloud.context.refresh.ContextRefresher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"refresh","parameterTypes":[] }, 
    {"name":"refreshEnvironment","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.cloud.context.refresh.LegacyContextRefresher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.context.restart.PauseHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.cloud.context.restart.RestartEndpoint"}
,
{
  "name":"org.springframework.cloud.context.restart.RestartEndpoint$PauseEndpoint"}
,
{
  "name":"org.springframework.cloud.context.restart.RestartEndpoint$ResumeEndpoint"}
,
{
  "name":"org.springframework.cloud.context.restart.RestartListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.context.scope.refresh.RefreshScope"}
,
{
  "name":"org.springframework.cloud.endpoint.RefreshEndpoint"}
,
{
  "name":"org.springframework.cloud.endpoint.event.RefreshEvent"}
,
{
  "name":"org.springframework.cloud.endpoint.event.RefreshEventListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"supportsEventType","parameterTypes":["java.lang.Class"] }
  ]}
,
{
  "name":"org.springframework.cloud.health.RefreshScopeHealthIndicator"}
,
{
  "name":"org.springframework.cloud.logging.LoggingRebinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }
  ]}
,
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapDisabled",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapDisabled$OnBootstrapDisabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapEnabled",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapEnabled$OnBootstrapEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.context.ApplicationContext"}
,
{
  "name":"org.springframework.context.ApplicationContextAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.context.ApplicationContextException"}
,
{
  "name":"org.springframework.context.ApplicationContextInitializer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.context.ApplicationEvent"}
,
{
  "name":"org.springframework.context.ApplicationEventPublisher"}
,
{
  "name":"org.springframework.context.ApplicationEventPublisherAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.context.ApplicationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.context.ApplicationStartupAware",
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.context.ConfigurableApplicationContext"}
,
{
  "name":"org.springframework.context.EmbeddedValueResolverAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.context.EnvironmentAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.context.HierarchicalMessageSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.context.Lifecycle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.context.LifecycleProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.context.MessageSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.context.MessageSourceAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.context.MessageSourceResolvable"}
,
{
  "name":"org.springframework.context.NoSuchMessageException"}
,
{
  "name":"org.springframework.context.PayloadApplicationEvent"}
,
{
  "name":"org.springframework.context.Phased",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.context.ResourceLoaderAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.context.SmartLifecycle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.context.annotation.AnnotationScopeMetadataResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.context.annotation.AspectJAutoProxyRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.context.annotation.AutoProxyRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.context.annotation.Bean",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"autowire","parameterTypes":[] }, 
    {"name":"autowireCandidate","parameterTypes":[] }, 
    {"name":"destroyMethod","parameterTypes":[] }, 
    {"name":"initMethod","parameterTypes":[] }, 
    {"name":"name","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.context.annotation.ComponentScan",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"basePackageClasses","parameterTypes":[] }, 
    {"name":"basePackages","parameterTypes":[] }, 
    {"name":"excludeFilters","parameterTypes":[] }, 
    {"name":"includeFilters","parameterTypes":[] }, 
    {"name":"lazyInit","parameterTypes":[] }, 
    {"name":"nameGenerator","parameterTypes":[] }, 
    {"name":"resourcePattern","parameterTypes":[] }, 
    {"name":"scopeResolver","parameterTypes":[] }, 
    {"name":"scopedProxy","parameterTypes":[] }, 
    {"name":"useDefaultFilters","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.context.annotation.ComponentScan$Filter",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"classes","parameterTypes":[] }, 
    {"name":"pattern","parameterTypes":[] }, 
    {"name":"type","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.context.annotation.Conditional",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.context.annotation.Configuration",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"proxyBeanMethods","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.context.annotation.ConfigurationClassPostProcessor",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setMetadataReaderFactory","parameterTypes":["org.springframework.core.type.classreading.MetadataReaderFactory"] }
  ]}
,
{
  "name":"org.springframework.context.annotation.DependsOn",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.context.annotation.EnableAspectJAutoProxy",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"exposeProxy","parameterTypes":[] }, 
    {"name":"proxyTargetClass","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.context.annotation.Import",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.context.annotation.ImportAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.context.annotation.Lazy",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.context.annotation.Primary",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.context.annotation.Profile",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.context.annotation.ProfileCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.context.annotation.Role",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.context.annotation.Scope",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"proxyMode","parameterTypes":[] }, 
    {"name":"scopeName","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.context.annotation.ScopedProxyMode"}
,
{
  "name":"org.springframework.context.event.ApplicationContextEvent"}
,
{
  "name":"org.springframework.context.event.ContextClosedEvent"}
,
{
  "name":"org.springframework.context.event.ContextRefreshedEvent"}
,
{
  "name":"org.springframework.context.event.DefaultEventListenerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.context.event.EventListener",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"classes","parameterTypes":[] }, 
    {"name":"condition","parameterTypes":[] }, 
    {"name":"id","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.context.event.EventListenerMethodProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.context.event.SmartApplicationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.context.i18n.LocaleContext"}
,
{
  "name":"org.springframework.context.i18n.LocaleContextHolder"}
,
{
  "name":"org.springframework.context.support.AbstractMessageSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getMessage","parameterTypes":["java.lang.String","java.lang.Object[]","java.lang.String","java.util.Locale"] }, 
    {"name":"getMessage","parameterTypes":["java.lang.String","java.lang.Object[]","java.util.Locale"] }, 
    {"name":"getMessage","parameterTypes":["org.springframework.context.MessageSourceResolvable","java.util.Locale"] }, 
    {"name":"getParentMessageSource","parameterTypes":[] }, 
    {"name":"setCommonMessages","parameterTypes":["java.util.Properties"] }, 
    {"name":"setParentMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }, 
    {"name":"setUseCodeAsDefaultMessage","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.context.support.AbstractResourceBasedMessageSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addBasenames","parameterTypes":["java.lang.String[]"] }, 
    {"name":"getBasenameSet","parameterTypes":[] }, 
    {"name":"setBasename","parameterTypes":["java.lang.String"] }, 
    {"name":"setCacheMillis","parameterTypes":["long"] }, 
    {"name":"setCacheSeconds","parameterTypes":["int"] }, 
    {"name":"setDefaultEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setDefaultLocale","parameterTypes":["java.util.Locale"] }, 
    {"name":"setFallbackToSystemLocale","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.context.support.ApplicationObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getApplicationContext","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]}
,
{
  "name":"org.springframework.context.support.ConversionServiceFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getObjectType","parameterTypes":[] }, 
    {"name":"isSingleton","parameterTypes":[] }, 
    {"name":"setConverters","parameterTypes":["java.util.Set"] }
  ]}
,
{
  "name":"org.springframework.context.support.DefaultLifecycleProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"isRunning","parameterTypes":[] }, 
    {"name":"onClose","parameterTypes":[] }, 
    {"name":"onRefresh","parameterTypes":[] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup"}
,
{
  "name":"org.springframework.context.support.GenericApplicationContext"}
,
{
  "name":"org.springframework.context.support.MessageSourceAccessor"}
,
{
  "name":"org.springframework.context.support.MessageSourceSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"setAlwaysUseMessageFormat","parameterTypes":["boolean"] }]}
,
{
  "name":"org.springframework.context.support.PropertySourcesPlaceholderConfigurer"}
,
{
  "name":"org.springframework.context.support.ReloadableResourceBundleMessageSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"clearCache","parameterTypes":[] }, 
    {"name":"clearCacheIncludingAncestors","parameterTypes":[] }, 
    {"name":"setConcurrentRefresh","parameterTypes":["boolean"] }, 
    {"name":"setFileEncodings","parameterTypes":["java.util.Properties"] }, 
    {"name":"setPropertiesPersister","parameterTypes":["org.springframework.util.PropertiesPersister"] }, 
    {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder"}
,
{
  "name":"org.springframework.context.support.ResourceBundleMessageSource"}
,
{
  "name":"org.springframework.context.weaving.LoadTimeWeaverAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.core.AttributeAccessor"}
,
{
  "name":"org.springframework.core.DecoratingProxy",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.core.MethodParameter"}
,
{
  "name":"org.springframework.core.Ordered",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.core.ParameterNameDiscoverer"}
,
{
  "name":"org.springframework.core.PriorityOrdered",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.core.ReactiveAdapterRegistry"}
,
{
  "name":"org.springframework.core.ResolvableType"}
,
{
  "name":"org.springframework.core.annotation.AliasFor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"annotation","parameterTypes":[] }]}
,
{
  "name":"org.springframework.core.annotation.AnnotationAttributes"}
,
{
  "name":"org.springframework.core.annotation.Order",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.core.convert.ConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.core.convert.TypeDescriptor"}
,
{
  "name":"org.springframework.core.convert.converter.Converter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.core.convert.converter.ConverterFactory"}
,
{
  "name":"org.springframework.core.convert.converter.ConverterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.core.convert.converter.GenericConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.core.convert.support.ConfigurableConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.core.convert.support.DefaultConversionService",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.core.convert.support.GenericConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addConverter","parameterTypes":["java.lang.Class","java.lang.Class","org.springframework.core.convert.converter.Converter"] }, 
    {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.Converter"] }, 
    {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.GenericConverter"] }, 
    {"name":"addConverterFactory","parameterTypes":["org.springframework.core.convert.converter.ConverterFactory"] }, 
    {"name":"canBypassConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"canConvert","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"canConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","java.lang.Class"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"removeConvertible","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.core.env.ConfigurableEnvironment"}
,
{
  "name":"org.springframework.core.env.Environment",
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.core.env.EnvironmentCapable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.core.env.MutablePropertySources"}
,
{
  "name":"org.springframework.core.env.PropertyResolver",
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.core.env.PropertySource"}
,
{
  "name":"org.springframework.core.env.StandardEnvironment"}
,
{
  "name":"org.springframework.core.io.FileSystemResource"}
,
{
  "name":"org.springframework.core.io.InputStreamSource",
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.core.io.Resource",
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.core.io.ResourceLoader",
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.core.io.support.PropertiesLoaderSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"setFileEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setIgnoreResourceNotFound","parameterTypes":["boolean"] }, 
    {"name":"setLocalOverride","parameterTypes":["boolean"] }, 
    {"name":"setLocation","parameterTypes":["org.springframework.core.io.Resource"] }, 
    {"name":"setLocations","parameterTypes":["org.springframework.core.io.Resource[]"] }, 
    {"name":"setProperties","parameterTypes":["java.util.Properties"] }, 
    {"name":"setPropertiesArray","parameterTypes":["java.util.Properties[]"] }, 
    {"name":"setPropertiesPersister","parameterTypes":["org.springframework.util.PropertiesPersister"] }
  ]}
,
{
  "name":"org.springframework.core.log.LogAccessor"}
,
{
  "name":"org.springframework.core.task.AsyncListenableTaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.core.task.AsyncTaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.core.task.TaskDecorator"}
,
{
  "name":"org.springframework.core.task.TaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.core.type.AnnotationMetadata"}
,
{
  "name":"org.springframework.core.type.classreading.MetadataReaderFactory",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]}
,
{
  "name":"org.springframework.data.annotation.Transient",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.data.domain.Pageable"}
,
{
  "name":"org.springframework.data.domain.Sort"}
,
{
  "name":"org.springframework.data.geo.GeoModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.data.repository.Repository"}
,
{
  "name":"org.springframework.data.repository.core.support.RepositoryMethodInvocationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"}
,
{
  "name":"org.springframework.data.repository.query.Param"}
,
{
  "name":"org.springframework.data.web.PageableArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.data.web.PageableDefault"}
,
{
  "name":"org.springframework.data.web.PageableHandlerMethodArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"resolveArgument","parameterTypes":["org.springframework.core.MethodParameter","org.springframework.web.method.support.ModelAndViewContainer","org.springframework.web.context.request.NativeWebRequest","org.springframework.web.bind.support.WebDataBinderFactory"] }, 
    {"name":"supportsParameter","parameterTypes":["org.springframework.core.MethodParameter"] }
  ]}
,
{
  "name":"org.springframework.data.web.PageableHandlerMethodArgumentResolverSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"isFallbackPageable","parameterTypes":["org.springframework.data.domain.Pageable"] }, 
    {"name":"setFallbackPageable","parameterTypes":["org.springframework.data.domain.Pageable"] }, 
    {"name":"setMaxPageSize","parameterTypes":["int"] }, 
    {"name":"setOneIndexedParameters","parameterTypes":["boolean"] }, 
    {"name":"setPageParameterName","parameterTypes":["java.lang.String"] }, 
    {"name":"setPrefix","parameterTypes":["java.lang.String"] }, 
    {"name":"setQualifierDelimiter","parameterTypes":["java.lang.String"] }, 
    {"name":"setSizeParameterName","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.data.web.SortArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.data.web.SortDefault"}
,
{
  "name":"org.springframework.data.web.SortHandlerMethodArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"resolveArgument","parameterTypes":["org.springframework.core.MethodParameter","org.springframework.web.method.support.ModelAndViewContainer","org.springframework.web.context.request.NativeWebRequest","org.springframework.web.bind.support.WebDataBinderFactory"] }, 
    {"name":"supportsParameter","parameterTypes":["org.springframework.core.MethodParameter"] }
  ]}
,
{
  "name":"org.springframework.data.web.SortHandlerMethodArgumentResolverSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getPropertyDelimiter","parameterTypes":[] }, 
    {"name":"setFallbackSort","parameterTypes":["org.springframework.data.domain.Sort"] }, 
    {"name":"setPropertyDelimiter","parameterTypes":["java.lang.String"] }, 
    {"name":"setQualifierDelimiter","parameterTypes":["java.lang.String"] }, 
    {"name":"setSortParameter","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"projectingArgumentResolverBeanPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectFactory"] }
  ]}
,
{
  "name":"org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }
  ]}
,
{
  "name":"org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.data.web.config.SpringDataJacksonConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jacksonGeoModule","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.data.web.config.SpringDataJacksonModules",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.data.web.config.SpringDataWebConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectFactory"] }, 
    {"name":"pageableResolver","parameterTypes":[] }, 
    {"name":"sortResolver","parameterTypes":[] }
  ],
  "queriedMethods":[
    {"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, 
    {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, 
    {"name":"extendMessageConverters","parameterTypes":["java.util.List"] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }
  ]}
,
{
  "name":"org.springframework.expression.BeanResolver"}
,
{
  "name":"org.springframework.expression.ConstructorResolver"}
,
{
  "name":"org.springframework.expression.EvaluationContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.expression.Expression"}
,
{
  "name":"org.springframework.expression.MethodFilter"}
,
{
  "name":"org.springframework.expression.MethodResolver"}
,
{
  "name":"org.springframework.expression.OperatorOverloader"}
,
{
  "name":"org.springframework.expression.ParserContext"}
,
{
  "name":"org.springframework.expression.PropertyAccessor"}
,
{
  "name":"org.springframework.expression.TypeComparator"}
,
{
  "name":"org.springframework.expression.TypeConverter"}
,
{
  "name":"org.springframework.expression.TypeLocator"}
,
{
  "name":"org.springframework.expression.TypedValue"}
,
{
  "name":"org.springframework.expression.spel.support.SimpleEvaluationContext"}
,
{
  "name":"org.springframework.expression.spel.support.StandardEvaluationContext",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"getBeanResolver","parameterTypes":[] }, 
    {"name":"getConstructorResolvers","parameterTypes":[] }, 
    {"name":"getMethodResolvers","parameterTypes":[] }, 
    {"name":"getOperatorOverloader","parameterTypes":[] }, 
    {"name":"getPropertyAccessors","parameterTypes":[] }, 
    {"name":"getRootObject","parameterTypes":[] }, 
    {"name":"getTypeComparator","parameterTypes":[] }, 
    {"name":"getTypeConverter","parameterTypes":[] }, 
    {"name":"getTypeLocator","parameterTypes":[] }, 
    {"name":"lookupVariable","parameterTypes":["java.lang.String"] }, 
    {"name":"setVariable","parameterTypes":["java.lang.String","java.lang.Object"] }
  ]}
,
{
  "name":"org.springframework.format.AnnotationFormatterFactory"}
,
{
  "name":"org.springframework.format.Formatter"}
,
{
  "name":"org.springframework.format.FormatterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.format.Parser"}
,
{
  "name":"org.springframework.format.Printer"}
,
{
  "name":"org.springframework.format.support.DefaultFormattingConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"addDefaultFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }]}
,
{
  "name":"org.springframework.format.support.FormattingConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addFormatter","parameterTypes":["org.springframework.format.Formatter"] }, 
    {"name":"addFormatterForFieldAnnotation","parameterTypes":["org.springframework.format.AnnotationFormatterFactory"] }, 
    {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Formatter"] }, 
    {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Printer","org.springframework.format.Parser"] }, 
    {"name":"addParser","parameterTypes":["org.springframework.format.Parser"] }, 
    {"name":"addPrinter","parameterTypes":["org.springframework.format.Printer"] }, 
    {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }
  ]}
,
{
  "name":"org.springframework.http.CacheControl"}
,
{
  "name":"org.springframework.http.HttpHeaders"}
,
{
  "name":"org.springframework.http.HttpInputMessage"}
,
{
  "name":"org.springframework.http.HttpOutputMessage"}
,
{
  "name":"org.springframework.http.HttpRequest"}
,
{
  "name":"org.springframework.http.HttpStatus"}
,
{
  "name":"org.springframework.http.MediaType"}
,
{
  "name":"org.springframework.http.ReactiveHttpInputMessage"}
,
{
  "name":"org.springframework.http.ResponseCookie"}
,
{
  "name":"org.springframework.http.ResponseCookie$ResponseCookieBuilder"}
,
{
  "name":"org.springframework.http.ResponseEntity"}
,
{
  "name":"org.springframework.http.client.ClientHttpResponse"}
,
{
  "name":"org.springframework.http.codec.CodecConfigurer"}
,
{
  "name":"org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"}
,
{
  "name":"org.springframework.http.converter.AbstractGenericHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"canWrite","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"write","parameterTypes":["java.lang.Object","java.lang.reflect.Type","org.springframework.http.MediaType","org.springframework.http.HttpOutputMessage"] }
  ]}
,
{
  "name":"org.springframework.http.converter.AbstractHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"canRead","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"canWrite","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"getDefaultCharset","parameterTypes":[] }, 
    {"name":"getSupportedMediaTypes","parameterTypes":[] }, 
    {"name":"read","parameterTypes":["java.lang.Class","org.springframework.http.HttpInputMessage"] }, 
    {"name":"setDefaultCharset","parameterTypes":["java.nio.charset.Charset"] }, 
    {"name":"setSupportedMediaTypes","parameterTypes":["java.util.List"] }, 
    {"name":"write","parameterTypes":["java.lang.Object","org.springframework.http.MediaType","org.springframework.http.HttpOutputMessage"] }
  ]}
,
{
  "name":"org.springframework.http.converter.FormHttpMessageConverter"}
,
{
  "name":"org.springframework.http.converter.GenericHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.http.converter.HttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.http.converter.HttpMessageNotReadableException"}
,
{
  "name":"org.springframework.http.converter.HttpMessageNotWritableException"}
,
{
  "name":"org.springframework.http.converter.StringHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"canRead","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"canRead","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"canWrite","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"getObjectMapper","parameterTypes":[] }, 
    {"name":"getObjectMappersForType","parameterTypes":["java.lang.Class"] }, 
    {"name":"getSupportedMediaTypes","parameterTypes":["java.lang.Class"] }, 
    {"name":"read","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.HttpInputMessage"] }, 
    {"name":"registerObjectMappersForType","parameterTypes":["java.lang.Class","java.util.function.Consumer"] }, 
    {"name":"setObjectMapper","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }, 
    {"name":"setPrettyPrint","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.http.converter.json.GsonHttpMessageConverter"}
,
{
  "name":"org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"}
,
{
  "name":"org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"setObjectMapper","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }]}
,
{
  "name":"org.springframework.http.server.PathContainer"}
,
{
  "name":"org.springframework.http.server.PathContainer$Options"}
,
{
  "name":"org.springframework.http.server.RequestPath"}
,
{
  "name":"org.springframework.http.server.reactive.HttpHandler"}
,
{
  "name":"org.springframework.instrument.classloading.LoadTimeWeaver"}
,
{
  "name":"org.springframework.integration.IntegrationPattern",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.IntegrationPatternType"}
,
{
  "name":"org.springframework.integration.annotation.IntegrationComponentScan",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"basePackageClasses","parameterTypes":[] }, 
    {"name":"basePackages","parameterTypes":[] }, 
    {"name":"excludeFilters","parameterTypes":[] }, 
    {"name":"includeFilters","parameterTypes":[] }, 
    {"name":"useDefaultFilters","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.integration.channel.AbstractExecutorChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.channel.AbstractMessageChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.channel.AbstractMessageChannel$ChannelInterceptorList"}
,
{
  "name":"org.springframework.integration.channel.AbstractSubscribableChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.channel.BroadcastCapableChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.channel.DefaultHeaderChannelRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"channelNameToChannel","parameterTypes":["java.lang.String"] }, 
    {"name":"channelToChannelName","parameterTypes":["java.lang.Object"] }, 
    {"name":"channelToChannelName","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"isRunning","parameterTypes":[] }, 
    {"name":"run","parameterTypes":[] }, 
    {"name":"runReaper","parameterTypes":[] }, 
    {"name":"size","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.integration.channel.DefaultHeaderChannelRegistry$MessageChannelWrapper"}
,
{
  "name":"org.springframework.integration.channel.ExecutorChannelInterceptorAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.channel.MessagePublishingErrorHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"handleError","parameterTypes":["java.lang.Throwable"] }]}
,
{
  "name":"org.springframework.integration.channel.NullChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getBeanName","parameterTypes":[] }, 
    {"name":"getComponentName","parameterTypes":[] }, 
    {"name":"getComponentType","parameterTypes":[] }, 
    {"name":"getIntegrationPatternType","parameterTypes":[] }, 
    {"name":"getOverrides","parameterTypes":[] }, 
    {"name":"isLoggingEnabled","parameterTypes":[] }, 
    {"name":"receive","parameterTypes":[] }, 
    {"name":"receive","parameterTypes":["long"] }, 
    {"name":"registerMetricsCaptor","parameterTypes":["org.springframework.integration.support.management.metrics.MetricsCaptor"] }, 
    {"name":"send","parameterTypes":["org.springframework.messaging.Message"] }, 
    {"name":"send","parameterTypes":["org.springframework.messaging.Message","long"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setLoggingEnabled","parameterTypes":["boolean"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.integration.channel.PublishSubscribeChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setIgnoreFailures","parameterTypes":["boolean"] }]}
,
{
  "name":"org.springframework.integration.channel.interceptor.GlobalChannelInterceptorWrapper"}
,
{
  "name":"org.springframework.integration.config.AbstractEvaluationContextFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getFunctions","parameterTypes":[] }, 
    {"name":"getPropertyAccessors","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setFunctions","parameterTypes":["java.util.Map"] }, 
    {"name":"setPropertyAccessors","parameterTypes":["java.util.Map"] }
  ]}
,
{
  "name":"org.springframework.integration.config.ConsumerEndpointFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"setHandler","parameterTypes":["java.lang.Object"] }, 
    {"name":"setInputChannelName","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.integration.config.ConverterRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]}
,
{
  "name":"org.springframework.integration.config.CustomConversionServiceFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getObject","parameterTypes":[] }]}
,
{
  "name":"org.springframework.integration.config.EnableIntegration",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.integration.config.EnableIntegrationManagement",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.integration.config.GlobalChannelInterceptorInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.integration.config.GlobalChannelInterceptorProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"afterSingletonsInstantiated","parameterTypes":[] }, 
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }
  ]}
,
{
  "name":"org.springframework.integration.config.IdGeneratorConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]}
,
{
  "name":"org.springframework.integration.config.IdempotentReceiverAutoProxyCreatorInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.integration.config.IntegrationConfigurationBeanFactoryPostProcessor"}
,
{
  "name":"org.springframework.integration.config.IntegrationConverterInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.integration.config.IntegrationEvaluationContextFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getObject","parameterTypes":[] }, 
    {"name":"getObjectType","parameterTypes":[] }, 
    {"name":"isSingleton","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.integration.config.IntegrationManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"managementConfigurer","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ],
  "queriedMethods":[
    {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }, 
    {"name":"setImportMetadata","parameterTypes":["org.springframework.core.type.AnnotationMetadata"] }
  ]}
,
{
  "name":"org.springframework.integration.config.IntegrationManagementConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"afterSingletonsInstantiated","parameterTypes":[] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.integration.config.IntegrationRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.integration.config.IntegrationSimpleEvaluationContextFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getObject","parameterTypes":[] }, 
    {"name":"getObjectType","parameterTypes":[] }, 
    {"name":"isSingleton","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.integration.config.MessageHandlerMethodFactoryCreatingFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setArgumentResolverMessageConverter","parameterTypes":["org.springframework.messaging.converter.MessageConverter"] }]}
,
{
  "name":"org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"afterSingletonsInstantiated","parameterTypes":[] }, 
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }
  ]}
,
{
  "name":"org.springframework.integration.config.annotation.MethodAnnotationPostProcessor"}
,
{
  "name":"org.springframework.integration.context.ExpressionCapable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.context.IntegrationContextUtils",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getIntegrationProperties","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]}
,
{
  "name":"org.springframework.integration.context.IntegrationObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.context.IntegrationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.context.Orderable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.core.ErrorMessagePublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getChannel","parameterTypes":[] }, 
    {"name":"getErrorMessageStrategy","parameterTypes":[] }, 
    {"name":"publish","parameterTypes":["java.lang.Throwable","org.springframework.core.AttributeAccessor"] }, 
    {"name":"publish","parameterTypes":["org.springframework.messaging.Message","java.lang.Throwable"] }, 
    {"name":"publish","parameterTypes":["org.springframework.messaging.Message","org.springframework.messaging.Message","java.lang.Throwable"] }, 
    {"name":"publish","parameterTypes":["org.springframework.messaging.Message","org.springframework.messaging.MessagingException"] }, 
    {"name":"publish","parameterTypes":["org.springframework.messaging.MessagingException"] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, 
    {"name":"setChannel","parameterTypes":["org.springframework.messaging.MessageChannel"] }, 
    {"name":"setChannelName","parameterTypes":["java.lang.String"] }, 
    {"name":"setChannelResolver","parameterTypes":["org.springframework.messaging.core.DestinationResolver"] }, 
    {"name":"setErrorMessageStrategy","parameterTypes":["org.springframework.integration.support.ErrorMessageStrategy"] }, 
    {"name":"setSendTimeout","parameterTypes":["long"] }
  ]}
,
{
  "name":"org.springframework.integration.core.MessagingTemplate"}
,
{
  "name":"org.springframework.integration.dispatcher.BroadcastingDispatcher"}
,
{
  "name":"org.springframework.integration.dispatcher.MessageDispatcher"}
,
{
  "name":"org.springframework.integration.dsl.BaseIntegrationFlowDefinition$ReplyProducerCleaner",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"postProcessBeforeDestruction","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"requiresDestruction","parameterTypes":["java.lang.Object"] }
  ]}
,
{
  "name":"org.springframework.integration.dsl.IntegrationComponentSpec"}
,
{
  "name":"org.springframework.integration.dsl.IntegrationFlow"}
,
{
  "name":"org.springframework.integration.dsl.StandardIntegrationFlow"}
,
{
  "name":"org.springframework.integration.dsl.context.DslIntegrationConfigurationInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.integration.dsl.context.IntegrationFlowBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"afterSingletonsInstantiated","parameterTypes":[] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]}
,
{
  "name":"org.springframework.integration.dsl.context.IntegrationFlowContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.dsl.context.IntegrationFlowContext$IntegrationFlowRegistration"}
,
{
  "name":"org.springframework.integration.dsl.context.StandardIntegrationFlowContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getRegistrationById","parameterTypes":["java.lang.String"] }, 
    {"name":"getRegistry","parameterTypes":[] }, 
    {"name":"isUseIdAsPrefix","parameterTypes":["java.lang.String"] }, 
    {"name":"messagingTemplateFor","parameterTypes":["java.lang.String"] }, 
    {"name":"registration","parameterTypes":["org.springframework.integration.dsl.IntegrationFlow"] }, 
    {"name":"remove","parameterTypes":["java.lang.String"] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }
  ]}
,
{
  "name":"org.springframework.integration.dsl.context.StandardIntegrationFlowContext$StandardIntegrationFlowRegistrationBuilder"}
,
{
  "name":"org.springframework.integration.endpoint.AbstractEndpoint"}
,
{
  "name":"org.springframework.integration.gateway.AnnotationGatewayProxyFactoryBean"}
,
{
  "name":"org.springframework.integration.gateway.GatewayProxyFactoryBean"}
,
{
  "name":"org.springframework.integration.graph.IntegrationGraphServer"}
,
{
  "name":"org.springframework.integration.handler.AbstractMessageHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"handleMessage","parameterTypes":["org.springframework.messaging.Message"] }, 
    {"name":"onComplete","parameterTypes":[] }, 
    {"name":"onError","parameterTypes":["java.lang.Throwable"] }, 
    {"name":"onNext","parameterTypes":["java.lang.Object"] }, 
    {"name":"onNext","parameterTypes":["org.springframework.messaging.Message"] }, 
    {"name":"onSubscribe","parameterTypes":["org.reactivestreams.Subscription"] }
  ]}
,
{
  "name":"org.springframework.integration.handler.LoggingHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getComponentType","parameterTypes":[] }]}
,
{
  "name":"org.springframework.integration.handler.LoggingHandler$Level"}
,
{
  "name":"org.springframework.integration.handler.MessageHandlerSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getIntegrationPatternType","parameterTypes":[] }, 
    {"name":"getManagedName","parameterTypes":[] }, 
    {"name":"getManagedType","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getOverrides","parameterTypes":[] }, 
    {"name":"isLoggingEnabled","parameterTypes":[] }, 
    {"name":"registerMetricsCaptor","parameterTypes":["org.springframework.integration.support.management.metrics.MetricsCaptor"] }, 
    {"name":"setLoggingEnabled","parameterTypes":["boolean"] }, 
    {"name":"setManagedName","parameterTypes":["java.lang.String"] }, 
    {"name":"setManagedType","parameterTypes":["java.lang.String"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"setShouldTrack","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.integration.jmx.config.EnableIntegrationMBeanExport"}
,
{
  "name":"org.springframework.integration.jmx.config.JmxIntegrationConfigurationInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.integration.json.JsonNodeWrapperToJsonNodeConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"getConvertibleTypes","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.integration.leader.event.AbstractLeaderEvent"}
,
{
  "name":"org.springframework.integration.monitor.IntegrationMBeanExporter"}
,
{
  "name":"org.springframework.integration.scheduling.PollerMetadata",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.support.DefaultMessageBuilderFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setReadOnlyHeaders","parameterTypes":["java.lang.String[]"] }]}
,
{
  "name":"org.springframework.integration.support.ErrorMessageStrategy"}
,
{
  "name":"org.springframework.integration.support.MessageBuilder"}
,
{
  "name":"org.springframework.integration.support.MessageBuilderFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.support.SmartLifecycleRoleController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]}
,
{
  "name":"org.springframework.integration.support.channel.BeanFactoryChannelResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"resolveDestination","parameterTypes":["java.lang.String"] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }
  ]}
,
{
  "name":"org.springframework.integration.support.channel.HeaderChannelRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.support.context.NamedComponent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }
  ]}
,
{
  "name":"org.springframework.integration.support.converter.DefaultDatatypeChannelMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"fromMessage","parameterTypes":["org.springframework.messaging.Message","java.lang.Class"] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, 
    {"name":"toMessage","parameterTypes":["java.lang.Object","org.springframework.messaging.MessageHeaders"] }
  ]}
,
{
  "name":"org.springframework.integration.support.management.IntegrationManagedResource",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.integration.support.management.IntegrationManagement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.support.management.IntegrationManagement$ManagementOverrides"}
,
{
  "name":"org.springframework.integration.support.management.ManageableLifecycle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.support.management.SubscribableChannelManagement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.support.management.TrackableComponent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.support.management.metrics.CounterFacade"}
,
{
  "name":"org.springframework.integration.support.management.metrics.MeterFacade"}
,
{
  "name":"org.springframework.integration.support.management.metrics.MetricsCaptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.integration.support.management.metrics.MetricsCaptor$CounterBuilder"}
,
{
  "name":"org.springframework.integration.support.management.metrics.MetricsCaptor$GaugeBuilder"}
,
{
  "name":"org.springframework.integration.support.management.metrics.MetricsCaptor$TimerBuilder"}
,
{
  "name":"org.springframework.integration.support.management.metrics.SampleFacade"}
,
{
  "name":"org.springframework.integration.support.management.metrics.TimerFacade"}
,
{
  "name":"org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"counterBuilder","parameterTypes":["java.lang.String"] }, 
    {"name":"gaugeBuilder","parameterTypes":["java.lang.String","java.lang.Object","java.util.function.ToDoubleFunction"] }, 
    {"name":"removeMeter","parameterTypes":["org.springframework.integration.support.management.metrics.MeterFacade"] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"timerBuilder","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"micrometerMetricsCaptor","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }
  ]}
,
{
  "name":"org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptorImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.integration.transaction.TransactionSynchronizationFactory"}
,
{
  "name":"org.springframework.jdbc.core.JdbcTemplate"}
,
{
  "name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"}
,
{
  "name":"org.springframework.jdbc.datasource.init.DatabasePopulator"}
,
{
  "name":"org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource"}
,
{
  "name":"org.springframework.jms.annotation.EnableJms",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.jms.core.JmsMessagingTemplate"}
,
{
  "name":"org.springframework.jms.core.JmsTemplate"}
,
{
  "name":"org.springframework.jmx.export.MBeanExporter"}
,
{
  "name":"org.springframework.jmx.export.annotation.ManagedAttribute",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.jmx.export.annotation.ManagedMetric",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"metricType","parameterTypes":[] }]}
,
{
  "name":"org.springframework.jmx.export.annotation.ManagedOperation",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.jmx.export.annotation.ManagedResource",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.lang.Nullable"}
,
{
  "name":"org.springframework.mail.MailSender"}
,
{
  "name":"org.springframework.mail.javamail.JavaMailSenderImpl"}
,
{
  "name":"org.springframework.messaging.Message"}
,
{
  "name":"org.springframework.messaging.MessageChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.messaging.MessageHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.messaging.MessageHeaders"}
,
{
  "name":"org.springframework.messaging.MessagingException"}
,
{
  "name":"org.springframework.messaging.PollableChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.messaging.SubscribableChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.messaging.converter.CompositeMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"fromMessage","parameterTypes":["org.springframework.messaging.Message","java.lang.Class"] }, 
    {"name":"fromMessage","parameterTypes":["org.springframework.messaging.Message","java.lang.Class","java.lang.Object"] }, 
    {"name":"getConverters","parameterTypes":[] }, 
    {"name":"toMessage","parameterTypes":["java.lang.Object","org.springframework.messaging.MessageHeaders"] }, 
    {"name":"toMessage","parameterTypes":["java.lang.Object","org.springframework.messaging.MessageHeaders","java.lang.Object"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.messaging.converter.MessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.messaging.converter.SmartMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.messaging.core.DestinationResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.messaging.handler.annotation.support.MessageHandlerMethodFactory"}
,
{
  "name":"org.springframework.messaging.rsocket.RSocketRequester"}
,
{
  "name":"org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler"}
,
{
  "name":"org.springframework.messaging.support.ChannelInterceptor"}
,
{
  "name":"org.springframework.messaging.support.ErrorMessage"}
,
{
  "name":"org.springframework.messaging.support.InterceptableChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.messaging.support.MessageHandlingRunnable"}
,
{
  "name":"org.springframework.nativex.NativeListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.orm.jpa.AbstractEntityManagerFactoryBean"}
,
{
  "name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"}
,
{
  "name":"org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.retry.annotation.EnableRetry",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.retry.annotation.RetryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }],
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getAdvice","parameterTypes":[] }, 
    {"name":"getClassFilter","parameterTypes":[] }, 
    {"name":"getInterfaces","parameterTypes":[] }, 
    {"name":"getPointcut","parameterTypes":[] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, 
    {"name":"validateInterfaces","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.retry.annotation.Retryable"}
,
{
  "name":"org.springframework.retry.interceptor.RetryOperationsInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.retry.support.RetryTemplate"}
,
{
  "name":"org.springframework.scheduling.SchedulingException"}
,
{
  "name":"org.springframework.scheduling.SchedulingTaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.scheduling.TaskScheduler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.scheduling.Trigger"}
,
{
  "name":"org.springframework.scheduling.annotation.AbstractAsyncConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"setConfigurers","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }]}
,
{
  "name":"org.springframework.scheduling.annotation.Async",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]}
,
{
  "name":"org.springframework.scheduling.annotation.AsyncConfigurationSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.scheduling.annotation.EnableAsync",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"annotation","parameterTypes":[] }, 
    {"name":"mode","parameterTypes":[] }, 
    {"name":"order","parameterTypes":[] }, 
    {"name":"proxyTargetClass","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.scheduling.annotation.EnableScheduling",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.scheduling.annotation.ProxyAsyncConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"asyncAdvisor","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.scheduling.annotation.Scheduled",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"timeUnit","parameterTypes":[] }]}
,
{
  "name":"org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"requiresDestruction","parameterTypes":["java.lang.Object"] }
  ]}
,
{
  "name":"org.springframework.scheduling.annotation.Schedules",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.scheduling.annotation.SchedulingConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"scheduledAnnotationProcessor","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.scheduling.annotation.SchedulingConfigurer"}
,
{
  "name":"org.springframework.scheduling.concurrent.CustomizableThreadFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"newThread","parameterTypes":["java.lang.Runnable"] }]}
,
{
  "name":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"initialize","parameterTypes":[] }, 
    {"name":"setAwaitTerminationMillis","parameterTypes":["long"] }, 
    {"name":"setAwaitTerminationSeconds","parameterTypes":["int"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setRejectedExecutionHandler","parameterTypes":["java.util.concurrent.RejectedExecutionHandler"] }, 
    {"name":"setThreadFactory","parameterTypes":["java.util.concurrent.ThreadFactory"] }, 
    {"name":"setThreadNamePrefix","parameterTypes":["java.lang.String"] }, 
    {"name":"setWaitForTasksToCompleteOnShutdown","parameterTypes":["boolean"] }, 
    {"name":"shutdown","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"execute","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"execute","parameterTypes":["java.lang.Runnable","long"] }, 
    {"name":"submit","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"submit","parameterTypes":["java.util.concurrent.Callable"] }, 
    {"name":"submitListenable","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"submitListenable","parameterTypes":["java.util.concurrent.Callable"] }
  ]}
,
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"execute","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"execute","parameterTypes":["java.lang.Runnable","long"] }, 
    {"name":"getClock","parameterTypes":[] }, 
    {"name":"schedule","parameterTypes":["java.lang.Runnable","java.util.Date"] }, 
    {"name":"schedule","parameterTypes":["java.lang.Runnable","org.springframework.scheduling.Trigger"] }, 
    {"name":"scheduleAtFixedRate","parameterTypes":["java.lang.Runnable","long"] }, 
    {"name":"scheduleAtFixedRate","parameterTypes":["java.lang.Runnable","java.util.Date","long"] }, 
    {"name":"scheduleWithFixedDelay","parameterTypes":["java.lang.Runnable","long"] }, 
    {"name":"scheduleWithFixedDelay","parameterTypes":["java.lang.Runnable","java.util.Date","long"] }, 
    {"name":"submit","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"submit","parameterTypes":["java.util.concurrent.Callable"] }, 
    {"name":"submitListenable","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"submitListenable","parameterTypes":["java.util.concurrent.Callable"] }
  ]}
,
{
  "name":"org.springframework.scheduling.config.ScheduledTaskHolder",
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.scheduling.quartz.ResourceLoaderClassLoadHelper",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.scheduling.quartz.SchedulerAccessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"setCalendars","parameterTypes":["java.util.Map"] }, 
    {"name":"setGlobalJobListeners","parameterTypes":["org.quartz.JobListener[]"] }, 
    {"name":"setGlobalTriggerListeners","parameterTypes":["org.quartz.TriggerListener[]"] }, 
    {"name":"setJobDetails","parameterTypes":["org.quartz.JobDetail[]"] }, 
    {"name":"setJobSchedulingDataLocation","parameterTypes":["java.lang.String"] }, 
    {"name":"setJobSchedulingDataLocations","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setOverwriteExistingJobs","parameterTypes":["boolean"] }, 
    {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }, 
    {"name":"setSchedulerListeners","parameterTypes":["org.quartz.SchedulerListener[]"] }, 
    {"name":"setTransactionManager","parameterTypes":["org.springframework.transaction.PlatformTransactionManager"] }, 
    {"name":"setTriggers","parameterTypes":["org.quartz.Trigger[]"] }
  ]}
,
{
  "name":"org.springframework.scheduling.quartz.SchedulerFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getObject","parameterTypes":[] }, 
    {"name":"getObjectType","parameterTypes":[] }, 
    {"name":"getPhase","parameterTypes":[] }, 
    {"name":"isAutoStartup","parameterTypes":[] }, 
    {"name":"isRunning","parameterTypes":[] }, 
    {"name":"isSingleton","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.security.access.AccessDecisionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.access.AccessDeniedException"}
,
{
  "name":"org.springframework.security.access.ConfigAttribute"}
,
{
  "name":"org.springframework.security.access.SecurityMetadataSource"}
,
{
  "name":"org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.security.access.event.AbstractAuthorizationEvent"}
,
{
  "name":"org.springframework.security.access.event.AuthenticationCredentialsNotFoundEvent"}
,
{
  "name":"org.springframework.security.access.event.AuthorizationFailureEvent"}
,
{
  "name":"org.springframework.security.access.expression.AbstractSecurityExpressionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"createEvaluationContext","parameterTypes":["org.springframework.security.core.Authentication","java.lang.Object"] }, 
    {"name":"getExpressionParser","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setExpressionParser","parameterTypes":["org.springframework.expression.ExpressionParser"] }, 
    {"name":"setPermissionEvaluator","parameterTypes":["org.springframework.security.access.PermissionEvaluator"] }, 
    {"name":"setRoleHierarchy","parameterTypes":["org.springframework.security.access.hierarchicalroles.RoleHierarchy"] }
  ]}
,
{
  "name":"org.springframework.security.access.expression.SecurityExpressionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.access.expression.method.MethodSecurityExpressionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.access.intercept.AbstractSecurityInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getAccessDecisionManager","parameterTypes":[] }, 
    {"name":"getAfterInvocationManager","parameterTypes":[] }, 
    {"name":"getAuthenticationManager","parameterTypes":[] }, 
    {"name":"getRunAsManager","parameterTypes":[] }, 
    {"name":"isAlwaysReauthenticate","parameterTypes":[] }, 
    {"name":"isRejectPublicInvocations","parameterTypes":[] }, 
    {"name":"isValidateConfigAttributes","parameterTypes":[] }, 
    {"name":"setAccessDecisionManager","parameterTypes":["org.springframework.security.access.AccessDecisionManager"] }, 
    {"name":"setAfterInvocationManager","parameterTypes":["org.springframework.security.access.intercept.AfterInvocationManager"] }, 
    {"name":"setAlwaysReauthenticate","parameterTypes":["boolean"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, 
    {"name":"setAuthenticationManager","parameterTypes":["org.springframework.security.authentication.AuthenticationManager"] }, 
    {"name":"setMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }, 
    {"name":"setPublishAuthorizationSuccess","parameterTypes":["boolean"] }, 
    {"name":"setRejectPublicInvocations","parameterTypes":["boolean"] }, 
    {"name":"setRunAsManager","parameterTypes":["org.springframework.security.access.intercept.RunAsManager"] }, 
    {"name":"setValidateConfigAttributes","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.security.access.intercept.AfterInvocationManager"}
,
{
  "name":"org.springframework.security.access.intercept.InterceptorStatusToken"}
,
{
  "name":"org.springframework.security.access.intercept.RunAsManager"}
,
{
  "name":"org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getSecureObjectClass","parameterTypes":[] }, 
    {"name":"invoke","parameterTypes":["org.aopalliance.intercept.MethodInvocation"] }, 
    {"name":"obtainSecurityMetadataSource","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","org.springframework.security.access.method.MethodSecurityMetadataSource","java.lang.String"] }]}
,
{
  "name":"org.springframework.security.access.method.AbstractFallbackMethodSecurityMetadataSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"getAttributes","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }]}
,
{
  "name":"org.springframework.security.access.method.AbstractMethodSecurityMetadataSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"getAttributes","parameterTypes":["java.lang.Object"] }, 
    {"name":"supports","parameterTypes":["java.lang.Class"] }
  ]}
,
{
  "name":"org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.security.access.method.MethodSecurityMetadataSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.access.vote.AbstractAccessDecisionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getDecisionVoters","parameterTypes":[] }, 
    {"name":"isAllowIfAllAbstainDecisions","parameterTypes":[] }, 
    {"name":"setAllowIfAllAbstainDecisions","parameterTypes":["boolean"] }, 
    {"name":"setMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }, 
    {"name":"supports","parameterTypes":["java.lang.Class"] }, 
    {"name":"supports","parameterTypes":["org.springframework.security.access.ConfigAttribute"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.security.access.vote.AffirmativeBased",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"decide","parameterTypes":["org.springframework.security.core.Authentication","java.lang.Object","java.util.Collection"] }]}
,
{
  "name":"org.springframework.security.authentication.AnonymousAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"authenticate","parameterTypes":["org.springframework.security.core.Authentication"] }, 
    {"name":"setMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }, 
    {"name":"supports","parameterTypes":["java.lang.Class"] }
  ]}
,
{
  "name":"org.springframework.security.authentication.AuthenticationEventPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.authentication.AuthenticationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.authentication.AuthenticationManagerResolver"}
,
{
  "name":"org.springframework.security.authentication.AuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.authentication.AuthenticationTrustResolver"}
,
{
  "name":"org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"publishAuthenticationFailure","parameterTypes":["org.springframework.security.core.AuthenticationException","org.springframework.security.core.Authentication"] }, 
    {"name":"publishAuthenticationSuccess","parameterTypes":["org.springframework.security.core.Authentication"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }
  ]}
,
{
  "name":"org.springframework.security.authentication.ProviderManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"authenticate","parameterTypes":["org.springframework.security.core.Authentication"] }, 
    {"name":"setMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }
  ]}
,
{
  "name":"org.springframework.security.authentication.ReactiveAuthenticationManager"}
,
{
  "name":"org.springframework.security.authentication.event.AbstractAuthenticationEvent"}
,
{
  "name":"org.springframework.security.authentication.event.AbstractAuthenticationFailureEvent"}
,
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
  "queriedMethods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]}
,
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
  "queriedMethods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]}
,
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
  "queriedMethods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]}
,
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
  "queriedMethods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]}
,
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
  "queriedMethods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]}
,
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
  "queriedMethods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]}
,
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
  "queriedMethods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]}
,
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
  "queriedMethods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]}
,
{
  "name":"org.springframework.security.authentication.event.AuthenticationSuccessEvent"}
,
{
  "name":"org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"apply","parameterTypes":["org.springframework.security.config.annotation.SecurityConfigurer"] }, 
    {"name":"apply","parameterTypes":["org.springframework.security.config.annotation.SecurityConfigurerAdapter"] }, 
    {"name":"getConfigurer","parameterTypes":["java.lang.Class"] }, 
    {"name":"getConfigurers","parameterTypes":["java.lang.Class"] }, 
    {"name":"getOrBuild","parameterTypes":[] }, 
    {"name":"getSharedObject","parameterTypes":["java.lang.Class"] }, 
    {"name":"getSharedObjects","parameterTypes":[] }, 
    {"name":"objectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }, 
    {"name":"removeConfigurer","parameterTypes":["java.lang.Class"] }, 
    {"name":"removeConfigurers","parameterTypes":["java.lang.Class"] }, 
    {"name":"setSharedObject","parameterTypes":["java.lang.Class","java.lang.Object"] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.AbstractSecurityBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"build","parameterTypes":[] }, 
    {"name":"getObject","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.ObjectPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.security.config.annotation.SecurityBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.config.annotation.SecurityConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.config.annotation.SecurityConfigurerAdapter"}
,
{
  "name":"org.springframework.security.config.annotation.authentication.ProviderManagerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"authenticationEventPublisher","parameterTypes":["org.springframework.security.authentication.AuthenticationEventPublisher"] }, 
    {"name":"authenticationProvider","parameterTypes":["org.springframework.security.authentication.AuthenticationProvider"] }, 
    {"name":"eraseCredentials","parameterTypes":["boolean"] }, 
    {"name":"getDefaultUserDetailsService","parameterTypes":[] }, 
    {"name":"isConfigured","parameterTypes":[] }, 
    {"name":"ldapAuthentication","parameterTypes":[] }, 
    {"name":"parentAuthenticationManager","parameterTypes":["org.springframework.security.authentication.AuthenticationManager"] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"authenticationManagerBuilder","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor","org.springframework.context.ApplicationContext"] }, 
    {"name":"enableGlobalAuthenticationAutowiredConfigurer","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"initializeAuthenticationProviderBeanManagerConfigurer","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"initializeUserDetailsBeanManagerConfigurer","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setGlobalAuthenticationConfigurers","parameterTypes":["java.util.List"] }, 
    {"name":"setObjectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"inMemoryAuthentication","parameterTypes":[] }, 
    {"name":"jdbcAuthentication","parameterTypes":[] }, 
    {"name":"userDetailsService","parameterTypes":["org.springframework.security.core.userdetails.UserDetailsService"] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, 
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"configure","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, 
    {"name":"configure","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, 
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, 
    {"name":"init","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer"}
,
{
  "name":"org.springframework.security.config.annotation.authentication.configurers.provisioning.InMemoryUserDetailsManagerConfigurer"}
,
{
  "name":"org.springframework.security.config.annotation.authentication.configurers.provisioning.JdbcUserDetailsManagerConfigurer"}
,
{
  "name":"org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer"}
,
{
  "name":"org.springframework.security.config.annotation.authentication.configurers.userdetails.UserDetailsAwareConfigurer"}
,
{
  "name":"org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"afterSingletonsInstantiated","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"postProcess","parameterTypes":["java.lang.Object"] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"objectPostProcessor","parameterTypes":["org.springframework.beans.factory.config.AutowireCapableBeanFactory"] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"mode","parameterTypes":[] }]}
,
{
  "name":"org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"methodSecurityInterceptor","parameterTypes":["org.springframework.security.access.method.MethodSecurityMetadataSource"] }, 
    {"name":"methodSecurityMetadataSource","parameterTypes":[] }, 
    {"name":"preInvocationAuthorizationAdvice","parameterTypes":[] }, 
    {"name":"setObjectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.method.configuration.GlobalMethodSecuritySelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"jsr250MethodSecurityMetadataSource","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.method.configuration.MethodSecurityMetadataSourceAdvisorRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.security.config.annotation.web.WebSecurityConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.config.annotation.web.builders.HttpSecurity"}
,
{
  "name":"org.springframework.security.config.annotation.web.builders.WebSecurity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]}
,
{
  "name":"org.springframework.security.config.annotation.web.builders.WebSecurity$IgnoredRequestConfigurer"}
,
{
  "name":"org.springframework.security.config.annotation.web.configuration.AutowiredWebSecurityConfigurersIgnoreParents",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getWebSecurityConfigurers","parameterTypes":[] }]}
,
{
  "name":"org.springframework.security.config.annotation.web.configuration.EnableWebSecurity",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setAuthenticationConfiguration","parameterTypes":["org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"] }, 
    {"name":"setObjectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.web.configuration.OAuth2ImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.security.config.annotation.web.configuration.SpringWebMvcImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"requestDataValueProcessor","parameterTypes":[] }
  ],
  "queriedMethods":[
    {"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"autowiredWebSecurityConfigurersIgnoreParents","parameterTypes":["org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, 
    {"name":"conversionServicePostProcessor","parameterTypes":[] }, 
    {"name":"delegatingApplicationListener","parameterTypes":[] }, 
    {"name":"privilegeEvaluator","parameterTypes":[] }, 
    {"name":"setFilterChainProxySecurityConfigurer","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor","java.util.List"] }, 
    {"name":"springSecurityFilterChain","parameterTypes":[] }, 
    {"name":"webSecurityExpressionHandler","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setAuthenticationConfiguration","parameterTypes":["org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"] }, 
    {"name":"setContentNegotationStrategy","parameterTypes":["org.springframework.web.accept.ContentNegotiationStrategy"] }, 
    {"name":"setObjectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }
  ]}
,
{
  "name":"org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry"}
,
{
  "name":"org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"}
,
{
  "name":"org.springframework.security.config.http.SessionCreationPolicy"}
,
{
  "name":"org.springframework.security.context.DelegatingApplicationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]}
,
{
  "name":"org.springframework.security.core.Authentication"}
,
{
  "name":"org.springframework.security.core.AuthenticationException"}
,
{
  "name":"org.springframework.security.core.userdetails.User"}
,
{
  "name":"org.springframework.security.core.userdetails.UserDetails"}
,
{
  "name":"org.springframework.security.core.userdetails.UserDetailsPasswordService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.core.userdetails.UserDetailsService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.core.userdetails.UsernameNotFoundException"}
,
{
  "name":"org.springframework.security.core.userdetails.memory.UserAttribute"}
,
{
  "name":"org.springframework.security.crypto.encrypt.TextEncryptor"}
,
{
  "name":"org.springframework.security.crypto.password.AbstractPasswordEncoder"}
,
{
  "name":"org.springframework.security.crypto.password.PasswordEncoder"}
,
{
  "name":"org.springframework.security.provisioning.InMemoryUserDetailsManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"changePassword","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"createUser","parameterTypes":["org.springframework.security.core.userdetails.UserDetails"] }, 
    {"name":"deleteUser","parameterTypes":["java.lang.String"] }, 
    {"name":"loadUserByUsername","parameterTypes":["java.lang.String"] }, 
    {"name":"updatePassword","parameterTypes":["org.springframework.security.core.userdetails.UserDetails","java.lang.String"] }, 
    {"name":"updateUser","parameterTypes":["org.springframework.security.core.userdetails.UserDetails"] }, 
    {"name":"userExists","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.security.provisioning.UserDetailsManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.rsa.crypto.RsaSecretEncryptor"}
,
{
  "name":"org.springframework.security.web.AuthenticationEntryPoint"}
,
{
  "name":"org.springframework.security.web.FilterChainProxy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"doFilter","parameterTypes":["javax.servlet.ServletRequest","javax.servlet.ServletResponse","javax.servlet.FilterChain"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.security.web.FilterChainProxy$FilterChainValidator"}
,
{
  "name":"org.springframework.security.web.FilterInvocation"}
,
{
  "name":"org.springframework.security.web.SecurityFilterChain"}
,
{
  "name":"org.springframework.security.web.access.AccessDeniedHandler"}
,
{
  "name":"org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"isAllowed","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","org.springframework.security.core.Authentication"] }, 
    {"name":"isAllowed","parameterTypes":["java.lang.String","org.springframework.security.core.Authentication"] }, 
    {"name":"setServletContext","parameterTypes":["javax.servlet.ServletContext"] }
  ]}
,
{
  "name":"org.springframework.security.web.access.ExceptionTranslationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"doFilter","parameterTypes":["javax.servlet.ServletRequest","javax.servlet.ServletResponse","javax.servlet.FilterChain"] }, 
    {"name":"setMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }
  ]}
,
{
  "name":"org.springframework.security.web.access.WebInvocationPrivilegeEvaluator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.web.access.channel.ChannelDecisionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.web.access.channel.ChannelDecisionManagerImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"decide","parameterTypes":["org.springframework.security.web.FilterInvocation","java.util.Collection"] }, 
    {"name":"supports","parameterTypes":["org.springframework.security.access.ConfigAttribute"] }
  ]}
,
{
  "name":"org.springframework.security.web.access.channel.ChannelEntryPoint"}
,
{
  "name":"org.springframework.security.web.access.channel.ChannelProcessingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"doFilter","parameterTypes":["javax.servlet.ServletRequest","javax.servlet.ServletResponse","javax.servlet.FilterChain"] }
  ]}
,
{
  "name":"org.springframework.security.web.access.channel.ChannelProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.web.access.channel.InsecureChannelProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"decide","parameterTypes":["org.springframework.security.web.FilterInvocation","java.util.Collection"] }, 
    {"name":"supports","parameterTypes":["org.springframework.security.access.ConfigAttribute"] }
  ]}
,
{
  "name":"org.springframework.security.web.access.channel.SecureChannelProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"decide","parameterTypes":["org.springframework.security.web.FilterInvocation","java.util.Collection"] }, 
    {"name":"supports","parameterTypes":["org.springframework.security.access.ConfigAttribute"] }
  ]}
,
{
  "name":"org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"setDefaultRolePrefix","parameterTypes":["java.lang.String"] }, 
    {"name":"setTrustResolver","parameterTypes":["org.springframework.security.authentication.AuthenticationTrustResolver"] }
  ]}
,
{
  "name":"org.springframework.security.web.access.expression.WebSecurityExpressionRoot"}
,
{
  "name":"org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource"}
,
{
  "name":"org.springframework.security.web.access.intercept.FilterSecurityInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"doFilter","parameterTypes":["javax.servlet.ServletRequest","javax.servlet.ServletResponse","javax.servlet.FilterChain"] }, 
    {"name":"getSecureObjectClass","parameterTypes":[] }, 
    {"name":"init","parameterTypes":["javax.servlet.FilterConfig"] }, 
    {"name":"obtainSecurityMetadataSource","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.security.web.authentication.AuthenticationFailureHandler"}
,
{
  "name":"org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"onAuthentication","parameterTypes":["org.springframework.security.core.Authentication","javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse"] }, 
    {"name":"setAlwaysCreateSession","parameterTypes":["boolean"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }
  ]}
,
{
  "name":"org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"onAuthentication","parameterTypes":["org.springframework.security.core.Authentication","javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.security.web.authentication.session.SessionAuthenticationException"}
,
{
  "name":"org.springframework.security.web.authentication.session.SessionAuthenticationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.security.web.authentication.switchuser.AuthenticationSwitchUserEvent"}
,
{
  "name":"org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer"}
,
{
  "name":"org.springframework.security.web.context.SecurityContextPersistenceFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"doFilter","parameterTypes":["javax.servlet.ServletRequest","javax.servlet.ServletResponse","javax.servlet.FilterChain"] }]}
,
{
  "name":"org.springframework.security.web.firewall.FirewalledRequest"}
,
{
  "name":"org.springframework.security.web.firewall.HttpFirewall"}
,
{
  "name":"org.springframework.security.web.firewall.RequestRejectedHandler"}
,
{
  "name":"org.springframework.security.web.savedrequest.RequestCacheAwareFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"doFilter","parameterTypes":["javax.servlet.ServletRequest","javax.servlet.ServletResponse","javax.servlet.FilterChain"] }]}
,
{
  "name":"org.springframework.security.web.server.WebFilterChainProxy"}
,
{
  "name":"org.springframework.security.web.server.csrf.CsrfToken"}
,
{
  "name":"org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getExtraHiddenFields","parameterTypes":["javax.servlet.http.HttpServletRequest"] }, 
    {"name":"processAction","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.String","java.lang.String"] }, 
    {"name":"processFormFieldValue","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.String","java.lang.String","java.lang.String"] }, 
    {"name":"processUrl","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.security.web.servletapi.HttpServletRequestFactory"}
,
{
  "name":"org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"doFilter","parameterTypes":["javax.servlet.ServletRequest","javax.servlet.ServletResponse","javax.servlet.FilterChain"] }
  ]}
,
{
  "name":"org.springframework.security.web.session.InvalidSessionStrategy"}
,
{
  "name":"org.springframework.security.web.session.SessionManagementFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"doFilter","parameterTypes":["javax.servlet.ServletRequest","javax.servlet.ServletResponse","javax.servlet.FilterChain"] }]}
,
{
  "name":"org.springframework.security.web.util.ThrowableAnalyzer"}
,
{
  "name":"org.springframework.security.web.util.matcher.RequestMatcher"}
,
{
  "name":"org.springframework.stereotype.Component",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.stereotype.Controller",
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.stereotype.Indexed",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.transaction.PlatformTransactionManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.transaction.ReactiveTransactionManager"}
,
{
  "name":"org.springframework.transaction.TransactionDefinition",
  "allDeclaredFields":true,
  "allPublicFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.transaction.TransactionException"}
,
{
  "name":"org.springframework.transaction.TransactionManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.transaction.TransactionStatus"}
,
{
  "name":"org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"setConfigurers","parameterTypes":["java.util.Collection"] }, 
    {"name":"transactionalEventListenerFactory","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"isCandidateClass","parameterTypes":["java.lang.Class"] }
  ]}
,
{
  "name":"org.springframework.transaction.annotation.EnableTransactionManagement",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"mode","parameterTypes":[] }, 
    {"name":"order","parameterTypes":[] }, 
    {"name":"proxyTargetClass","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"transactionAdvisor","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource","org.springframework.transaction.interceptor.TransactionInterceptor"] }, 
    {"name":"transactionAttributeSource","parameterTypes":[] }, 
    {"name":"transactionInterceptor","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource"] }
  ]}
,
{
  "name":"org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.springframework.transaction.annotation.TransactionManagementConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.transaction.annotation.Transactional",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"isolation","parameterTypes":[] }, 
    {"name":"label","parameterTypes":[] }, 
    {"name":"noRollbackFor","parameterTypes":[] }, 
    {"name":"noRollbackForClassName","parameterTypes":[] }, 
    {"name":"propagation","parameterTypes":[] }, 
    {"name":"readOnly","parameterTypes":[] }, 
    {"name":"rollbackFor","parameterTypes":[] }, 
    {"name":"rollbackForClassName","parameterTypes":[] }, 
    {"name":"timeout","parameterTypes":[] }, 
    {"name":"timeoutString","parameterTypes":[] }, 
    {"name":"transactionManager","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.transaction.event.TransactionalEventListenerFactory"}
,
{
  "name":"org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"getTransactionAttribute","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }, 
    {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }
  ]}
,
{
  "name":"org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"getPointcut","parameterTypes":[] }]}
,
{
  "name":"org.springframework.transaction.interceptor.TransactionAspectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"currentTransactionStatus","parameterTypes":[] }, 
    {"name":"getTransactionAttributeSource","parameterTypes":[] }, 
    {"name":"getTransactionManager","parameterTypes":[] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, 
    {"name":"setTransactionAttributeSource","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource"] }, 
    {"name":"setTransactionAttributeSources","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource[]"] }, 
    {"name":"setTransactionAttributes","parameterTypes":["java.util.Properties"] }, 
    {"name":"setTransactionManager","parameterTypes":["org.springframework.transaction.TransactionManager"] }, 
    {"name":"setTransactionManagerBeanName","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.transaction.interceptor.TransactionAttribute"}
,
{
  "name":"org.springframework.transaction.interceptor.TransactionAttributeSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true}
,
{
  "name":"org.springframework.transaction.interceptor.TransactionInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[{"name":"invoke","parameterTypes":["org.aopalliance.intercept.MethodInvocation"] }]}
,
{
  "name":"org.springframework.transaction.jta.JtaTransactionManager"}
,
{
  "name":"org.springframework.transaction.reactive.TransactionalOperator"}
,
{
  "name":"org.springframework.transaction.support.AbstractPlatformTransactionManager"}
,
{
  "name":"org.springframework.transaction.support.DefaultTransactionDefinition",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getIsolationLevel","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getPropagationBehavior","parameterTypes":[] }, 
    {"name":"getTimeout","parameterTypes":[] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"isReadOnly","parameterTypes":[] }, 
    {"name":"setIsolationLevel","parameterTypes":["int"] }, 
    {"name":"setIsolationLevelName","parameterTypes":["java.lang.String"] }, 
    {"name":"setName","parameterTypes":["java.lang.String"] }, 
    {"name":"setPropagationBehavior","parameterTypes":["int"] }, 
    {"name":"setPropagationBehaviorName","parameterTypes":["java.lang.String"] }, 
    {"name":"setReadOnly","parameterTypes":["boolean"] }, 
    {"name":"setTimeout","parameterTypes":["int"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.transaction.support.TransactionCallback"}
,
{
  "name":"org.springframework.transaction.support.TransactionOperations",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.transaction.support.TransactionTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"execute","parameterTypes":["org.springframework.transaction.support.TransactionCallback"] }
  ]}
,
{
  "name":"org.springframework.ui.context.ThemeSource"}
,
{
  "name":"org.springframework.util.AntPathMatcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"combine","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"extractPathWithinPattern","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"extractUriTemplateVariables","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"getPatternComparator","parameterTypes":["java.lang.String"] }, 
    {"name":"isPattern","parameterTypes":["java.lang.String"] }, 
    {"name":"match","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"matchStart","parameterTypes":["java.lang.String","java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.util.AntPathMatcher$AntPathStringMatcher"}
,
{
  "name":"org.springframework.util.CustomizableThreadCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"createThread","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"getThreadGroup","parameterTypes":[] }, 
    {"name":"getThreadNamePrefix","parameterTypes":[] }, 
    {"name":"getThreadPriority","parameterTypes":[] }, 
    {"name":"isDaemon","parameterTypes":[] }, 
    {"name":"setDaemon","parameterTypes":["boolean"] }, 
    {"name":"setThreadGroup","parameterTypes":["java.lang.ThreadGroup"] }, 
    {"name":"setThreadGroupName","parameterTypes":["java.lang.String"] }, 
    {"name":"setThreadPriority","parameterTypes":["int"] }
  ]}
,
{
  "name":"org.springframework.util.ErrorHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.util.MimeType"}
,
{
  "name":"org.springframework.util.MultiValueMap"}
,
{
  "name":"org.springframework.util.PathMatcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.util.PropertiesPersister"}
,
{
  "name":"org.springframework.util.StringValueResolver"}
,
{
  "name":"org.springframework.util.concurrent.ListenableFuture"}
,
{
  "name":"org.springframework.util.concurrent.ListenableFutureTask"}
,
{
  "name":"org.springframework.util.unit.DataSize"}
,
{
  "name":"org.springframework.validation.BindingResult"}
,
{
  "name":"org.springframework.validation.DefaultMessageCodesResolver$Format"}
,
{
  "name":"org.springframework.validation.Errors"}
,
{
  "name":"org.springframework.validation.MessageCodesResolver"}
,
{
  "name":"org.springframework.validation.SmartValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.validation.Validator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.validation.beanvalidation.BeanValidationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"close","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getConstraintValidatorFactory","parameterTypes":[] }, 
    {"name":"getMessageInterpolator","parameterTypes":[] }, 
    {"name":"getParameterNameProvider","parameterTypes":[] }, 
    {"name":"getTraversableResolver","parameterTypes":[] }, 
    {"name":"getValidator","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"unwrap","parameterTypes":["java.lang.Class"] }, 
    {"name":"usingContext","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queriedMethods":[
    {"name":"setValidatedAnnotationType","parameterTypes":["java.lang.Class"] }, 
    {"name":"setValidator","parameterTypes":["javax.validation.Validator"] }, 
    {"name":"setValidatorFactory","parameterTypes":["javax.validation.ValidatorFactory"] }
  ]}
,
{
  "name":"org.springframework.validation.beanvalidation.SpringValidatorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"forExecutables","parameterTypes":[] }, 
    {"name":"getConstraintsForClass","parameterTypes":["java.lang.Class"] }, 
    {"name":"supports","parameterTypes":["java.lang.Class"] }, 
    {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors"] }, 
    {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }, 
    {"name":"validate","parameterTypes":["java.lang.Object","java.lang.Class[]"] }, 
    {"name":"validateProperty","parameterTypes":["java.lang.Object","java.lang.String","java.lang.Class[]"] }, 
    {"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }, 
    {"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","java.lang.Class[]"] }
  ]}
,
{
  "name":"org.springframework.web.HttpMediaTypeNotAcceptableException"}
,
{
  "name":"org.springframework.web.accept.ContentNegotiationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getAllFileExtensions","parameterTypes":[] }, 
    {"name":"resolveFileExtensions","parameterTypes":["org.springframework.http.MediaType"] }, 
    {"name":"resolveMediaTypes","parameterTypes":["org.springframework.web.context.request.NativeWebRequest"] }
  ]}
,
{
  "name":"org.springframework.web.accept.ContentNegotiationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.accept.MediaTypeFileExtensionResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.bind.ServletRequestDataBinder"}
,
{
  "name":"org.springframework.web.bind.annotation.CrossOrigin"}
,
{
  "name":"org.springframework.web.bind.annotation.ExceptionHandler",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"org.springframework.web.bind.annotation.GetMapping",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"consumes","parameterTypes":[] }, 
    {"name":"headers","parameterTypes":[] }, 
    {"name":"name","parameterTypes":[] }, 
    {"name":"params","parameterTypes":[] }, 
    {"name":"path","parameterTypes":[] }, 
    {"name":"produces","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.web.bind.annotation.Mapping",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.web.bind.annotation.RequestMapping",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"consumes","parameterTypes":[] }, 
    {"name":"headers","parameterTypes":[] }, 
    {"name":"method","parameterTypes":[] }, 
    {"name":"name","parameterTypes":[] }, 
    {"name":"params","parameterTypes":[] }, 
    {"name":"path","parameterTypes":[] }, 
    {"name":"produces","parameterTypes":[] }, 
    {"name":"value","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.web.bind.annotation.ResponseBody",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.web.bind.support.ConfigurableWebBindingInitializer"}
,
{
  "name":"org.springframework.web.bind.support.SessionAttributeStore"}
,
{
  "name":"org.springframework.web.bind.support.WebBindingInitializer"}
,
{
  "name":"org.springframework.web.bind.support.WebDataBinderFactory"}
,
{
  "name":"org.springframework.web.client.AsyncRestTemplate"}
,
{
  "name":"org.springframework.web.client.RestTemplate"}
,
{
  "name":"org.springframework.web.context.ConfigurableWebApplicationContext"}
,
{
  "name":"org.springframework.web.context.ServletContextAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.context.WebApplicationContext"}
,
{
  "name":"org.springframework.web.context.request.NativeWebRequest"}
,
{
  "name":"org.springframework.web.context.request.RequestAttributes"}
,
{
  "name":"org.springframework.web.context.request.RequestContextListener"}
,
{
  "name":"org.springframework.web.context.request.ServletRequestAttributes"}
,
{
  "name":"org.springframework.web.context.request.WebRequest"}
,
{
  "name":"org.springframework.web.context.request.async.WebAsyncManager"}
,
{
  "name":"org.springframework.web.context.support.GenericWebApplicationContext"}
,
{
  "name":"org.springframework.web.context.support.WebApplicationObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"setServletContext","parameterTypes":["javax.servlet.ServletContext"] }]}
,
{
  "name":"org.springframework.web.cors.CorsConfiguration"}
,
{
  "name":"org.springframework.web.cors.CorsConfigurationSource"}
,
{
  "name":"org.springframework.web.cors.CorsProcessor"}
,
{
  "name":"org.springframework.web.filter.CharacterEncodingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getEncoding","parameterTypes":[] }, 
    {"name":"isForceRequestEncoding","parameterTypes":[] }, 
    {"name":"isForceResponseEncoding","parameterTypes":[] }, 
    {"name":"setEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setForceEncoding","parameterTypes":["boolean"] }, 
    {"name":"setForceRequestEncoding","parameterTypes":["boolean"] }, 
    {"name":"setForceResponseEncoding","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.web.filter.DelegatingFilterProxy",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.web.filter.FormContentFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"setCharset","parameterTypes":["java.nio.charset.Charset"] }, 
    {"name":"setFormConverter","parameterTypes":["org.springframework.http.converter.FormHttpMessageConverter"] }
  ]}
,
{
  "name":"org.springframework.web.filter.GenericFilterBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getEnvironment","parameterTypes":[] }, 
    {"name":"getFilterConfig","parameterTypes":[] }, 
    {"name":"init","parameterTypes":["javax.servlet.FilterConfig"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }, 
    {"name":"setServletContext","parameterTypes":["javax.servlet.ServletContext"] }
  ]}
,
{
  "name":"org.springframework.web.filter.OncePerRequestFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"doFilter","parameterTypes":["javax.servlet.ServletRequest","javax.servlet.ServletResponse","javax.servlet.FilterChain"] }]}
,
{
  "name":"org.springframework.web.filter.RequestContextFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"setThreadContextInheritable","parameterTypes":["boolean"] }]}
,
{
  "name":"org.springframework.web.method.ControllerAdviceBean"}
,
{
  "name":"org.springframework.web.method.HandlerMethod"}
,
{
  "name":"org.springframework.web.method.annotation.InitBinderDataBinderFactory"}
,
{
  "name":"org.springframework.web.method.annotation.ModelFactory"}
,
{
  "name":"org.springframework.web.method.annotation.SessionAttributesHandler"}
,
{
  "name":"org.springframework.web.method.support.CompositeUriComponentsContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"contributeMethodArgument","parameterTypes":["org.springframework.core.MethodParameter","java.lang.Object","org.springframework.web.util.UriComponentsBuilder","java.util.Map","org.springframework.core.convert.ConversionService"] }, 
    {"name":"supportsParameter","parameterTypes":["org.springframework.core.MethodParameter"] }
  ]}
,
{
  "name":"org.springframework.web.method.support.HandlerMethodArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.method.support.InvocableHandlerMethod"}
,
{
  "name":"org.springframework.web.method.support.ModelAndViewContainer"}
,
{
  "name":"org.springframework.web.method.support.UriComponentsContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.multipart.MultipartException"}
,
{
  "name":"org.springframework.web.multipart.MultipartHttpServletRequest"}
,
{
  "name":"org.springframework.web.multipart.MultipartResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.multipart.commons.CommonsMultipartResolver"}
,
{
  "name":"org.springframework.web.multipart.support.StandardServletMultipartResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"cleanupMultipart","parameterTypes":["org.springframework.web.multipart.MultipartHttpServletRequest"] }, 
    {"name":"isMultipart","parameterTypes":["javax.servlet.http.HttpServletRequest"] }, 
    {"name":"resolveMultipart","parameterTypes":["javax.servlet.http.HttpServletRequest"] }
  ]}
,
{
  "name":"org.springframework.web.server.ServerWebExchange"}
,
{
  "name":"org.springframework.web.server.session.CookieWebSessionIdResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"expireSession","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }, 
    {"name":"resolveSessionIds","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }, 
    {"name":"setSessionId","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.web.server.session.WebSessionIdResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.server.session.WebSessionManager"}
,
{
  "name":"org.springframework.web.servlet.AsyncHandlerInterceptor"}
,
{
  "name":"org.springframework.web.servlet.DispatcherServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.FlashMap"}
,
{
  "name":"org.springframework.web.servlet.FlashMapManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.FrameworkServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getContextAttribute","parameterTypes":[] }, 
    {"name":"getContextClass","parameterTypes":[] }, 
    {"name":"getContextConfigLocation","parameterTypes":[] }, 
    {"name":"getContextId","parameterTypes":[] }, 
    {"name":"getNamespace","parameterTypes":[] }, 
    {"name":"getServletContextAttributeName","parameterTypes":[] }, 
    {"name":"getWebApplicationContext","parameterTypes":[] }, 
    {"name":"isEnableLoggingRequestDetails","parameterTypes":[] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.event.ContextRefreshedEvent"] }, 
    {"name":"refresh","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setContextAttribute","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextClass","parameterTypes":["java.lang.Class"] }, 
    {"name":"setContextConfigLocation","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextId","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextInitializerClasses","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextInitializers","parameterTypes":["org.springframework.context.ApplicationContextInitializer[]"] }, 
    {"name":"setDispatchOptionsRequest","parameterTypes":["boolean"] }, 
    {"name":"setDispatchTraceRequest","parameterTypes":["boolean"] }, 
    {"name":"setEnableLoggingRequestDetails","parameterTypes":["boolean"] }, 
    {"name":"setNamespace","parameterTypes":["java.lang.String"] }, 
    {"name":"setPublishContext","parameterTypes":["boolean"] }, 
    {"name":"setPublishEvents","parameterTypes":["boolean"] }, 
    {"name":"setThreadContextInheritable","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.HandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.HandlerExceptionResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.HandlerExecutionChain"}
,
{
  "name":"org.springframework.web.servlet.HandlerInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.HandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.HttpServletBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getEnvironment","parameterTypes":[] }, 
    {"name":"getServletName","parameterTypes":[] }, 
    {"name":"init","parameterTypes":[] }, 
    {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.LocaleContextResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.LocaleResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.ModelAndView"}
,
{
  "name":"org.springframework.web.servlet.RequestToViewNameTranslator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.ThemeResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.View",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.ViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"}
,
{
  "name":"org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"}
,
{
  "name":"org.springframework.web.servlet.config.annotation.CorsRegistry"}
,
{
  "name":"org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"}
,
{
  "name":"org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setConfigurers","parameterTypes":["java.util.List"] }]}
,
{
  "name":"org.springframework.web.servlet.config.annotation.EnableWebMvc",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.springframework.web.servlet.config.annotation.InterceptorRegistry"}
,
{
  "name":"org.springframework.web.servlet.config.annotation.PathMatchConfigurer"}
,
{
  "name":"org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration"}
,
{
  "name":"org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"}
,
{
  "name":"org.springframework.web.servlet.config.annotation.ViewControllerRegistry"}
,
{
  "name":"org.springframework.web.servlet.config.annotation.ViewResolverRegistry"}
,
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"beanNameHandlerMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"defaultServletHandlerMapping","parameterTypes":[] }, 
    {"name":"handlerExceptionResolver","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, 
    {"name":"handlerFunctionAdapter","parameterTypes":[] }, 
    {"name":"httpRequestHandlerAdapter","parameterTypes":[] }, 
    {"name":"mvcPathMatcher","parameterTypes":[] }, 
    {"name":"mvcPatternParser","parameterTypes":[] }, 
    {"name":"mvcResourceUrlProvider","parameterTypes":[] }, 
    {"name":"mvcUriComponentsContributor","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"] }, 
    {"name":"mvcUrlPathHelper","parameterTypes":[] }, 
    {"name":"mvcViewResolver","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, 
    {"name":"resourceHandlerMapping","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"routerFunctionMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"simpleControllerHandlerAdapter","parameterTypes":[] }, 
    {"name":"viewControllerHandlerMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"viewNameTranslator","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.function.HandlerFunction"}
,
{
  "name":"org.springframework.web.servlet.function.RouterFunction"}
,
{
  "name":"org.springframework.web.servlet.function.ServerRequest"}
,
{
  "name":"org.springframework.web.servlet.function.ServerResponse"}
,
{
  "name":"org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getLastModified","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.Object"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"handle","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object"] }, 
    {"name":"supports","parameterTypes":["java.lang.Object"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.function.support.RouterFunctionMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"afterPropertiesSet","parameterTypes":[] }]}
,
{
  "name":"org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"initApplicationContext","parameterTypes":[] }, 
    {"name":"setDetectHandlersInAncestorContexts","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getCorsConfigurationSource","parameterTypes":[] }, 
    {"name":"getCorsProcessor","parameterTypes":[] }, 
    {"name":"getDefaultHandler","parameterTypes":[] }, 
    {"name":"getHandler","parameterTypes":["javax.servlet.http.HttpServletRequest"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getPathMatcher","parameterTypes":[] }, 
    {"name":"getPatternParser","parameterTypes":[] }, 
    {"name":"getUrlPathHelper","parameterTypes":[] }, 
    {"name":"setAlwaysUseFullPath","parameterTypes":["boolean"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setCorsConfigurationSource","parameterTypes":["org.springframework.web.cors.CorsConfigurationSource"] }, 
    {"name":"setCorsConfigurations","parameterTypes":["java.util.Map"] }, 
    {"name":"setCorsProcessor","parameterTypes":["org.springframework.web.cors.CorsProcessor"] }, 
    {"name":"setDefaultHandler","parameterTypes":["java.lang.Object"] }, 
    {"name":"setInterceptors","parameterTypes":["java.lang.Object[]"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"setPathMatcher","parameterTypes":["org.springframework.util.PathMatcher"] }, 
    {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, 
    {"name":"setRemoveSemicolonContent","parameterTypes":["boolean"] }, 
    {"name":"setUrlDecode","parameterTypes":["boolean"] }, 
    {"name":"setUrlPathHelper","parameterTypes":["org.springframework.web.util.UrlPathHelper"] }, 
    {"name":"usesPathPatterns","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getHandlerMethods","parameterTypes":[] }, 
    {"name":"getHandlerMethodsForMappingName","parameterTypes":["java.lang.String"] }, 
    {"name":"getNamingStrategy","parameterTypes":[] }, 
    {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, 
    {"name":"setDetectHandlerMethodsInAncestorContexts","parameterTypes":["boolean"] }, 
    {"name":"setHandlerMethodMappingNamingStrategy","parameterTypes":["org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"] }, 
    {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, 
    {"name":"unregisterMapping","parameterTypes":["java.lang.Object"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
  "queriedMethods":[{"name":"handle","parameterTypes":[] }]}
,
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry"}
,
{
  "name":"org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getHandlerMap","parameterTypes":[] }, 
    {"name":"getPathPatternHandlerMap","parameterTypes":[] }, 
    {"name":"getRootHandler","parameterTypes":[] }, 
    {"name":"match","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.String"] }, 
    {"name":"setLazyInitHandlers","parameterTypes":["boolean"] }, 
    {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, 
    {"name":"setRootHandler","parameterTypes":["java.lang.Object"] }, 
    {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }, 
    {"name":"useTrailingSlashMatch","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"resolveException","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object","java.lang.Exception"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.handler.HandlerMappingIntrospector"}
,
{
  "name":"org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"}
,
{
  "name":"org.springframework.web.servlet.handler.MappedInterceptor"}
,
{
  "name":"org.springframework.web.servlet.handler.MatchableHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.handler.RequestMatchResult"}
,
{
  "name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.i18n.CookieLocaleResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"isLanguageTagCompliant","parameterTypes":[] }, 
    {"name":"isRejectInvalidCookies","parameterTypes":[] }, 
    {"name":"resolveLocale","parameterTypes":["javax.servlet.http.HttpServletRequest"] }, 
    {"name":"resolveLocaleContext","parameterTypes":["javax.servlet.http.HttpServletRequest"] }, 
    {"name":"setDefaultLocale","parameterTypes":["java.util.Locale"] }, 
    {"name":"setDefaultTimeZone","parameterTypes":["java.util.TimeZone"] }, 
    {"name":"setLanguageTagCompliant","parameterTypes":["boolean"] }, 
    {"name":"setLocale","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.util.Locale"] }, 
    {"name":"setLocaleContext","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","org.springframework.context.i18n.LocaleContext"] }, 
    {"name":"setRejectInvalidCookies","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.i18n.LocaleChangeInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getHttpMethods","parameterTypes":[] }, 
    {"name":"getParamName","parameterTypes":[] }, 
    {"name":"isIgnoreInvalidLocale","parameterTypes":[] }, 
    {"name":"isLanguageTagCompliant","parameterTypes":[] }, 
    {"name":"setHttpMethods","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setIgnoreInvalidLocale","parameterTypes":["boolean"] }, 
    {"name":"setLanguageTagCompliant","parameterTypes":["boolean"] }, 
    {"name":"setParamName","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.mvc.AbstractController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"handleRequest","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse"] }, 
    {"name":"isSynchronizeOnSession","parameterTypes":[] }, 
    {"name":"setSynchronizeOnSession","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.mvc.AbstractUrlViewController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"setAlwaysUseFullPath","parameterTypes":["boolean"] }, 
    {"name":"setRemoveSemicolonContent","parameterTypes":["boolean"] }, 
    {"name":"setUrlDecode","parameterTypes":["boolean"] }, 
    {"name":"setUrlPathHelper","parameterTypes":["org.springframework.web.util.UrlPathHelper"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.mvc.Controller",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getLastModified","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.Object"] }, 
    {"name":"handle","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object"] }, 
    {"name":"supports","parameterTypes":["java.lang.Object"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.mvc.ParameterizableViewController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getStatusCode","parameterTypes":[] }, 
    {"name":"getView","parameterTypes":[] }, 
    {"name":"getViewName","parameterTypes":[] }, 
    {"name":"isStatusOnly","parameterTypes":[] }, 
    {"name":"setStatusCode","parameterTypes":["org.springframework.http.HttpStatus"] }, 
    {"name":"setStatusOnly","parameterTypes":["boolean"] }, 
    {"name":"setView","parameterTypes":["org.springframework.web.servlet.View"] }, 
    {"name":"setViewName","parameterTypes":["java.lang.String"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getLastModified","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.Object"] }, 
    {"name":"handle","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object"] }, 
    {"name":"supports","parameterTypes":["java.lang.Object"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.mvc.UrlFilenameViewController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.mvc.condition.PathPatternsRequestCondition"}
,
{
  "name":"org.springframework.web.servlet.mvc.condition.PatternsRequestCondition"}
,
{
  "name":"org.springframework.web.servlet.mvc.condition.RequestCondition"}
,
{
  "name":"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getLastModified","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.Object"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"handle","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"supports","parameterTypes":["java.lang.Object"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfo"}
,
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfo$BuilderConfiguration"}
,
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
  "queriedMethods":[{"name":"handle","parameterTypes":[] }]}
,
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"}
,
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getBuilderConfiguration","parameterTypes":[] }, 
    {"name":"getContentNegotiationManager","parameterTypes":[] }, 
    {"name":"getFileExtensions","parameterTypes":[] }, 
    {"name":"getPathPrefixes","parameterTypes":[] }, 
    {"name":"match","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.String"] }, 
    {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, 
    {"name":"registerMapping","parameterTypes":["org.springframework.web.servlet.mvc.method.RequestMappingInfo","java.lang.Object","java.lang.reflect.Method"] }, 
    {"name":"setContentNegotiationManager","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, 
    {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }, 
    {"name":"setPathPrefixes","parameterTypes":["java.util.Map"] }, 
    {"name":"setUseRegisteredSuffixPatternMatch","parameterTypes":["boolean"] }, 
    {"name":"setUseSuffixPatternMatch","parameterTypes":["boolean"] }, 
    {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }, 
    {"name":"useRegisteredSuffixPatternMatch","parameterTypes":[] }, 
    {"name":"useSuffixPatternMatch","parameterTypes":[] }, 
    {"name":"useTrailingSlashMatch","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"}
,
{
  "name":"org.springframework.web.servlet.resource.ResourceUrlProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"preHandle","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object"] }]}
,
{
  "name":"org.springframework.web.servlet.support.AbstractFlashMapManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getFlashMapTimeout","parameterTypes":[] }, 
    {"name":"getUrlPathHelper","parameterTypes":[] }, 
    {"name":"retrieveAndUpdate","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse"] }, 
    {"name":"saveOutputFlashMap","parameterTypes":["org.springframework.web.servlet.FlashMap","javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse"] }, 
    {"name":"setFlashMapTimeout","parameterTypes":["int"] }, 
    {"name":"setUrlPathHelper","parameterTypes":["org.springframework.web.util.UrlPathHelper"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.support.RequestContext"}
,
{
  "name":"org.springframework.web.servlet.support.RequestDataValueProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.support.SessionFlashMapManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.support.WebContentGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getCacheControl","parameterTypes":[] }, 
    {"name":"getCacheSeconds","parameterTypes":[] }, 
    {"name":"getSupportedMethods","parameterTypes":[] }, 
    {"name":"getVaryByRequestHeaders","parameterTypes":[] }, 
    {"name":"isAlwaysMustRevalidate","parameterTypes":[] }, 
    {"name":"isRequireSession","parameterTypes":[] }, 
    {"name":"isUseCacheControlHeader","parameterTypes":[] }, 
    {"name":"isUseCacheControlNoStore","parameterTypes":[] }, 
    {"name":"isUseExpiresHeader","parameterTypes":[] }, 
    {"name":"setAlwaysMustRevalidate","parameterTypes":["boolean"] }, 
    {"name":"setCacheControl","parameterTypes":["org.springframework.http.CacheControl"] }, 
    {"name":"setCacheSeconds","parameterTypes":["int"] }, 
    {"name":"setRequireSession","parameterTypes":["boolean"] }, 
    {"name":"setSupportedMethods","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setUseCacheControlHeader","parameterTypes":["boolean"] }, 
    {"name":"setUseCacheControlNoStore","parameterTypes":["boolean"] }, 
    {"name":"setUseExpiresHeader","parameterTypes":["boolean"] }, 
    {"name":"setVaryByRequestHeaders","parameterTypes":["java.lang.String[]"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.theme.AbstractThemeResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getDefaultThemeName","parameterTypes":[] }, 
    {"name":"setDefaultThemeName","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.theme.ThemeChangeInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"preHandle","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object"] }]}
,
{
  "name":"org.springframework.web.servlet.view.AbstractCachingViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"clearCache","parameterTypes":[] }, 
    {"name":"getCacheFilter","parameterTypes":[] }, 
    {"name":"getCacheLimit","parameterTypes":[] }, 
    {"name":"isCache","parameterTypes":[] }, 
    {"name":"isCacheUnresolved","parameterTypes":[] }, 
    {"name":"removeFromCache","parameterTypes":["java.lang.String","java.util.Locale"] }, 
    {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }, 
    {"name":"setCache","parameterTypes":["boolean"] }, 
    {"name":"setCacheFilter","parameterTypes":["org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"] }, 
    {"name":"setCacheLimit","parameterTypes":["int"] }, 
    {"name":"setCacheUnresolved","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"}
,
{
  "name":"org.springframework.web.servlet.view.AbstractUrlBasedView"}
,
{
  "name":"org.springframework.web.servlet.view.AbstractView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addStaticAttribute","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"getAttributesMap","parameterTypes":[] }, 
    {"name":"getBeanName","parameterTypes":[] }, 
    {"name":"getContentType","parameterTypes":[] }, 
    {"name":"getRequestContextAttribute","parameterTypes":[] }, 
    {"name":"getStaticAttributes","parameterTypes":[] }, 
    {"name":"isExposePathVariables","parameterTypes":[] }, 
    {"name":"render","parameterTypes":["java.util.Map","javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse"] }, 
    {"name":"setAttributes","parameterTypes":["java.util.Properties"] }, 
    {"name":"setAttributesCSV","parameterTypes":["java.lang.String"] }, 
    {"name":"setAttributesMap","parameterTypes":["java.util.Map"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setContentType","parameterTypes":["java.lang.String"] }, 
    {"name":"setExposeContextBeansAsAttributes","parameterTypes":["boolean"] }, 
    {"name":"setExposePathVariables","parameterTypes":["boolean"] }, 
    {"name":"setExposedContextBeanNames","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setRequestContextAttribute","parameterTypes":["java.lang.String"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.web.servlet.view.BeanNameViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getViewName","parameterTypes":["javax.servlet.http.HttpServletRequest"] }]}
,
{
  "name":"org.springframework.web.servlet.view.InternalResourceViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.view.UrlBasedViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getAttributesMap","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getRedirectHosts","parameterTypes":[] }, 
    {"name":"setAttributes","parameterTypes":["java.util.Properties"] }, 
    {"name":"setAttributesMap","parameterTypes":["java.util.Map"] }, 
    {"name":"setContentType","parameterTypes":["java.lang.String"] }, 
    {"name":"setExposeContextBeansAsAttributes","parameterTypes":["boolean"] }, 
    {"name":"setExposePathVariables","parameterTypes":["java.lang.Boolean"] }, 
    {"name":"setExposedContextBeanNames","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"setPrefix","parameterTypes":["java.lang.String"] }, 
    {"name":"setRedirectContextRelative","parameterTypes":["boolean"] }, 
    {"name":"setRedirectHosts","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setRedirectHttp10Compatible","parameterTypes":["boolean"] }, 
    {"name":"setRequestContextAttribute","parameterTypes":["java.lang.String"] }, 
    {"name":"setSuffix","parameterTypes":["java.lang.String"] }, 
    {"name":"setViewClass","parameterTypes":["java.lang.Class"] }, 
    {"name":"setViewNames","parameterTypes":["java.lang.String[]"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.view.ViewResolverComposite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setServletContext","parameterTypes":["javax.servlet.ServletContext"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.view.groovy.GroovyMarkupConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getTemplateEngine","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setLocale","parameterTypes":["java.util.Locale"] }
  ]}
,
{
  "name":"org.springframework.web.servlet.view.json.MappingJackson2JsonView"}
,
{
  "name":"org.springframework.web.util.CookieGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addCookie","parameterTypes":["javax.servlet.http.HttpServletResponse","java.lang.String"] }, 
    {"name":"getCookieDomain","parameterTypes":[] }, 
    {"name":"getCookieMaxAge","parameterTypes":[] }, 
    {"name":"getCookieName","parameterTypes":[] }, 
    {"name":"getCookiePath","parameterTypes":[] }, 
    {"name":"isCookieHttpOnly","parameterTypes":[] }, 
    {"name":"isCookieSecure","parameterTypes":[] }, 
    {"name":"removeCookie","parameterTypes":["javax.servlet.http.HttpServletResponse"] }, 
    {"name":"setCookieDomain","parameterTypes":["java.lang.String"] }, 
    {"name":"setCookieHttpOnly","parameterTypes":["boolean"] }, 
    {"name":"setCookieMaxAge","parameterTypes":["java.lang.Integer"] }, 
    {"name":"setCookieName","parameterTypes":["java.lang.String"] }, 
    {"name":"setCookiePath","parameterTypes":["java.lang.String"] }, 
    {"name":"setCookieSecure","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.springframework.web.util.UriComponentsBuilder"}
,
{
  "name":"org.springframework.web.util.UrlPathHelper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.util.pattern.PathPattern"}
,
{
  "name":"org.springframework.web.util.pattern.PathPatternParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.web.util.pattern.PatternParseException"}
,
{
  "name":"org.springframework.webflow.action.AbstractAction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"execute","parameterTypes":["org.springframework.webflow.execution.RequestContext"] }, 
    {"name":"getEventFactorySupport","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.webflow.action.EvaluateAction"}
,
{
  "name":"org.springframework.webflow.action.EventFactorySupport"}
,
{
  "name":"org.springframework.webflow.action.RenderAction"}
,
{
  "name":"org.springframework.webflow.action.SetAction"}
,
{
  "name":"org.springframework.webflow.config.DefaultFlowRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"setParent","parameterTypes":["org.springframework.webflow.definition.registry.FlowDefinitionRegistry"] }]}
,
{
  "name":"org.springframework.webflow.context.ExternalContext"}
,
{
  "name":"org.springframework.webflow.context.servlet.AjaxHandler"}
,
{
  "name":"org.springframework.webflow.context.servlet.DefaultFlowUrlHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getFlowId","parameterTypes":["javax.servlet.http.HttpServletRequest"] }, 
    {"name":"setEncodingScheme","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.webflow.context.servlet.FlowUrlHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.webflow.context.servlet.ServletExternalContext"}
,
{
  "name":"org.springframework.webflow.core.FlowException"}
,
{
  "name":"org.springframework.webflow.core.collection.AttributeMap"}
,
{
  "name":"org.springframework.webflow.core.collection.MutableAttributeMap"}
,
{
  "name":"org.springframework.webflow.definition.FlowDefinition"}
,
{
  "name":"org.springframework.webflow.definition.StateDefinition"}
,
{
  "name":"org.springframework.webflow.definition.registry.FlowDefinitionConstructionException"}
,
{
  "name":"org.springframework.webflow.definition.registry.FlowDefinitionHolder"}
,
{
  "name":"org.springframework.webflow.definition.registry.FlowDefinitionLocator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.webflow.definition.registry.FlowDefinitionRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.webflow.definition.registry.FlowDefinitionRegistryImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"containsFlowDefinition","parameterTypes":["java.lang.String"] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getFlowDefinition","parameterTypes":["java.lang.String"] }, 
    {"name":"getFlowDefinitionCount","parameterTypes":[] }, 
    {"name":"getFlowDefinitionIds","parameterTypes":[] }, 
    {"name":"getParent","parameterTypes":[] }, 
    {"name":"registerFlowDefinition","parameterTypes":["org.springframework.webflow.definition.FlowDefinition"] }, 
    {"name":"registerFlowDefinition","parameterTypes":["org.springframework.webflow.definition.registry.FlowDefinitionHolder"] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.webflow.definition.registry.NoSuchFlowDefinitionException"}
,
{
  "name":"org.springframework.webflow.engine.ActionState"}
,
{
  "name":"org.springframework.webflow.engine.DecisionState"}
,
{
  "name":"org.springframework.webflow.engine.EndState"}
,
{
  "name":"org.springframework.webflow.engine.Flow"}
,
{
  "name":"org.springframework.webflow.engine.FlowExecutionExceptionHandler"}
,
{
  "name":"org.springframework.webflow.engine.FlowVariable"}
,
{
  "name":"org.springframework.webflow.engine.SubflowAttributeMapper"}
,
{
  "name":"org.springframework.webflow.engine.SubflowState"}
,
{
  "name":"org.springframework.webflow.engine.Transition"}
,
{
  "name":"org.springframework.webflow.engine.TransitionCriteria"}
,
{
  "name":"org.springframework.webflow.engine.TransitionableState"}
,
{
  "name":"org.springframework.webflow.engine.ViewState"}
,
{
  "name":"org.springframework.webflow.engine.ViewVariable"}
,
{
  "name":"org.springframework.webflow.engine.builder.BinderConfiguration"}
,
{
  "name":"org.springframework.webflow.engine.builder.FlowArtifactFactory"}
,
{
  "name":"org.springframework.webflow.engine.builder.FlowBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.webflow.engine.builder.FlowBuilderContext"}
,
{
  "name":"org.springframework.webflow.engine.builder.FlowBuilderException"}
,
{
  "name":"org.springframework.webflow.engine.builder.ViewFactoryCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.webflow.engine.builder.model.FlowModelFlowBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"buildEndActions","parameterTypes":[] }, 
    {"name":"buildExceptionHandlers","parameterTypes":[] }, 
    {"name":"buildGlobalTransitions","parameterTypes":[] }, 
    {"name":"buildInputMapper","parameterTypes":[] }, 
    {"name":"buildOutputMapper","parameterTypes":[] }, 
    {"name":"buildStartActions","parameterTypes":[] }, 
    {"name":"buildStates","parameterTypes":[] }, 
    {"name":"buildVariables","parameterTypes":[] }, 
    {"name":"getFlowResourceString","parameterTypes":[] }, 
    {"name":"hasFlowChanged","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]}
,
{
  "name":"org.springframework.webflow.engine.builder.model.LocalFlowBuilderContext"}
,
{
  "name":"org.springframework.webflow.engine.builder.support.AbstractFlowBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"dispose","parameterTypes":[] }, 
    {"name":"getFlow","parameterTypes":[] }, 
    {"name":"init","parameterTypes":["org.springframework.webflow.engine.builder.FlowBuilderContext"] }
  ]}
,
{
  "name":"org.springframework.webflow.engine.builder.support.FlowBuilderServices",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]}
,
{
  "name":"org.springframework.webflow.engine.model.AbstractMappingModel"}
,
{
  "name":"org.springframework.webflow.engine.model.ActionStateModel"}
,
{
  "name":"org.springframework.webflow.engine.model.AttributeModel"}
,
{
  "name":"org.springframework.webflow.engine.model.BinderModel"}
,
{
  "name":"org.springframework.webflow.engine.model.DecisionStateModel"}
,
{
  "name":"org.springframework.webflow.engine.model.EndStateModel"}
,
{
  "name":"org.springframework.webflow.engine.model.EvaluateModel"}
,
{
  "name":"org.springframework.webflow.engine.model.ExceptionHandlerModel"}
,
{
  "name":"org.springframework.webflow.engine.model.FlowModel"}
,
{
  "name":"org.springframework.webflow.engine.model.IfModel"}
,
{
  "name":"org.springframework.webflow.engine.model.InputModel"}
,
{
  "name":"org.springframework.webflow.engine.model.OutputModel"}
,
{
  "name":"org.springframework.webflow.engine.model.PersistenceContextModel"}
,
{
  "name":"org.springframework.webflow.engine.model.RenderModel"}
,
{
  "name":"org.springframework.webflow.engine.model.SecuredModel"}
,
{
  "name":"org.springframework.webflow.engine.model.SetModel"}
,
{
  "name":"org.springframework.webflow.engine.model.SubflowStateModel"}
,
{
  "name":"org.springframework.webflow.engine.model.TransitionModel"}
,
{
  "name":"org.springframework.webflow.engine.model.VarModel"}
,
{
  "name":"org.springframework.webflow.engine.model.ViewStateModel"}
,
{
  "name":"org.springframework.webflow.engine.model.builder.FlowModelBuilder"}
,
{
  "name":"org.springframework.webflow.engine.model.registry.FlowModelRegistry"}
,
{
  "name":"org.springframework.webflow.engine.support.ActionTransitionCriteria"}
,
{
  "name":"org.springframework.webflow.execution.Action",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.webflow.execution.Event"}
,
{
  "name":"org.springframework.webflow.execution.FlowExecution"}
,
{
  "name":"org.springframework.webflow.execution.FlowExecutionFactory"}
,
{
  "name":"org.springframework.webflow.execution.FlowExecutionKey"}
,
{
  "name":"org.springframework.webflow.execution.FlowExecutionKeyFactory"}
,
{
  "name":"org.springframework.webflow.execution.FlowExecutionOutcome"}
,
{
  "name":"org.springframework.webflow.execution.RequestContext"}
,
{
  "name":"org.springframework.webflow.execution.ViewFactory"}
,
{
  "name":"org.springframework.webflow.execution.repository.FlowExecutionLock"}
,
{
  "name":"org.springframework.webflow.execution.repository.FlowExecutionRepository"}
,
{
  "name":"org.springframework.webflow.execution.repository.FlowExecutionRepositoryException"}
,
{
  "name":"org.springframework.webflow.executor.FlowExecutionResult"}
,
{
  "name":"org.springframework.webflow.executor.FlowExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.webflow.executor.FlowExecutorImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"launchExecution","parameterTypes":["java.lang.String","org.springframework.webflow.core.collection.MutableAttributeMap","org.springframework.webflow.context.ExternalContext"] }, 
    {"name":"resumeExecution","parameterTypes":["java.lang.String","org.springframework.webflow.context.ExternalContext"] }
  ]}
,
{
  "name":"org.springframework.webflow.expression.spel.WebFlowSpringELExpressionParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.springframework.webflow.mvc.builder.MvcViewFactoryCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"createViewFactory","parameterTypes":["org.springframework.binding.expression.Expression","org.springframework.binding.expression.ExpressionParser","org.springframework.binding.convert.ConversionService","org.springframework.webflow.engine.builder.BinderConfiguration","org.springframework.validation.Validator","org.springframework.webflow.validation.ValidationHintResolver"] }, 
    {"name":"getViewIdByConvention","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.springframework.webflow.mvc.servlet.FlowHandler"}
,
{
  "name":"org.springframework.webflow.mvc.servlet.FlowHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getAjaxHandler","parameterTypes":[] }, 
    {"name":"getFlowExecutor","parameterTypes":[] }, 
    {"name":"getFlowUrlHandler","parameterTypes":[] }, 
    {"name":"getHosts","parameterTypes":[] }, 
    {"name":"getLastModified","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.Object"] }, 
    {"name":"getRedirectHttp10Compatible","parameterTypes":[] }, 
    {"name":"getSaveOutputToFlashScopeOnRedirect","parameterTypes":[] }, 
    {"name":"handle","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object"] }, 
    {"name":"setAjaxHandler","parameterTypes":["org.springframework.webflow.context.servlet.AjaxHandler"] }, 
    {"name":"setFlowExecutor","parameterTypes":["org.springframework.webflow.executor.FlowExecutor"] }, 
    {"name":"setFlowUrlHandler","parameterTypes":["org.springframework.webflow.context.servlet.FlowUrlHandler"] }, 
    {"name":"setHosts","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setRedirectHttp10Compatible","parameterTypes":["boolean"] }, 
    {"name":"setSaveOutputToFlashScopeOnRedirect","parameterTypes":["boolean"] }, 
    {"name":"setStatusCode","parameterTypes":["org.springframework.http.HttpStatus"] }
  ]}
,
{
  "name":"org.springframework.webflow.mvc.servlet.FlowHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getFlowRegistry","parameterTypes":[] }, 
    {"name":"getFlowUrlHandler","parameterTypes":[] }, 
    {"name":"setFlowRegistry","parameterTypes":["org.springframework.webflow.definition.registry.FlowDefinitionRegistry"] }, 
    {"name":"setFlowUrlHandler","parameterTypes":["org.springframework.webflow.context.servlet.FlowUrlHandler"] }
  ]}
,
{
  "name":"org.springframework.webflow.mvc.view.AbstractMvcViewFactory"}
,
{
  "name":"org.springframework.webflow.mvc.view.FlowViewResolver"}
,
{
  "name":"org.springframework.webflow.validation.ValidationHintResolver"}
,
{
  "name":"org.springmodules.cache.key.CacheKeyGenerator"}
,
{
  "name":"org.thymeleaf.IEngineConfiguration"}
,
{
  "name":"org.thymeleaf.ITemplateEngine",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.thymeleaf.IThrottledTemplateProcessor"}
,
{
  "name":"org.thymeleaf.TemplateEngine",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addDialect","parameterTypes":["java.lang.String","org.thymeleaf.dialect.IDialect"] }, 
    {"name":"addDialect","parameterTypes":["org.thymeleaf.dialect.IDialect"] }, 
    {"name":"addLinkBuilder","parameterTypes":["org.thymeleaf.linkbuilder.ILinkBuilder"] }, 
    {"name":"addMessageResolver","parameterTypes":["org.thymeleaf.messageresolver.IMessageResolver"] }, 
    {"name":"addTemplateResolver","parameterTypes":["org.thymeleaf.templateresolver.ITemplateResolver"] }, 
    {"name":"clearDialects","parameterTypes":[] }, 
    {"name":"clearTemplateCache","parameterTypes":[] }, 
    {"name":"clearTemplateCacheFor","parameterTypes":["java.lang.String"] }, 
    {"name":"getCacheManager","parameterTypes":[] }, 
    {"name":"getConfiguration","parameterTypes":[] }, 
    {"name":"getDecoupledTemplateLogicResolver","parameterTypes":[] }, 
    {"name":"getDialects","parameterTypes":[] }, 
    {"name":"getDialectsByPrefix","parameterTypes":[] }, 
    {"name":"getEngineContextFactory","parameterTypes":[] }, 
    {"name":"getLinkBuilders","parameterTypes":[] }, 
    {"name":"getMessageResolvers","parameterTypes":[] }, 
    {"name":"getTemplateResolvers","parameterTypes":[] }, 
    {"name":"isInitialized","parameterTypes":[] }, 
    {"name":"process","parameterTypes":["java.lang.String","java.util.Set","org.thymeleaf.context.IContext"] }, 
    {"name":"process","parameterTypes":["java.lang.String","java.util.Set","org.thymeleaf.context.IContext","java.io.Writer"] }, 
    {"name":"process","parameterTypes":["java.lang.String","org.thymeleaf.context.IContext"] }, 
    {"name":"process","parameterTypes":["java.lang.String","org.thymeleaf.context.IContext","java.io.Writer"] }, 
    {"name":"process","parameterTypes":["org.thymeleaf.TemplateSpec","org.thymeleaf.context.IContext"] }, 
    {"name":"process","parameterTypes":["org.thymeleaf.TemplateSpec","org.thymeleaf.context.IContext","java.io.Writer"] }, 
    {"name":"processThrottled","parameterTypes":["java.lang.String","java.util.Set","org.thymeleaf.context.IContext"] }, 
    {"name":"processThrottled","parameterTypes":["java.lang.String","org.thymeleaf.context.IContext"] }, 
    {"name":"processThrottled","parameterTypes":["org.thymeleaf.TemplateSpec","org.thymeleaf.context.IContext"] }, 
    {"name":"setAdditionalDialects","parameterTypes":["java.util.Set"] }, 
    {"name":"setCacheManager","parameterTypes":["org.thymeleaf.cache.ICacheManager"] }, 
    {"name":"setDecoupledTemplateLogicResolver","parameterTypes":["org.thymeleaf.templateparser.markup.decoupled.IDecoupledTemplateLogicResolver"] }, 
    {"name":"setDialect","parameterTypes":["org.thymeleaf.dialect.IDialect"] }, 
    {"name":"setDialects","parameterTypes":["java.util.Set"] }, 
    {"name":"setDialectsByPrefix","parameterTypes":["java.util.Map"] }, 
    {"name":"setEngineContextFactory","parameterTypes":["org.thymeleaf.context.IEngineContextFactory"] }, 
    {"name":"setLinkBuilder","parameterTypes":["org.thymeleaf.linkbuilder.ILinkBuilder"] }, 
    {"name":"setLinkBuilders","parameterTypes":["java.util.Set"] }, 
    {"name":"setMessageResolver","parameterTypes":["org.thymeleaf.messageresolver.IMessageResolver"] }, 
    {"name":"setMessageResolvers","parameterTypes":["java.util.Set"] }, 
    {"name":"setTemplateResolver","parameterTypes":["org.thymeleaf.templateresolver.ITemplateResolver"] }, 
    {"name":"setTemplateResolvers","parameterTypes":["java.util.Set"] }, 
    {"name":"threadIndex","parameterTypes":[] }
  ]}
,
{
  "name":"org.thymeleaf.TemplateSpec"}
,
{
  "name":"org.thymeleaf.cache.ICacheEntryValidity"}
,
{
  "name":"org.thymeleaf.cache.ICacheManager"}
,
{
  "name":"org.thymeleaf.context.IContext",
  "queryAllPublicMethods":true}
,
{
  "name":"org.thymeleaf.context.IEngineContextFactory"}
,
{
  "name":"org.thymeleaf.context.IExpressionContext",
  "queryAllPublicMethods":true}
,
{
  "name":"org.thymeleaf.context.ITemplateContext",
  "queryAllPublicMethods":true}
,
{
  "name":"org.thymeleaf.context.WebEngineContext"}
,
{
  "name":"org.thymeleaf.dialect.AbstractDialect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.thymeleaf.dialect.AbstractProcessorDialect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.thymeleaf.dialect.IDialect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.thymeleaf.dialect.IExpressionObjectDialect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.thymeleaf.dialect.IPostProcessorDialect"}
,
{
  "name":"org.thymeleaf.dialect.IProcessorDialect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.thymeleaf.engine.AbstractTemplateHandler"}
,
{
  "name":"org.thymeleaf.expression.IExpressionObjectFactory"}
,
{
  "name":"org.thymeleaf.extras.java8time.dialect.Java8TimeDialect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getExpressionObjectFactory","parameterTypes":[] }]}
,
{
  "name":"org.thymeleaf.linkbuilder.ILinkBuilder"}
,
{
  "name":"org.thymeleaf.messageresolver.IMessageResolver"}
,
{
  "name":"org.thymeleaf.model.IAttribute",
  "queryAllPublicMethods":true}
,
{
  "name":"org.thymeleaf.model.ICloseElementTag",
  "queryAllPublicMethods":true}
,
{
  "name":"org.thymeleaf.model.IElementTag",
  "queryAllPublicMethods":true}
,
{
  "name":"org.thymeleaf.model.IModel",
  "queryAllPublicMethods":true}
,
{
  "name":"org.thymeleaf.model.IModelFactory",
  "queryAllPublicMethods":true}
,
{
  "name":"org.thymeleaf.model.IProcessableElementTag",
  "queryAllPublicMethods":true}
,
{
  "name":"org.thymeleaf.model.IStandaloneElementTag",
  "queryAllPublicMethods":true}
,
{
  "name":"org.thymeleaf.model.ITemplateEvent",
  "queryAllPublicMethods":true}
,
{
  "name":"org.thymeleaf.model.IText",
  "queryAllPublicMethods":true}
,
{
  "name":"org.thymeleaf.processor.element.IElementModelStructureHandler",
  "queryAllPublicMethods":true}
,
{
  "name":"org.thymeleaf.spring5.ISpringTemplateEngine",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.thymeleaf.spring5.SpringTemplateEngine",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"setMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }, 
    {"name":"setTemplateEngineMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }
  ]}
,
{
  "name":"org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]}
,
{
  "name":"org.thymeleaf.spring5.view.AbstractThymeleafView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addStaticVariable","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"getBeanName","parameterTypes":[] }, 
    {"name":"getCharacterEncoding","parameterTypes":[] }, 
    {"name":"getContentType","parameterTypes":[] }, 
    {"name":"getForceContentType","parameterTypes":[] }, 
    {"name":"getProducePartialOutputWhileProcessing","parameterTypes":[] }, 
    {"name":"getStaticVariables","parameterTypes":[] }, 
    {"name":"getTemplateName","parameterTypes":[] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setCharacterEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setContentType","parameterTypes":["java.lang.String"] }, 
    {"name":"setForceContentType","parameterTypes":["boolean"] }, 
    {"name":"setProducePartialOutputWhileProcessing","parameterTypes":["boolean"] }, 
    {"name":"setStaticVariables","parameterTypes":["java.util.Map"] }, 
    {"name":"setTemplateName","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.thymeleaf.spring5.view.ThymeleafView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getMarkupSelector","parameterTypes":[] }, 
    {"name":"render","parameterTypes":["java.util.Map","javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse"] }, 
    {"name":"setMarkupSelector","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.thymeleaf.spring5.view.ThymeleafViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[{"name":"getOrder","parameterTypes":[] }]}
,
{
  "name":"org.thymeleaf.templatemode.TemplateMode"}
,
{
  "name":"org.thymeleaf.templateparser.markup.decoupled.IDecoupledTemplateLogicResolver"}
,
{
  "name":"org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"addTemplateAlias","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"clearTemplateAliases","parameterTypes":[] }, 
    {"name":"getCSSTemplateModePatternSpec","parameterTypes":[] }, 
    {"name":"getCSSTemplateModePatterns","parameterTypes":[] }, 
    {"name":"getCacheTTLMs","parameterTypes":[] }, 
    {"name":"getCacheablePatternSpec","parameterTypes":[] }, 
    {"name":"getCacheablePatterns","parameterTypes":[] }, 
    {"name":"getCharacterEncoding","parameterTypes":[] }, 
    {"name":"getForceSuffix","parameterTypes":[] }, 
    {"name":"getForceTemplateMode","parameterTypes":[] }, 
    {"name":"getHtml5TemplateModePatternSpec","parameterTypes":[] }, 
    {"name":"getHtml5TemplateModePatterns","parameterTypes":[] }, 
    {"name":"getHtmlTemplateModePatternSpec","parameterTypes":[] }, 
    {"name":"getHtmlTemplateModePatterns","parameterTypes":[] }, 
    {"name":"getJavaScriptTemplateModePatternSpec","parameterTypes":[] }, 
    {"name":"getJavaScriptTemplateModePatterns","parameterTypes":[] }, 
    {"name":"getLegacyHtml5TemplateModePatternSpec","parameterTypes":[] }, 
    {"name":"getLegacyHtml5TemplateModePatterns","parameterTypes":[] }, 
    {"name":"getNonCacheablePatternSpec","parameterTypes":[] }, 
    {"name":"getNonCacheablePatterns","parameterTypes":[] }, 
    {"name":"getPrefix","parameterTypes":[] }, 
    {"name":"getRawTemplateModePatternSpec","parameterTypes":[] }, 
    {"name":"getRawTemplateModePatterns","parameterTypes":[] }, 
    {"name":"getSuffix","parameterTypes":[] }, 
    {"name":"getTemplateAliases","parameterTypes":[] }, 
    {"name":"getTemplateMode","parameterTypes":[] }, 
    {"name":"getTextTemplateModePatternSpec","parameterTypes":[] }, 
    {"name":"getTextTemplateModePatterns","parameterTypes":[] }, 
    {"name":"getValidXhtmlTemplateModePatternSpec","parameterTypes":[] }, 
    {"name":"getValidXhtmlTemplateModePatterns","parameterTypes":[] }, 
    {"name":"getValidXmlTemplateModePatternSpec","parameterTypes":[] }, 
    {"name":"getValidXmlTemplateModePatterns","parameterTypes":[] }, 
    {"name":"getXhtmlTemplateModePatternSpec","parameterTypes":[] }, 
    {"name":"getXhtmlTemplateModePatterns","parameterTypes":[] }, 
    {"name":"getXmlTemplateModePatternSpec","parameterTypes":[] }, 
    {"name":"getXmlTemplateModePatterns","parameterTypes":[] }, 
    {"name":"isCacheable","parameterTypes":[] }, 
    {"name":"setCSSTemplateModePatterns","parameterTypes":["java.util.Set"] }, 
    {"name":"setCacheTTLMs","parameterTypes":["java.lang.Long"] }, 
    {"name":"setCacheable","parameterTypes":["boolean"] }, 
    {"name":"setCacheablePatterns","parameterTypes":["java.util.Set"] }, 
    {"name":"setCharacterEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setForceSuffix","parameterTypes":["boolean"] }, 
    {"name":"setForceTemplateMode","parameterTypes":["boolean"] }, 
    {"name":"setHtml5TemplateModePatterns","parameterTypes":["java.util.Set"] }, 
    {"name":"setHtmlTemplateModePatterns","parameterTypes":["java.util.Set"] }, 
    {"name":"setJavaScriptTemplateModePatterns","parameterTypes":["java.util.Set"] }, 
    {"name":"setLegacyHtml5TemplateModePatterns","parameterTypes":["java.util.Set"] }, 
    {"name":"setNonCacheablePatterns","parameterTypes":["java.util.Set"] }, 
    {"name":"setPrefix","parameterTypes":["java.lang.String"] }, 
    {"name":"setRawTemplateModePatterns","parameterTypes":["java.util.Set"] }, 
    {"name":"setSuffix","parameterTypes":["java.lang.String"] }, 
    {"name":"setTemplateAliases","parameterTypes":["java.util.Map"] }, 
    {"name":"setTemplateMode","parameterTypes":["java.lang.String"] }, 
    {"name":"setTemplateMode","parameterTypes":["org.thymeleaf.templatemode.TemplateMode"] }, 
    {"name":"setTextTemplateModePatterns","parameterTypes":["java.util.Set"] }, 
    {"name":"setValidXhtmlTemplateModePatterns","parameterTypes":["java.util.Set"] }, 
    {"name":"setValidXmlTemplateModePatterns","parameterTypes":["java.util.Set"] }, 
    {"name":"setXhtmlTemplateModePatterns","parameterTypes":["java.util.Set"] }, 
    {"name":"setXmlTemplateModePatterns","parameterTypes":["java.util.Set"] }
  ]}
,
{
  "name":"org.thymeleaf.templateresolver.AbstractTemplateResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queriedMethods":[
    {"name":"getCheckExistence","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getResolvablePatternSpec","parameterTypes":[] }, 
    {"name":"getResolvablePatterns","parameterTypes":[] }, 
    {"name":"getUseDecoupledLogic","parameterTypes":[] }, 
    {"name":"resolveTemplate","parameterTypes":["org.thymeleaf.IEngineConfiguration","java.lang.String","java.lang.String","java.util.Map"] }, 
    {"name":"setCheckExistence","parameterTypes":["boolean"] }, 
    {"name":"setName","parameterTypes":["java.lang.String"] }, 
    {"name":"setOrder","parameterTypes":["java.lang.Integer"] }, 
    {"name":"setResolvablePatterns","parameterTypes":["java.util.Set"] }, 
    {"name":"setUseDecoupledLogic","parameterTypes":["boolean"] }
  ]}
,
{
  "name":"org.thymeleaf.templateresolver.ClassLoaderTemplateResolver"}
,
{
  "name":"org.thymeleaf.templateresolver.FileTemplateResolver"}
,
{
  "name":"org.thymeleaf.templateresolver.ITemplateResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.thymeleaf.templateresolver.TemplateResolution"}
,
{
  "name":"org.thymeleaf.templateresource.ITemplateResource"}
,
{
  "name":"org.thymeleaf.util.PatternSpec"}
,
{
  "name":"org.w3c.dom.Element",
  "queryAllPublicMethods":true}
,
{
  "name":"org.w3c.dom.Node",
  "queryAllPublicMethods":true}
,
{
  "name":"org.w3c.dom.NodeList",
  "queryAllPublicMethods":true}
,
{
  "name":"org.yaml.snakeyaml.Yaml"}
,
{
  "name":"reactor.adapter.JdkFlowAdapter",
  "methods":[{"name":"publisherToFlowPublisher","parameterTypes":["org.reactivestreams.Publisher"] }],
  "queriedMethods":[{"name":"flowPublisherToFlux","parameterTypes":["java.util.concurrent.Flow$Publisher"] }]}
,
{
  "name":"reactor.core.CoreSubscriber",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"reactor.core.publisher.Flux"}
,
{
  "name":"reactor.core.publisher.Mono"}
,
{
  "name":"reactor.util.context.Context"}
,
{
  "name":"sun.management.ClassLoadingImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.management.CompilationImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.management.ManagementFactoryHelper$1",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.management.MemoryImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.management.MemoryManagerImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.management.MemoryPoolImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.management.RuntimeImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}]}
,
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.JavaKeyStore$DualFormatJKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.JavaKeyStore$JKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.NativePRNG$NonBlocking",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.ssl.KeyManagerFactoryImpl$SunX509",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.ssl.SSLContextImpl$DefaultSSLContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.ssl.SSLContextImpl$TLSContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.util.ObjectIdentifier"}
,
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.CertificateExtensions"}
,
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.NameConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}

]
